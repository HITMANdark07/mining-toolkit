<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OpenCast Mining Toolkit - Indian Edition</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; }
        .content-section { display: none; }
        .content-section.active { display: block; }
        .accordion-content { max-height: 0; overflow: hidden; transition: max-height 0.3s ease-in-out; }
        .accordion-header.active + .accordion-content { max-height: 2000px; /* Large enough for content */ }
        .accordion-header svg { transition: transform 0.3s; }
        .accordion-header.active svg { transform: rotate(180deg); }
        .modal-backdrop { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.6); z-index: 40; backdrop-filter: blur(4px); }
        .modal-content { max-height: 90vh; overflow-y: auto; }
        .kpi-card { transition: transform 0.2s; }
        .kpi-card:hover { transform: translateY(-5px); }
        .result-box { background-color: #f0fdf4; border-left: 4px solid #22c55e; padding: 1rem; margin-top: 1rem; border-radius: 0.25rem; }
    </style>
</head>
<body class="bg-gray-100">
    <!-- 
        IMPROVEMENTS IN THIS "INDIAN EDITION":
        1.  Currency Conversion: All financial inputs and outputs are in Indian Rupees (₹), with large values like CAPEX and NPV expressed in Crores (Cr).
        2.  Localized Labels: All relevant labels have been changed from USD ($) to INR (₹) and from Millions (M) to Crores (Cr).
        3.  Updated Default Values: The default numbers in the financial planners now reflect realistic values in the Indian currency system.
        4.  Localized LoM Chart: The dashboard chart now displays financial data in INR Crores.
        5.  Indian Unit Converter: The unit converter now includes options for converting between Lakhs and Crores.
        6.  Contextual Consistency: The entire toolkit is now financially and contextually aligned with Indian industry standards.
        7.  Complete Functionality: All sections now contain relevant, functional calculators.
    -->

    <!-- Top Navigation Bar -->
    <nav class="bg-gray-800 text-white shadow-lg sticky top-0 z-20">
        <div class="container mx-auto px-6 py-4 flex justify-between items-center">
            <h1 class="text-2xl font-bold">OpenCast Toolkit <span class="text-sm font-normal text-green-400">Indian Edition</span></h1>
             <div class="flex items-center space-x-4">
                <button id="converter-button" class="text-sm font-medium hover:text-green-300 hidden md:block">Converter</button>
                <button id="glossary-button" class="text-sm font-medium hover:text-green-300 hidden md:block">Glossary</button>
                <div class="relative">
                    <button id="menu-button" class="flex items-center bg-green-600 px-4 py-2 rounded-lg hover:bg-green-700">Menu <svg class="w-5 h-5 ml-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg></button>
                    <div id="dropdown-menu" class="hidden absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-xl py-2 z-30">
                        <a href="#" class="nav-link block px-4 py-2 text-gray-800 hover:bg-green-500 hover:text-white" data-target="dashboard">Dashboard</a>
                        <a href="#" class="nav-link block px-4 py-2 text-gray-800 hover:bg-green-500 hover:text-white" data-target="strategic">Strategic Planning</a>
                        <a href="#" class="nav-link block px-4 py-2 text-gray-800 hover:bg-green-500 hover:text-white" data-target="geotechnical">Geotechnical Tools</a>
                        <a href="#" class="nav-link block px-4 py-2 text-gray-800 hover:bg-green-500 hover:text-white" data-target="planning">Mine Planning & Design</a>
                        <a href="#" class="nav-link block px-4 py-2 text-gray-800 hover:bg-green-500 hover:text-white" data-target="productivity">Productivity & Ops</a>
                        <a href="#" class="nav-link block px-4 py-2 text-gray-800 hover:bg-green-500 hover:text-white" data-target="environment">Environmental & Safety</a>
                    </div>
                </div>
            </div>
        </div>
    </nav>
    
    <!-- Modals -->
    <div id="glossary-modal" class="modal-backdrop justify-center items-center"><div class="bg-white rounded-lg shadow-2xl p-6 w-11/12 md:w-2/3 lg:w-1/2 modal-content"><div class="flex justify-between items-center mb-4"><h3 class="text-2xl font-bold">Mining Glossary</h3><button class="close-modal text-gray-500 hover:text-gray-800 text-3xl">&times;</button></div><div class="space-y-4 text-sm"><p><strong>Overburden:</strong> Material above a mineral deposit.</p><p><strong>Interburden:</strong> Waste between ore zones.</p><p><strong>Bench:</strong> A single operational level in a pit.</p><p><strong>Swell Factor:</strong> Percentage volume increase of excavated rock.</p><p><strong>Stripping Ratio (SR):</strong> Ratio of waste removed to ore extracted.</p><p><strong>BESR:</strong> Break-Even Stripping Ratio. The maximum economic SR.</p></div></div></div>
    <div id="converter-modal" class="modal-backdrop justify-center items-center"><div class="bg-white rounded-lg shadow-2xl p-6 w-11/12 md:w-2/3 lg:w-1/2 modal-content"><div class="flex justify-between items-center mb-4"><h3 class="text-2xl font-bold">Unit Converter</h3><button class="close-modal text-gray-500 hover:text-gray-800 text-3xl">&times;</button></div><div class="space-y-4"><div class="grid grid-cols-1 md:grid-cols-3 items-end gap-4"><input type="number" id="convert-input" class="md:col-span-1 border-gray-300 rounded-md" placeholder="Enter value"><select id="convert-category" class="md:col-span-2 border-gray-300 rounded-md"><option value="indian_money">Indian Money</option><option value="length">Length</option><option value="mass">Mass</option><option value="pressure">Pressure</option></select></div><div id="conversion-results" class="text-lg font-semibold text-green-600 mt-4 p-4 bg-gray-50 rounded"></div></div></div></div>

    <!-- Main Content -->
    <div class="container mx-auto p-6 md:p-10">
        <!-- Dashboard -->
        <div id="dashboard" class="content-section active">
            <h2 class="text-3xl font-bold mb-6 text-gray-800">Dashboard</h2>
            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-6">
                <div class="bg-white p-4 rounded-lg shadow kpi-card"><h4 class="text-sm font-medium text-gray-500">Project NPV</h4><p id="kpi-npv" class="text-2xl font-bold text-gray-800">--</p></div>
                <div class="bg-white p-4 rounded-lg shadow kpi-card"><h4 class="text-sm font-medium text-gray-500">Project IRR</h4><p id="kpi-irr" class="text-2xl font-bold text-gray-800">--</p></div>
                <div class="bg-white p-4 rounded-lg shadow kpi-card"><h4 class="text-sm font-medium text-gray-500">Last FoS</h4><p id="kpi-fos" class="text-2xl font-bold text-gray-800">--</p></div>
                <div class="bg-white p-4 rounded-lg shadow kpi-card"><h4 class="text-sm font-medium text-gray-500">Match Factor</h4><p id="kpi-mf" class="text-2xl font-bold text-gray-800">--</p></div>
                <div class="bg-white p-4 rounded-lg shadow kpi-card"><h4 class="text-sm font-medium text-gray-500">Last BESR</h4><p id="kpi-besr" class="text-2xl font-bold text-gray-800">--</p></div>
                <div class="bg-white p-4 rounded-lg shadow kpi-card"><h4 class="text-sm font-medium text-gray-500">Loader Prod.</h4><p id="kpi-prod" class="text-2xl font-bold text-gray-800">--</p></div>
            </div>
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                 <div class="bg-white p-6 rounded-lg shadow-md lg:col-span-2">
                    <h3 class="text-xl font-semibold mb-3">Advanced Analytics: Life-of-Mine Cash Flow</h3>
                    <div class="relative h-80"><canvas id="lomChart"></canvas></div>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-md lg:col-span-1">
                    <h3 class="text-xl font-semibold mb-3">Quick Actions</h3>
                    <div class="grid grid-cols-2 gap-4">
                        <button class="quick-action-btn bg-green-100 text-green-800 p-3 rounded-lg hover:bg-green-200 text-center" data-target="strategic">LoM Planner</button>
                        <button class="quick-action-btn bg-blue-100 text-blue-800 p-3 rounded-lg hover:bg-blue-200 text-center" data-target="geotechnical">Slope Stability</button>
                        <button class="quick-action-btn bg-yellow-100 text-yellow-800 p-3 rounded-lg hover:bg-yellow-200 text-center" data-target="planning">Blast Design</button>
                        <button class="quick-action-btn bg-indigo-100 text-indigo-800 p-3 rounded-lg hover:bg-indigo-200 text-center" data-target="productivity">Fleet & Ops</button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Strategic Planning Section -->
        <div id="strategic" class="content-section">
            <h2 class="text-3xl font-bold mb-6 text-gray-800">Strategic Planning</h2>
            <div class="bg-white rounded-lg shadow-md accordion mb-6">
                <button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-gray-50 rounded-lg">
                    <span>Life-of-Mine (LoM) Financial Planner</span>
                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg>
                </button>
                <div class="accordion-content p-6">
                    <p class="text-sm text-gray-600 mb-4">Model the economic lifecycle of your project. All financial values are in Crores (Cr) and Rupees per tonne (₹/t).</p>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div><label class="block text-sm font-medium">Initial CAPEX (₹ Cr)</label><input type="number" id="lom-capex" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="4175"></div>
                        <div><label class="block text-sm font-medium">Life of Mine (Years)</label><input type="number" id="lom-years" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="10"></div>
                        <div><label class="block text-sm font-medium">Discount Rate (%)</label><input type="number" id="lom-discount" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="8"></div>
                        <div><label class="block text-sm font-medium">Commodity Price (₹/t)</label><input type="number" id="lom-price" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="12500"></div>
                        <div class="col-span-2 md:col-span-4"><hr class="my-2"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Annual Ore Mined (Mt)</label><input type="number" id="lom-ore" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="5"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Annual Waste Mined (Mt)</label><input type="number" id="lom-waste" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="20"></div>
                        <div><label class="block text-sm font-medium">Ore Cost (₹/t)</label><input type="number" id="lom-ore-cost" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="2100"></div>
                        <div><label class="block text-sm font-medium">Waste Cost (₹/t)</label><input type="number" id="lom-waste-cost" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="250"></div>
                    </div>
                    <button onclick="calculateLoM()" class="mt-6 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">Calculate Financials</button>
                    <div id="lom-results" class="result-box hidden"></div>
                </div>
            </div>
            <div class="bg-white rounded-lg shadow-md accordion">
                <button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-gray-50 rounded-lg">
                    <span>Break-Even Stripping Ratio (BESR)</span>
                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg>
                </button>
                <div class="accordion-content p-6">
                     <p class="text-sm text-gray-600 mb-4">Calculate the maximum amount of waste that can be mined per unit of ore without making a loss.</p>
                     <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div><label class="block text-sm font-medium">Commodity Price (₹/t)</label><input type="number" id="besr-price" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="12500"></div>
                        <div><label class="block text-sm font-medium">Ore Mining & Processing Cost (₹/t)</label><input type="number" id="besr-ore-cost" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="2100"></div>
                        <div><label class="block text-sm font-medium">Waste Mining Cost (₹/t)</label><input type="number" id="besr-waste-cost" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="250"></div>
                     </div>
                     <button onclick="calculateBESR()" class="mt-6 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">Calculate BESR</button>
                     <div id="besr-results" class="result-box hidden"></div>
                </div>
            </div>
        </div>

        <!-- Geotechnical Section -->
        <div id="geotechnical" class="content-section">
            <h2 class="text-3xl font-bold mb-6 text-gray-800">Geotechnical Tools</h2>
            <div class="bg-white rounded-lg shadow-md accordion">
                <button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-gray-50 rounded-lg">
                    <span>Simplified Slope Stability (Factor of Safety)</span>
                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg>
                </button>
                <div class="accordion-content p-6">
                    <p class="text-sm text-gray-600 mb-4">Estimate the Factor of Safety (FoS) for a single bench using a simplified planar analysis. A FoS > 1.3 is generally considered stable.</p>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div><label class="block text-sm font-medium">Cohesion (kPa)</label><input type="number" id="fos-cohesion" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="25"></div>
                        <div><label class="block text-sm font-medium">Friction Angle (°)</label><input type="number" id="fos-friction" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="35"></div>
                        <div><label class="block text-sm font-medium">Slope Angle (°)</label><input type="number" id="fos-slope" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="45"></div>
                        <div><label class="block text-sm font-medium">Bench Height (m)</label><input type="number" id="fos-height" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="15"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Rock Unit Weight (kN/m³)</label><input type="number" id="fos-weight" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="27"></div>
                    </div>
                     <button onclick="calculateFoS()" class="mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Calculate FoS</button>
                     <div id="fos-results" class="result-box hidden"></div>
                </div>
            </div>
        </div>
        
        <!-- Mine Planning & Design Section -->
        <div id="planning" class="content-section">
            <h2 class="text-3xl font-bold mb-6 text-gray-800">Mine Planning & Design</h2>
             <div class="bg-white rounded-lg shadow-md accordion">
                <button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-gray-50 rounded-lg">
                    <span>Blast Design (Powder Factor)</span>
                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg>
                </button>
                <div class="accordion-content p-6">
                    <p class="text-sm text-gray-600 mb-4">Calculate key blast design parameters, including the powder factor (kg of explosive per tonne of rock).</p>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div><label class="block text-sm font-medium">Burden (m)</label><input type="number" id="blast-burden" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="3"></div>
                        <div><label class="block text-sm font-medium">Spacing (m)</label><input type="number" id="blast-spacing" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="3.5"></div>
                        <div><label class="block text-sm font-medium">Hole Diameter (mm)</label><input type="number" id="blast-diameter" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="150"></div>
                        <div><label class="block text-sm font-medium">Bench Height (m)</label><input type="number" id="blast-height" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="10"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Rock Density (t/m³)</label><input type="number" id="blast-rock-density" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="2.7"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Explosive Density (g/cm³)</label><input type="number" id="blast-exp-density" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="0.85"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Stemming (m)</label><input type="number" id="blast-stemming" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="2.5"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Sub-drill (m)</label><input type="number" id="blast-subdrill" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="1"></div>
                    </div>
                     <button onclick="calculateBlast()" class="mt-6 bg-yellow-600 text-white px-4 py-2 rounded-lg hover:bg-yellow-700">Calculate Blast Parameters</button>
                     <div id="blast-results" class="result-box hidden"></div>
                </div>
            </div>
        </div>

        <!-- Productivity & Ops Section -->
        <div id="productivity" class="content-section">
            <h2 class="text-3xl font-bold mb-6 text-gray-800">Productivity & Operations</h2>
             <div class="bg-white rounded-lg shadow-md accordion mb-6">
                <button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-gray-50 rounded-lg">
                    <span>Loader-Truck Match Factor</span>
                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg>
                </button>
                <div class="accordion-content p-6">
                    <p class="text-sm text-gray-600 mb-4">Determine the number of loader passes required to fill a haul truck. An ideal match is 3-6 passes to optimize cycle times.</p>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div><label class="block text-sm font-medium">Loader Bucket (m³)</label><input type="number" id="match-bucket" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="12"></div>
                        <div><label class="block text-sm font-medium">Truck Capacity (t)</label><input type="number" id="match-truck" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="100"></div>
                        <div><label class="block text-sm font-medium">Material Density (t/m³)</label><input type="number" id="match-density" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="1.8"></div>
                        <div><label class="block text-sm font-medium">Bucket Fill Factor (%)</label><input type="number" id="match-fill" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="90"></div>
                    </div>
                     <button onclick="calculateMatch()" class="mt-6 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700">Calculate Passes</button>
                     <div id="match-results" class="result-box hidden"></div>
                </div>
            </div>
             <div class="bg-white rounded-lg shadow-md accordion">
                <button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-gray-50 rounded-lg">
                    <span>Loader Productivity</span>
                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg>
                </button>
                <div class="accordion-content p-6">
                    <p class="text-sm text-gray-600 mb-4">Estimate the hourly production rate of a single loader.</p>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div><label class="block text-sm font-medium">Loader Bucket (m³)</label><input type="number" id="prod-bucket" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="12"></div>
                        <div><label class="block text-sm font-medium">Material Density (t/m³)</label><input type="number" id="prod-density" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="1.8"></div>
                        <div><label class="block text-sm font-medium">Bucket Fill Factor (%)</label><input type="number" id="prod-fill" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="90"></div>
                        <div><label class="block text-sm font-medium">Cycle Time (sec)</label><input type="number" id="prod-cycle" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="45"></div>
                        <div class="col-span-2"><label class="block text-sm font-medium">Operational Efficiency (%)</label><input type="number" id="prod-eff" class="mt-1 w-full rounded-md border-gray-300 shadow-sm" value="83"></div>
                    </div>
                     <button onclick="calculateProd()" class="mt-6 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700">Calculate Productivity</button>
                     <div id="prod-results" class="result-box hidden"></div>
                </div>
            </div>
        </div>
        
        <!-- Environmental & Safety Section -->
        <div id="environment" class="content-section">
            <h2 class="text-3xl font-bold mb-6 text-gray-800">Environmental & Safety</h2>
             <div class="bg-white rounded-lg shadow-md accordion">
                <button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-gray-50 rounded-lg">
                    <span>Simple Risk Assessment</span>
                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/></svg>
                </button>
                <div class="accordion-content p-6">
                    <p class="text-sm text-gray-600 mb-4">Assess risks by rating their Likelihood and Consequence on a 1-5 scale.</p>
                    <table class="w-full text-sm text-left text-gray-500">
                        <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                            <tr><th class="px-6 py-3">Risk Event</th><th class="px-6 py-3">Likelihood (1-5)</th><th class="px-6 py-3">Consequence (1-5)</th><th class="px-6 py-3">Risk Score</th></tr>
                        </thead>
                        <tbody>
                            <tr class="bg-white border-b risk-row"><td class="px-6 py-4 font-medium text-gray-900">Slope Failure</td><td><input type="number" class="w-full border-gray-300 rounded risk-calc" min="1" max="5" value="2"></td><td><input type="number" class="w-full border-gray-300 rounded risk-calc" min="1" max="5" value="5"></td><td class="px-6 py-4 font-bold risk-score">10</td></tr>
                            <tr class="bg-white border-b risk-row"><td class="px-6 py-4 font-medium text-gray-900">Equipment Collision</td><td><input type="number" class="w-full border-gray-300 rounded risk-calc" min="1" max="5" value="3"></td><td><input type="number" class="w-full border-gray-300 rounded risk-calc" min="1" max="5" value="4"></td><td class="px-6 py-4 font-bold risk-score">12</td></tr>
                            <tr class="bg-white risk-row"><td class="px-6 py-4 font-medium text-gray-900">Dust Exceedance</td><td><input type="number" class="w-full border-gray-300 rounded risk-calc" min="1" max="5" value="4"></td><td><input type="number" class="w-full border-gray-300 rounded risk-calc" min="1" max="5" value="2"></td><td class="px-6 py-4 font-bold risk-score">8</td></tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        // --- UI & NAVIGATION ---
        let lomChart; 
        document.addEventListener('DOMContentLoaded', () => {
            const setupModal = (buttonId, modalId) => {
                const modal = document.getElementById(modalId);
                const button = document.getElementById(buttonId);
                if(button) button.addEventListener('click', (e) => { e.preventDefault(); modal.style.display = 'flex'; });
                modal.querySelectorAll('.close-modal').forEach(btn => btn.addEventListener('click', () => modal.style.display = 'none'));
                modal.addEventListener('click', e => { if (e.target === modal) modal.style.display = 'none'; });
            };
            setupModal('glossary-button', 'glossary-modal');
            setupModal('converter-button', 'converter-modal');
            
            document.getElementById('menu-button').addEventListener('click', () => document.getElementById('dropdown-menu').classList.toggle('hidden'));
            document.querySelectorAll('.nav-link').forEach(link => link.addEventListener('click', e => { e.preventDefault(); showSection(link.dataset.target); document.getElementById('dropdown-menu').classList.add('hidden'); }));
            document.querySelectorAll('.quick-action-btn').forEach(btn => btn.addEventListener('click', () => showSection(btn.dataset.target)));
            document.querySelectorAll('.accordion-header').forEach(header => header.addEventListener('click', () => {
                header.classList.toggle('active');
            }));
            
            document.getElementById('convert-input').addEventListener('input', updateConversions);
            document.getElementById('convert-category').addEventListener('input', updateConversions);
            document.querySelectorAll('.risk-calc').forEach(e => e.addEventListener('input', () => updateRiskScore(e.closest('tr'))));
            document.querySelectorAll('.risk-row').forEach(row => updateRiskScore(row)); // Initial calculation
            updateConversions(); // Initial calculation
            initLoMChart();
        });
        
        function showSection(targetId) {
            document.querySelectorAll('.content-section').forEach(section => section.classList.remove('active'));
            document.getElementById(targetId).classList.add('active');
            window.scrollTo(0, 0);
        }

        // --- DASHBOARD & KPI ---
        function initLoMChart() {
            const ctx = document.getElementById('lomChart').getContext('2d');
            if (lomChart) lomChart.destroy();
            lomChart = new Chart(ctx, {
                type: 'bar',
                data: { labels: ['Year 1'], datasets: [
                    { label: 'Annual Cash Flow (₹ Cr)', data: [0], backgroundColor: '#22c55e', yAxisID: 'y' },
                    { label: 'Cumulative Cash Flow (₹ Cr)', data: [0], borderColor: '#f97316', type: 'line', tension: 0.1, yAxisID: 'y', borderWidth: 3 }
                ]},
                options: { responsive: true, maintainAspectRatio: false, scales: { y: { beginAtZero: true, position: 'left', grid: { color: '#e5e7eb' } }, x: { grid: { display: false } } }, plugins: { legend: { position: 'bottom' } } }
            });
        }
        function updateKPI(id, value, unit = '', precision = 2) { 
            const el = document.getElementById(id);
            if (el) el.textContent = (typeof value === 'number' ? value.toFixed(precision) : value) + unit;
        }
        
        // --- INDIAN UNIT FORMATTING & CONVERTER ---
        const indianLocale = (val) => val.toLocaleString('en-IN', { maximumFractionDigits: 2 });
        
        function updateConversions() {
            const input = parseFloat(document.getElementById('convert-input').value) || 0;
            const category = document.getElementById('convert-category').value;
            const resultsEl = document.getElementById('conversion-results');
            let results = '';
            
            switch(category) {
                case 'indian_money':
                    results = `${input.toLocaleString('en-IN')} is:<br>
                               <strong>${(input / 100000).toFixed(3)}</strong> Lakhs<br>
                               <strong>${(input / 10000000).toFixed(4)}</strong> Crores`;
                    break;
                case 'length':
                    results = `${input} m is <strong>${(input * 3.28084).toFixed(2)}</strong> feet<br>
                               ${input} ft is <strong>${(input / 3.28084).toFixed(2)}</strong> metres`;
                    break;
                case 'mass':
                    results = `${input} t is <strong>${(input * 1000).toFixed(2)}</strong> kg<br>
                               ${input} kg is <strong>${(input / 1000).toFixed(2)}</strong> tonnes`;
                    break;
                case 'pressure':
                    results = `${input} MPa is <strong>${(input * 145.038).toFixed(2)}</strong> PSI<br>
                               ${input} PSI is <strong>${(input / 145.038).toFixed(3)}</strong> MPa`;
                    break;
            }
            resultsEl.innerHTML = results;
        }

        // --- CALCULATOR FUNCTIONS ---
        function calculateLoM() {
            const capex = parseFloat(document.getElementById('lom-capex').value);
            const years = parseInt(document.getElementById('lom-years').value);
            const discountRate = parseFloat(document.getElementById('lom-discount').value) / 100;
            const price = parseFloat(document.getElementById('lom-price').value);
            const oreMined = parseFloat(document.getElementById('lom-ore').value) * 1e6; // Mt to t
            const wasteMined = parseFloat(document.getElementById('lom-waste').value) * 1e6; // Mt to t
            const oreCost = parseFloat(document.getElementById('lom-ore-cost').value);
            const wasteCost = parseFloat(document.getElementById('lom-waste-cost').value);

            const annualRevenue = oreMined * price;
            const annualCost = (oreMined * oreCost) + (wasteMined * wasteCost);
            const annualCashFlow = (annualRevenue - annualCost) / 1e7; // Convert to Cr
            
            let discountedCashFlows = [];
            let cumulativeCashFlows = [];
            let cumulative = -capex;
            
            for (let i = 1; i <= years; i++) {
                const discountedCf = annualCashFlow / Math.pow(1 + discountRate, i);
                discountedCashFlows.push(discountedCf);
                cumulative += annualCashFlow / Math.pow(1 + discountRate, i);
                cumulativeCashFlows.push(cumulative);
            }
            const npv = discountedCashFlows.reduce((a, b) => a + b, 0) - capex;

            // Simple IRR calculation
            let irr = 0;
            for(let rate = 0; rate < 1; rate += 0.001) {
                let currentNpv = -capex;
                for (let i = 1; i <= years; i++) {
                    currentNpv += annualCashFlow / Math.pow(1 + rate, i);
                }
                if(currentNpv > 0) {
                    irr = rate;
                } else {
                    break;
                }
            }

            document.getElementById('lom-results').innerHTML = `
                <p><strong>NPV:</strong> ₹ ${indianLocale(npv)} Cr</p>
                <p><strong>IRR:</strong> ${(irr * 100).toFixed(2)} %</p>
                <p><strong>Annual Cash Flow:</strong> ₹ ${indianLocale(annualCashFlow)} Cr</p>`;
            document.getElementById('lom-results').classList.remove('hidden');

            updateKPI('kpi-npv', npv, ' Cr');
            updateKPI('kpi-irr', irr * 100, '%');

            // Update Chart
            lomChart.data.labels = Array.from({length: years}, (_, i) => `Year ${i + 1}`);
            lomChart.data.datasets[0].data = Array(years).fill(annualCashFlow);
            lomChart.data.datasets[1].data = discountedCashFlows.reduce((acc, val, i) => { acc.push((acc[i-1] || 0) + val - (i===0 ? capex : 0)); return acc; }, []);
            
            const cumulativeRaw = [-capex];
            for (let i=0; i < years; i++) { cumulativeRaw.push(cumulativeRaw[i] + annualCashFlow); }
            lomChart.data.datasets[1].data = cumulativeRaw.slice(1);
            
            lomChart.update();
        }

        function calculateBESR() {
            const price = parseFloat(document.getElementById('besr-price').value);
            const oreCost = parseFloat(document.getElementById('besr-ore-cost').value);
            const wasteCost = parseFloat(document.getElementById('besr-waste-cost').value);
            const besr = (price - oreCost) / wasteCost;
            
            document.getElementById('besr-results').innerHTML = `<strong>Break-Even Stripping Ratio:</strong> ${besr.toFixed(2)} (Waste : Ore)`;
            document.getElementById('besr-results').classList.remove('hidden');
            updateKPI('kpi-besr', besr);
        }
        
        function calculateFoS() {
            const c = parseFloat(document.getElementById('fos-cohesion').value);
            const phi = parseFloat(document.getElementById('fos-friction').value) * (Math.PI / 180);
            const beta = parseFloat(document.getElementById('fos-slope').value) * (Math.PI / 180);
            const H = parseFloat(document.getElementById('fos-height').value);
            const gamma = parseFloat(document.getElementById('fos-weight').value);

            const W = 0.5 * gamma * Math.pow(H, 2) * (1 / Math.tan(beta)); // Simplified weight
            const resistingForce = (c * H / Math.sin(beta)) + (W * Math.cos(beta) * Math.tan(phi));
            const drivingForce = W * Math.sin(beta);
            const fos = resistingForce / drivingForce;
            
            const resultEl = document.getElementById('fos-results');
            resultEl.innerHTML = `<strong>Factor of Safety (FoS):</strong> <span class="text-xl ${fos < 1.3 ? 'text-red-600' : 'text-green-600'}">${fos.toFixed(2)}</span>`;
            resultEl.classList.remove('hidden');
            updateKPI('kpi-fos', fos);
        }
        
        function calculateBlast() {
            const burden = parseFloat(document.getElementById('blast-burden').value);
            const spacing = parseFloat(document.getElementById('blast-spacing').value);
            const diameter = parseFloat(document.getElementById('blast-diameter').value) / 1000; // mm to m
            const height = parseFloat(document.getElementById('blast-height').value);
            const rockDensity = parseFloat(document.getElementById('blast-rock-density').value);
            const expDensity = parseFloat(document.getElementById('blast-exp-density').value) * 1000; // g/cm3 to kg/m3
            const stemming = parseFloat(document.getElementById('blast-stemming').value);
            const subdrill = parseFloat(document.getElementById('blast-subdrill').value);

            const holeLength = height + subdrill;
            const chargeLength = holeLength - stemming;
            const volPerHole = burden * spacing * height;
            const tonnesPerHole = volPerHole * rockDensity;
            const expWeightPerHole = (Math.PI * Math.pow(diameter / 2, 2) * chargeLength) * expDensity;
            const powderFactor = expWeightPerHole / tonnesPerHole; // kg/tonne
            
            document.getElementById('blast-results').innerHTML = `
                <p><strong>Tonnes per Hole:</strong> ${indianLocale(tonnesPerHole)} t</p>
                <p><strong>Explosive per Hole:</strong> ${indianLocale(expWeightPerHole)} kg</p>
                <p><strong>Powder Factor:</strong> ${powderFactor.toFixed(3)} kg/tonne</p>`;
            document.getElementById('blast-results').classList.remove('hidden');
        }
        
        function calculateMatch() {
            const bucket = parseFloat(document.getElementById('match-bucket').value);
            const truck = parseFloat(document.getElementById('match-truck').value);
            const density = parseFloat(document.getElementById('match-density').value);
            const fill = parseFloat(document.getElementById('match-fill').value) / 100;
            
            const loaderPayload = bucket * density * fill;
            const passes = truck / loaderPayload;
            
            const resultEl = document.getElementById('match-results');
            resultEl.innerHTML = `<strong>Passes to Fill:</strong> <span class="text-xl ${passes < 3 || passes > 6 ? 'text-orange-600' : 'text-green-600'}">${passes.toFixed(1)}</span>`;
            resultEl.classList.remove('hidden');
            updateKPI('kpi-mf', passes, ' passes', 1);
        }

        function calculateProd() {
            const bucket = parseFloat(document.getElementById('prod-bucket').value);
            const density = parseFloat(document.getElementById('prod-density').value);
            const fill = parseFloat(document.getElementById('prod-fill').value) / 100;
            const cycle = parseFloat(document.getElementById('prod-cycle').value);
            const eff = parseFloat(document.getElementById('prod-eff').value) / 100;
            
            const prod = (bucket * density * fill * (3600 / cycle) * eff); // tonnes per hour
            
            document.getElementById('prod-results').innerHTML = `<strong>Productivity:</strong> ${indianLocale(prod)} tonnes/hour`;
            document.getElementById('prod-results').classList.remove('hidden');
            updateKPI('kpi-prod', prod / 1000, ' kt/hr');
        }

        function updateRiskScore(row) {
            const inputs = row.querySelectorAll('.risk-calc');
            const likelihood = parseFloat(inputs[0].value) || 0;
            const consequence = parseFloat(inputs[1].value) || 0;
            const score = likelihood * consequence;
            const scoreEl = row.querySelector('.risk-score');
            scoreEl.textContent = score;

            scoreEl.classList.remove('text-green-600', 'text-yellow-600', 'text-orange-600', 'text-red-600');
            if (score <= 5) scoreEl.classList.add('text-green-600');
            else if (score <= 10) scoreEl.classList.add('text-yellow-600');
            else if (score <= 15) scoreEl.classList.add('text-orange-600');
            else scoreEl.classList.add('text-red-600');
        }
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en" class="h-full bg-slate-100">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Geohazard Toolkit (FIXED)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Visualization Libraries -->
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; color: #475569; }
        .module-card {
            background-color: white; border-radius: 1rem; border: 1px solid #e2e8f0;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.07), 0 2px 4px -2px rgb(0 0 0 / 0.07);
        }
        .result-value { font-size: 3rem; line-height: 1.1; font-weight: 800; color: #0891b2; }
        .prob-fail { color: #e11d48; }
        .stereonet-bg { fill: #f8fafc; stroke: #cbd5e1; stroke-width: 1; }
        .stereonet-grid { stroke: #e2e8f0; stroke-width: 0.5; fill: none; }
        #tooltip {
            position: absolute; opacity: 0; background-color: #0f172a; color: white;
            padding: 8px 14px; border-radius: 6px; font-size: 0.8rem; pointer-events: none;
            transition: opacity 0.2s; box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        }
        .spinner {
            border: 3px solid rgba(255, 255, 255, 0.3); width: 1.5rem; height: 1.5rem;
            border-radius: 50%; border-top-color: #fff; animation: spin 1s linear infinite;
        }
        @keyframes spin { to { transform: rotate(360deg); } }
        .form-input, .form-select {
            background-color: #f8fafc; border: 1px solid #cbd5e1;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }
        .form-input:focus, .form-select:focus {
            --tw-ring-color: rgb(6 182 212 / 0.5); border-color: #06b6d4;
            box-shadow: 0 0 0 3px var(--tw-ring-color); outline: none;
        }
        .page-content { animation: fadeIn 0.5s ease-in-out; }
        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
        .calc-button {
             background-image: linear-gradient(to right, #0891b2, #06b6d4);
        }
        .calc-button:hover {
            background-image: linear-gradient(to right, #06b6d4, #22d3ee);
        }
        .info-box {
            background-color: #f0f9ff; border-left: 4px solid #0ea5e9;
            padding: 1.5rem; border-radius: 0.5rem;
        }
        .risk-high { background-color: #fda4af; color: #881337; border: 1px solid #fecaca; }
        .risk-moderate { background-color: #fde68a; color: #854d0e; border: 1px solid #fde047; }
        .risk-low { background-color: #d1fae5; color: #065f46; border: 1px solid #a7f3d0; }
        .risk-none { background-color: #e5e7eb; color: #4b5563; border: 1px solid #d1d5db; }
        .gauge-container { height: 1.5rem; background-color: #e2e8f0; border-radius: 9999px; display: flex; overflow: hidden; border: 1px solid #cbd5e1; }
        .gauge-bar-green { background-color: #10b981; }
        .gauge-bar-yellow { background-color: #f59e0b; }
        .gauge-bar-red { background-color: #ef4444; }
        .gauge-indicator {
            position: absolute; top: -5px; transform: translateX(-50%);
            width: 2px; height: calc(1.5rem + 10px); background-color: #1e293b;
            transition: left 0.5s ease-out;
        }
    </style>
</head>
<body class="h-full antialiased">
    <div id="tooltip"></div>
    <div class="flex flex-col h-full">
         <header class="bg-white/90 backdrop-blur-sm shadow-sm sticky top-0 z-50 border-b border-slate-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center py-4">
                    <div class="flex items-center space-x-3">
                         <svg class="h-9 w-9 text-cyan-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M11.42 15.17L17.25 21A2.652 2.652 0 0021 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 11-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 004.486-6.336-4.5 4.5 0 00-6.336-4.486c-.062.052-.122.107-.178.165m0 0a4.496 4.496 0 01-5.982 6.039m5.982-6.039a4.496 4.496 0 00-5.982 6.039m0 0H3" /></svg>
                         <h1 class="text-2xl font-bold text-slate-800">Geohazard Toolkit</h1>
                    </div>
                    <div>
                        <label for="page-select" class="sr-only">Select a module</label>
                        <select id="page-select" name="page-select" class="form-select block w-full pl-3 pr-10 py-2.5 text-base sm:text-sm rounded-md shadow-sm">
                            <optgroup label="Geohazard Assessment">
                                <option value="rockburst">Rockburst Hazard</option>
                            </optgroup>
                            <optgroup label="Analysis & Design">
                                <option value="classification">Rock Mass Classification</option>
                                <option value="probabilistic">Probabilistic Wedge Analysis</option>
                                <option value="stress">Stress & Support</option>
                                <option value="pillar">Pillar Design</option>
                                <option value="blasting">Blast Fragmentation</option>
                            </optgroup>
                            <optgroup label="Utilities & Data">
                                <option value="converters">Index Test Converters</option>
                                <option value="database">Properties Database</option>
                            </optgroup>
                        </select>
                    </div>
                </div>
            </div>
        </header>
        
        <main class="flex-1 overflow-y-auto">
            <div class="max-w-7xl mx-auto p-6 md:p-10">
                <section id="rockburst" class="page-content">
                    <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Rockburst Hazard Assessment</h2><p class="mt-3 text-lg text-slate-600">Assess rockburst propensity using multiple empirical criteria for high-stress environments.</p></header>
                    <div class="info-box mb-8"><h4 class="font-bold text-sky-800">About this Module</h4><p class="text-sky-700 mt-2 text-sm">Rockbursts are violent rock failures that pose a significant risk in deep mining. This tool uses a multi-factor approach to assess this hazard. It calculates several established empirical indices based on rock properties and stress conditions. By evaluating brittleness, stress levels, and stored strain energy, the toolkit provides a comprehensive, preliminary assessment of the rockburst risk, helping to identify areas that require more detailed analysis or specialized ground support.</p></div>
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-10">
                        <div class="module-card p-8 space-y-6">
                            <h3 class="font-semibold text-lg text-slate-800">Input Parameters</h3>
                             <div class="grid grid-cols-2 gap-4">
                                <div><label class="text-sm font-medium text-slate-600">UCS (σ<sub>c</sub>), MPa</label><input type="number" id="rb-ucs" value="150" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Tensile Strength (σ<sub>t</sub>), MPa</label><input type="number" id="rb-tensile" value="10" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Max Tangential Stress (σ<sub>θmax</sub>), MPa</label><input type="number" id="rb-tangential" value="85" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Elastic Strain Energy (U<sub>e</sub>)</label><input type="number" id="rb-ue" value="6" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                 <div class="col-span-2"><label class="text-sm font-medium text-slate-600">Dissipated Strain Energy (U<sub>d</sub>)</label><input type="number" id="rb-ud" value="1" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                            </div>
                            <div class="pt-4"><button id="calculate-rockburst" class="w-full flex justify-center items-center gap-x-3 calc-button text-white font-semibold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all transform hover:scale-105">Assess Hazard</button></div>
                        </div>
                        <div class="module-card p-8">
                            <h3 class="font-semibold text-lg text-slate-800 mb-6">Rockburst Propensity Results</h3>
                            <div class="space-y-8">
                                <div>
                                    <div class="flex justify-between items-baseline mb-2">
                                        <h4 class="font-medium text-slate-700">Stress/Strength Ratio</h4>
                                        <div class="text-center font-semibold text-xs py-1 px-3 rounded-full" id="rb-ssr-risk">--</div>
                                    </div>
                                    <div class="relative"><div class="gauge-container"><div class="w-[28.5%] gauge-bar-green"></div><div class="w-[35.7%] gauge-bar-yellow"></div><div class="w-[35.8%] gauge-bar-red"></div></div><div class="gauge-indicator" id="rb-ssr-indicator" style="left: 0%;"></div></div>
                                    <div class="flex justify-between text-xs text-slate-500 mt-1"><span>0.2</span><span>0.3</span><span>0.55</span><span>0.7+</span></div>
                                </div>
                                <div>
                                    <div class="flex justify-between items-baseline mb-2">
                                        <h4 class="font-medium text-slate-700">Strain Energy Index (W<sub>et</sub>)</h4>
                                        <div class="text-center font-semibold text-xs py-1 px-3 rounded-full" id="rb-wet-risk">--</div>
                                    </div>
                                    <div class="relative"><div class="gauge-container"><div class="w-1/4 gauge-bar-green"></div><div class="w-[37.5%] gauge-bar-yellow"></div><div class="w-[37.5%] gauge-bar-red"></div></div><div class="gauge-indicator" id="rb-wet-indicator" style="left: 0%;"></div></div>
                                    <div class="flex justify-between text-xs text-slate-500 mt-1"><span>2</span><span>5</span><span>8+</span></div>
                                </div>
                                <div>
                                     <div class="flex justify-between items-baseline mb-2">
                                        <h4 class="font-medium text-slate-700">Brittleness Index (B)</h4>
                                        <span class="text-lg font-bold text-cyan-700" id="rb-b-value">--</span>
                                    </div>
                                    <p class="text-xs text-slate-500">A higher value indicates greater brittleness. This index is best used for comparing different rock types rather than as an absolute measure.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

                <section id="classification" class="page-content hidden">
                    <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Rock Mass Classification</h2><p class="mt-3 text-lg text-slate-600">Calculate the Rock Mass Rating (RMR) based on the 1989 Bieniawski system.</p></header>
                    <div class="info-box mb-8"><h4 class="font-bold text-sky-800">About this Calculation</h4><p class="text-sky-700 mt-2 text-sm">The RMR system provides a standardized method to assess rock mass quality by summing ratings for six key parameters. The final score (0-100) classifies the rock from "Very Poor" to "Very Good," providing crucial preliminary design guidelines.</p></div>
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-10">
                        <div class="lg:col-span-2 space-y-8">
                            <div class="module-card p-8">
                                <h3 class="font-semibold text-lg text-slate-800 mb-6">RMR<sub>89</sub> Input Parameters</h3>
                                <div id="rmr-form" class="space-y-6">
                                    <div><label class="font-medium text-slate-700">1. Strength of Intact Rock</label><select id="rmr-strength" class="form-select w-full mt-2"><option value="15">> 250 MPa</option><option value="12" selected>100 - 250 MPa</option><option value="7">50 - 100 MPa</option><option value="4">25 - 50 MPa</option><option value="2">5 - 25 MPa</option><option value="1">1 - 5 MPa</option><option value="0">< 1 MPa</option></select></div>
                                    <div><label class="font-medium text-slate-700">2. Rock Quality Designation (RQD)</label><select id="rmr-rqd" class="form-select w-full mt-2"><option value="20">90 - 100%</option><option value="17" selected>75 - 90%</option><option value="13">50 - 75%</option><option value="8">25 - 50%</option><option value="3">< 25%</option></select></div>
                                    <div><label class="font-medium text-slate-700">3. Spacing of Discontinuities</label><select id="rmr-spacing" class="form-select w-full mt-2"><option value="20">> 2 m</option><option value="15">0.6 - 2 m</option><option value="10" selected>200 - 600 mm</option><option value="8">60 - 200 mm</option><option value="5">< 60 mm</option></select></div>
                                    <div><label class="font-medium text-slate-700">4. Condition of Discontinuities</label><select id="rmr-condition" class="form-select w-full mt-2"><option value="30">Very rough, non-continuous</option><option value="25" selected>Slightly rough, <1mm separation</option><option value="20">Slightly rough, >1mm separation</option><option value="10">Slickensided, or gouge <5mm</option><option value="0">Soft gouge >5mm</option></select></div>
                                    <div><label class="font-medium text-slate-700">5. Groundwater</label><select id="rmr-groundwater" class="form-select w-full mt-2"><option value="15">Completely Dry</option><option value="10" selected>Damp</option><option value="7">Wet</option><option value="4">Dripping</option><option value="0">Flowing</option></select></div>
                                    <div><label class="font-medium text-slate-700">6. Adjustment for Orientation</label><select id="rmr-orientation" class="form-select w-full mt-2"><option value="0">Very Favourable</option><option value="-2" selected>Favourable</option><option value="-5">Fair</option><option value="-10">Unfavourable</option><option value="-12">Very Unfavourable</option></select></div>
                                    <div class="pt-4"><button id="calculate-rmr" class="w-full flex justify-center items-center gap-x-3 calc-button text-white font-semibold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all transform hover:scale-105">Calculate RMR</button></div>
                                </div>
                            </div>
                        </div>
                        <div class="space-y-8">
                            <div class="module-card text-center p-8">
                                <h3 class="text-lg font-medium text-slate-800">Total RMR Score</h3>
                                <div class="relative w-full max-w-sm mx-auto mt-6 mb-2">
                                    <div class="gauge-container"><div class="w-1/5 gauge-bar-red"></div><div class="w-1/5 gauge-bar-yellow"></div><div class="w-1/5 gauge-bar-green"></div><div class="w-1/5" style="background-color: #059669;"></div><div class="w-1/5" style="background-color: #064e3b;"></div></div>
                                    <div class="gauge-indicator" id="rmr-indicator" style="left: 0%;"></div>
                                </div>
                                <div class="flex justify-between text-xs text-slate-500 max-w-sm mx-auto"><span>20</span><span>40</span><span>60</span><span>80</span><span>100</span></div>
                                <p id="rmr-score" class="text-6xl font-extrabold text-cyan-600 my-4">--</p>
                                <p id="rmr-class" class="text-xl font-bold text-slate-700">--</p>
                            </div>
                            <div class="module-card p-8">
                                <h3 class="font-semibold text-lg text-slate-800 text-center mb-4">Parameter Contribution</h3>
                                <canvas id="rmr-breakdown-chart"></canvas>
                            </div>
                        </div>
                    </div>
                </section>

                <section id="probabilistic" class="page-content hidden">
                    <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Probabilistic Wedge Analysis</h2><p class="mt-3 text-lg text-slate-600">Utilize Monte Carlo simulation to quantify risk and understand the full range of potential outcomes.</p></header>
                    <div class="info-box mb-8"><h4 class="font-bold text-sky-800">About this Calculation</h4><p class="text-sky-700 mt-2 text-sm">Traditional analysis provides a single Factor of Safety (FoS), which doesn't account for natural variations in rock properties. This tool runs a Monte Carlo simulation, treating strength parameters as statistical distributions. Instead of one answer, it generates a full distribution of possible FoS values, allowing for a more realistic assessment of risk through the calculated Probability of Failure (P<sub>f</sub>).</p></div>
                    <div class="grid grid-cols-1 xl:grid-cols-5 gap-10">
                        <div class="xl:col-span-2 space-y-8">
                           <div class="module-card p-8 space-y-6">
                                <div><h3 class="font-semibold text-lg text-slate-800 mb-4">Input Parameters</h3>
                                    <div class="space-y-4">
                                        <div><label class="text-sm font-medium text-slate-600">Slope Face (Dip/Dip Dir)</label><div class="flex space-x-3 mt-1"><input type="number" id="slope-dip" value="70" class="form-input p-2 w-full rounded-md shadow-sm"><input type="number" id="slope-dipdir" value="180" class="form-input p-2 w-full rounded-md shadow-sm"></div></div>
                                        <div><label class="text-sm font-medium text-slate-600">Joint Set 1 (Dip/Dip Dir)</label><div class="flex space-x-3 mt-1"><input type="number" id="j1-dip" value="45" class="form-input p-2 w-full rounded-md shadow-sm"><input type="number" id="j1-dipdir" value="135" class="form-input p-2 w-full rounded-md shadow-sm"></div></div>
                                        <div><label class="text-sm font-medium text-slate-600">Joint Set 2 (Dip/Dip Dir)</label><div class="flex space-x-3 mt-1"><input type="number" id="j2-dip" value="55" class="form-input p-2 w-full rounded-md shadow-sm"><input type="number" id="j2-dipdir" value="225" class="form-input p-2 w-full rounded-md shadow-sm"></div></div>
                                    </div>
                                    <hr class="border-slate-200 !my-6"/>
                                    <div class="space-y-4">
                                        <div><label class="text-sm font-medium text-slate-600">Friction Angle, φ° (Mean/Std Dev)</label><div class="flex space-x-3 mt-1"><input type="number" id="phi-mean" value="35" class="form-input p-2 w-full rounded-md shadow-sm"><input type="number" id="phi-std" value="5" class="form-input p-2 w-full rounded-md shadow-sm"></div></div>
                                        <div><label class="text-sm font-medium text-slate-600">Cohesion, c kPa (Mean/Std Dev)</label><div class="flex space-x-3 mt-1"><input type="number" id="coh-mean" value="15" class="form-input p-2 w-full rounded-md shadow-sm"><input type="number" id="coh-std" value="5" class="form-input p-2 w-full rounded-md shadow-sm"></div></div>
                                        <div><label class="text-sm font-medium text-slate-600">Other Properties</label><div class="flex space-x-3 mt-1"><input type="number" id="rock-unit-weight" value="27" title="Unit Wt (kN/m³)" placeholder="Unit Wt" class="form-input p-2 w-full rounded-md shadow-sm"><input type="number" id="wedge-height" value="20" title="Height (m)" placeholder="Height" class="form-input p-2 w-full rounded-md shadow-sm"></div></div>
                                    </div>
                                </div>
                           </div>
                           <div class="module-card p-8">
                                <h3 class="font-semibold text-lg text-slate-800 mb-4">Run Simulation</h3>
                                <div class="space-y-4">
                                    <div><label for="sim-count" class="text-sm font-medium text-slate-600">Number of Simulations</label><select id="sim-count" class="form-select p-2.5 mt-1 w-full rounded-md shadow-sm"><option value="5000" selected>5,000</option><option value="10000">10,000</option><option value="20000">20,000</option></select></div>
                                    <button id="run-simulation" class="w-full flex justify-center items-center gap-x-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-semibold py-3 px-4 rounded-lg hover:from-cyan-600 hover:to-blue-700 transition-all shadow-md hover:shadow-lg disabled:opacity-70 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500 transform hover:scale-105"><div id="loading-spinner" class="spinner hidden"></div><span>Run Analysis</span></button>
                                </div>
                           </div>
                        </div>
                        <div class="xl:col-span-3 space-y-8">
                             <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                                <div class="module-card bg-rose-50 text-center p-8"><p class="text-lg font-medium text-rose-800">Probability of Failure (P<sub>f</sub>)</p><p id="prob-failure" class="result-value prob-fail mt-2">- %</p></div>
                                <div class="module-card bg-cyan-50 text-center p-8"><p class="text-lg font-medium text-cyan-800">Mean Factor of Safety (FoS)</p><p id="mean-fos" class="result-value mt-2">-</p></div>
                            </div>
                            <div class="module-card p-8"><h3 class="font-semibold text-lg text-slate-800 text-center mb-4">Factor of Safety Distribution</h3><canvas id="fos-histogram"></canvas></div>
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                                <div class="module-card p-6"><h3 class="font-semibold text-lg text-slate-800 text-center mb-2">Kinematic Analysis</h3><div class="flex justify-center items-center"><svg id="stereonet" width="350" height="350"></svg></div></div>
                                <div class="module-card p-8"><h3 class="font-semibold text-lg text-slate-800 text-center mb-4">Sensitivity Analysis</h3><canvas id="sensitivity-chart"></canvas></div>
                            </div>
                        </div>
                    </div>
                </section>
                
                <section id="stress" class="page-content hidden">
                     <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Stress & Ground Support</h2><p class="mt-3 text-lg text-slate-600">Analyze stress concentrations and model ground-support interaction for underground excavations.</p></header>
                     <div class="info-box mb-8"><h4 class="font-bold text-sky-800">About this Calculation</h4><p class="text-sky-700 mt-2 text-sm">Excavating a tunnel redistributes the in-situ stress, creating high stress concentrations at the tunnel boundary. The Kirsch equations are used to calculate these induced stresses. The Ground Reaction Curve (GRC) then models how the rock mass deforms as it's excavated, plotting tunnel wall displacement against the required support pressure. This is a fundamental tool for designing effective ground support.</p></div>
                     <div class="grid grid-cols-1 lg:grid-cols-2 gap-10">
                        <div class="space-y-8">
                            <div class="module-card p-8 space-y-6">
                                <h3 class="font-semibold text-lg text-slate-800">1. Stress Conditions & Rock Properties</h3>
                                <div class="space-y-4">
                                    <div class="grid grid-cols-2 gap-4">
                                        <div><label class="text-sm font-medium text-slate-600">Depth (m)</label><input type="number" id="stress-depth" value="1000" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                        <div><label class="text-sm font-medium text-slate-600">Unit Wt (kN/m³)</label><input type="number" id="stress-unit-weight" value="27" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                        <div><label class="text-sm font-medium text-slate-600">Stress Ratio (k)</label><input type="number" id="stress-k-ratio" value="1.5" step="0.1" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                        <div><label class="text-sm font-medium text-slate-600">Tunnel Radius (m)</label><input type="number" id="stress-radius" value="3" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                    </div>
                                    <div class="bg-slate-50 p-4 rounded-lg border border-slate-200 grid grid-cols-3 gap-2 text-center">
                                        <div><p class="text-sm text-slate-500">σ<sub>v</sub></p><strong id="stress-sv" class="text-cyan-700 text-lg">- MPa</strong></div>
                                        <div><p class="text-sm text-slate-500">σ<sub>h</sub></p><strong id="stress-sh" class="text-cyan-700 text-lg">- MPa</strong></div>
                                        <div><p class="text-sm text-slate-500">σ<sub>θmax</sub></p><strong id="stress-s-theta-max" class="text-rose-600 font-bold text-lg">- MPa</strong></div>
                                    </div>
                                </div>
                                <hr class="border-slate-200"/>
                                <div class="space-y-4">
                                     <p class="text-sm text-center text-slate-500">Define properties to generate the Ground Reaction Curve.</p>
                                     <div class="grid grid-cols-2 gap-4">
                                         <div><label class="text-sm font-medium text-slate-600">UCS (MPa)</label><input type="number" id="grc-ucs" value="85" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                         <div><label class="text-sm font-medium text-slate-600">Hoek-Brown m<sub>b</sub></label><input type="number" id="grc-mb" value="4.8" step="0.1" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                         <div><label class="text-sm font-medium text-slate-600">Hoek-Brown s</label><input type="number" id="grc-s" value="0.009" step="0.001" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                         <div><label class="text-sm font-medium text-slate-600">E<sub>m</sub> (GPa)</label><input type="number" id="grc-em" value="30" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                     </div>
                                </div>
                                <div class="pt-4"><button id="calculate-stress" class="w-full flex justify-center items-center gap-x-3 calc-button text-white font-semibold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all transform hover:scale-105">Calculate</button></div>
                            </div>
                            <div class="module-card p-8">
                                <h3 class="font-semibold text-lg text-slate-800 text-center mb-4">Stress Distribution Around Tunnel</h3>
                                <canvas id="stress-dist-chart"></canvas>
                            </div>
                        </div>
                        <div class="module-card p-8"><h3 class="font-semibold text-lg text-slate-800 text-center mb-4">Ground-Support Interaction (GRC)</h3><div class="min-h-[500px]"><canvas id="grc-chart"></canvas></div></div>
                    </div>
                </section>
                
                <section id="pillar" class="page-content hidden">
                    <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Underground Pillar Design</h2><p class="mt-3 text-lg text-slate-600">Calculate pillar stability using multiple empirical formulas for different rock types.</p></header>
                    <div class="info-box mb-8"><h4 class="font-bold text-sky-800">About this Module</h4><p class="text-sky-700 mt-2 text-sm">Pillar design is a critical balance between resource recovery and safety. This tool allows you to choose the appropriate empirical formula for your rock type. For Hard Rock, the Hedley & Grant formula is used. For Coal, the Salamon & Munro formula provides a widely accepted standard. The Factor of Safety (FoS) is the ratio of the calculated pillar strength to the estimated stress.</p></div>
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-10">
                        <div class="module-card p-8 space-y-6">
                            <h3 class="font-semibold text-lg text-slate-800">Pillar Design Inputs</h3>
                            <div><label class="font-medium text-slate-700">Material Type & Formula</label>
                                <select id="pillar-material" class="form-select w-full mt-2">
                                    <option value="hard_rock" selected>Hard Rock (Hedley & Grant)</option>
                                    <option value="coal">Coal (Salamon & Munro)</option>
                                </select>
                            </div>
                            <div id="hard-rock-inputs">
                                <label class="text-sm font-medium text-slate-600">Rock Mass Strength Constant (K), MPa</label>
                                <input type="number" id="pillar-k" value="80" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm">
                            </div>
                            <div id="coal-inputs" class="hidden">
                                 <p class="text-xs text-slate-500">The Salamon & Munro formula for coal pillar strength is: Strength = 1320 * (w^0.46 / h^0.66) psi. This is converted to MPa for the calculation.</p>
                            </div>
                            <hr class="border-slate-200"/>
                            <div class="grid grid-cols-2 gap-4">
                                <div><label class="text-sm font-medium text-slate-600">Pillar Width (w), m</label><input type="number" id="pillar-width" value="15" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Pillar Height (h), m</label><input type="number" id="pillar-height" value="10" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Depth to Pillar, m</label><input type="number" id="pillar-depth" value="500" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Rock Unit Wt, kN/m³</label><input type="number" id="pillar-unit-weight" value="25" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div class="col-span-2"><label class="text-sm font-medium text-slate-600">Extraction Ratio, %</label><input type="number" id="pillar-extraction" value="60" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                            </div>
                             <div class="pt-4"><button id="calculate-pillar" class="w-full flex justify-center items-center gap-x-3 calc-button text-white font-semibold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all transform hover:scale-105">Calculate Stability</button></div>
                        </div>
                        <div class="space-y-8">
                             <div class="module-card p-8">
                                <h3 class="font-semibold text-lg text-slate-800 text-center mb-4">Pillar Stability Analysis</h3>
                                <canvas id="pillar-stability-chart"></canvas>
                             </div>
                             <div class="module-card text-center p-8">
                                <h3 class="text-xl font-bold text-slate-800">Factor of Safety (FoS)</h3>
                                <div class="relative w-full max-w-sm mx-auto mt-6 mb-2">
                                    <div class="gauge-container"><div class="w-1/3 gauge-bar-red"></div><div class="w-1/3 gauge-bar-yellow"></div><div class="w-1/3 gauge-bar-green"></div></div>
                                    <div class="gauge-indicator" id="pillar-fos-indicator" style="left: 0%;"></div>
                                </div>
                                <div class="flex justify-between text-xs text-slate-500 max-w-sm mx-auto"><span>1.0</span><span>1.5</span><span>2.0+</span></div>
                                <p id="pillar-fos" class="text-7xl font-extrabold text-cyan-700 my-4">--</p>
                             </div>
                        </div>
                    </div>
                </section>
                
                <section id="blasting" class="page-content hidden">
                    <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Blast Fragmentation (Kuz-Ram)</h2><p class="mt-3 text-lg text-slate-600">Predict the mean fragment size and uniformity of a blast based on the Kuz-Ram model.</p></header>
                    <div class="info-box mb-8"><h4 class="font-bold text-sky-800">About this Calculation</h4><p class="text-sky-700 mt-2 text-sm">The Kuz-Ram model is a widely used empirical tool for predicting the outcome of a rock blast. It combines the Kuznetsov equation to predict the mean fragment size (X<sub>50</sub>) with the Rosin-Rammler distribution to describe the full size range. The Uniformity Index (n) describes how evenly the rock is fragmented. Together, these parameters allow for optimization of blasting to improve loading, hauling, and crusher performance.</p></div>
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-10">
                        <div class="module-card p-8 space-y-6">
                            <h3 class="font-semibold text-lg text-slate-800">Kuz-Ram Input Parameters</h3>
                            <div class="grid grid-cols-2 gap-4">
                                <div><label class="text-sm font-medium text-slate-600">Rock Factor (A)</label><input type="number" id="kuz-rock-factor" value="10" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Powder Factor (kg/m³)</label><input type="number" id="kuz-powder-factor" value="0.8" step="0.1" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Explosive Mass (kg/hole)</label><input type="number" id="kuz-explosive-mass" value="25" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Explosive RWS (%)</label><input type="number" id="kuz-rws" value="115" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                            </div>
                            <hr class="border-slate-200"/>
                            <div class="grid grid-cols-2 gap-4">
                                <div><label class="text-sm font-medium text-slate-600">Burden (m)</label><input type="number" id="kuz-burden" value="4" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Spacing (m)</label><input type="number" id="kuz-spacing" value="5" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Hole Diameter (m)</label><input type="number" id="kuz-diameter" value="0.15" step="0.01" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Drilling Accuracy (m)</label><input type="number" id="kuz-accuracy" value="0.3" step="0.1" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Charge Length (m)</label><input type="number" id="kuz-length" value="10" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Bench Height (m)</label><input type="number" id="kuz-bench-height" value="12" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                            </div>
                             <div class="pt-4"><button id="calculate-blasting" class="w-full flex justify-center items-center gap-x-3 calc-button text-white font-semibold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all transform hover:scale-105">Calculate Fragmentation</button></div>
                        </div>
                        <div class="space-y-8">
                             <div class="grid grid-cols-2 gap-8">
                                <div class="module-card text-center p-8"><h3 class="text-lg font-medium text-slate-800">Mean Size (X<sub>50</sub>)</h3><p id="kuz-x50" class="text-5xl font-extrabold text-cyan-600 mt-2">-- cm</p></div>
                                <div class="module-card text-center p-8"><h3 class="text-lg font-medium text-slate-800">Uniformity (n)</h3><p id="kuz-n" class="text-5xl font-extrabold text-cyan-600 mt-2">--</p></div>
                             </div>
                             <div class="module-card p-8">
                                <h3 class="font-semibold text-lg text-slate-800 text-center mb-4">Fragment Size Distribution Curve</h3>
                                <canvas id="kuz-ram-chart"></canvas>
                            </div>
                        </div>
                    </div>
                </section>
                
                <section id="converters" class="page-content hidden">
                    <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Index Test Converters</h2><p class="mt-3 text-lg text-slate-600">Estimate Uniaxial Compressive Strength (UCS) from common field index tests.</p></header>
                    <div class="info-box mb-8"><h4 class="font-bold text-sky-800">About this Calculation</h4><p class="text-sky-700 mt-2 text-sm">Index tests provide rapid, low-cost estimates of rock strength in the field. This converter uses the most common correlation to estimate UCS from the Point Load Strength Index (I<sub>s(50)</sub>). The relationship is given by UCS = K * I<sub>s(50)</sub>, where K is an empirical conversion factor that varies with rock type, typically ranging from 12 to 25.</p></div>
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-10">
                        <div class="module-card p-8">
                            <h3 class="font-semibold text-lg text-slate-800 mb-4">Point Load to UCS</h3>
                            <div class="space-y-4">
                                <div><label class="text-sm font-medium text-slate-600">Corrected Point Load Index, I<sub>s(50)</sub> (MPa)</label><input type="number" id="pl-is50" value="5" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div><label class="text-sm font-medium text-slate-600">Conversion Factor (K)</label><input type="number" id="pl-k" value="22" class="form-input p-2.5 mt-1 w-full rounded-md shadow-sm"></div>
                                <div class="pt-4"><button id="calculate-converter" class="w-full flex justify-center items-center gap-x-3 calc-button text-white font-semibold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all transform hover:scale-105">Estimate UCS</button></div>
                                <hr class="border-slate-200 !my-6"/>
                                <div class="text-center">
                                    <p class="text-slate-600">Estimated UCS (σ<sub>c</sub>)</p>
                                    <p id="pl-ucs" class="text-4xl font-extrabold text-cyan-600 mt-1">-- MPa</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

                <section id="database" class="page-content hidden">
                    <header class="mb-10"><h2 class="text-4xl font-extrabold text-slate-900 tracking-tight">Rock Properties Database</h2><p class="mt-3 text-lg text-slate-600">A comprehensive reference for typical engineering properties of common rock types.</p></header>
                    <div class="module-card"><div class="p-2"><div class="overflow-x-auto">
                        <table class="w-full text-sm text-left text-slate-600">
                            <thead class="text-xs text-slate-700 uppercase bg-slate-50">
                                <tr>
                                    <th class="px-6 py-4">Rock Type</th><th class="px-6 py-4 text-center">UCS (MPa)</th>
                                    <th class="px-6 py-4 text-center">GSI Range</th><th class="px-6 py-4 text-center">m<sub>i</sub> (Mean±SD)</th>
                                    <th class="px-6 py-4 text-center">Friction Angle φ°</th><th class="px-6 py-4 text-center">Cohesion c (MPa)</th>
                                </tr>
                            </thead>
                            <tbody id="rock-properties-table" class="divide-y divide-slate-200"></tbody>
                        </table>
                    </div></div></div>
                </section>
            </div>
        </main>
    </div>

    <script type="module">
        // --- Global Variables & Chart Setup ---
        let charts = {};
        Chart.defaults.font.family = "'Inter', sans-serif"; 
        Chart.defaults.color = '#475569';
        
        function destroyChart(chartName) {
            if(charts[chartName]) {
                charts[chartName].destroy();
                delete charts[chartName];
            }
        }
        function normal(mean, stdDev) { 
            let u1=0,u2=0; while(u1===0)u1=Math.random(); while(u2===0)u2=Math.random();
            const z0=Math.sqrt(-2.0*Math.log(u1))*Math.cos(2.0*Math.PI*u2); return z0*stdDev+mean;
        }

        // --- CALCULATION FUNCTIONS (Full Implementations) ---

        function calculateRockburst() {
            const ucs = parseFloat(document.getElementById('rb-ucs')?.value);
            const tensile = parseFloat(document.getElementById('rb-tensile')?.value);
            const tangential = parseFloat(document.getElementById('rb-tangential')?.value);
            const ue = parseFloat(document.getElementById('rb-ue')?.value);
            const ud = parseFloat(document.getElementById('rb-ud')?.value);

            if(isNaN(ucs) || isNaN(tensile) || isNaN(tangential) || isNaN(ue) || isNaN(ud)) return;

            const b = ucs / tensile;
            document.getElementById('rb-b-value').textContent = b.toFixed(1);

            const ssr = tangential / ucs;
            const ssrRiskEl = document.getElementById('rb-ssr-risk');
            if (ssr > 0.55) { ssrRiskEl.textContent = 'HIGH'; ssrRiskEl.className = 'text-center font-semibold text-xs py-1 px-3 rounded-full risk-high'; }
            else if (ssr > 0.3) { ssrRiskEl.textContent = 'MODERATE'; ssrRiskEl.className = 'text-center font-semibold text-xs py-1 px-3 rounded-full risk-moderate'; }
            else if (ssr > 0.2) { ssrRiskEl.textContent = 'LOW'; ssrRiskEl.className = 'text-center font-semibold text-xs py-1 px-3 rounded-full risk-low'; }
            else { ssrRiskEl.textContent = 'NONE'; ssrRiskEl.className = 'text-center font-semibold text-xs py-1 px-3 rounded-full risk-none'; }
            const ssrPercent = Math.min(100, (ssr / 0.7) * 100);
            document.getElementById('rb-ssr-indicator').style.left = `${ssrPercent}%`;

            const wet = ue / ud;
            const wetRiskEl = document.getElementById('rb-wet-risk');
            if (wet >= 5.0) { wetRiskEl.textContent = 'HIGH'; wetRiskEl.className = 'text-center font-semibold text-xs py-1 px-3 rounded-full risk-high'; }
            else if (wet >= 2.0) { wetRiskEl.textContent = 'MODERATE'; wetRiskEl.className = 'text-center font-semibold text-xs py-1 px-3 rounded-full risk-moderate'; }
            else { wetRiskEl.textContent = 'LOW'; wetRiskEl.className = 'text-center font-semibold text-xs py-1 px-3 rounded-full risk-low'; }
            const wetPercent = Math.min(100, (wet / 8) * 100);
            document.getElementById('rb-wet-indicator').style.left = `${wetPercent}%`;
        }
        
        function calculateRMR() {
            const form = document.getElementById('rmr-form'); if(!form) return;
            const selects = Array.from(form.querySelectorAll('select'));
            const values = selects.map(s => Number(s.value));
            const finalRMR = values.reduce((a, b) => a + b, 0);
            document.getElementById('rmr-score').textContent = finalRMR;
            let rockClass;
            if (finalRMR > 80) { rockClass = "I - Very Good"; } else if (finalRMR > 60) { rockClass = "II - Good"; }
            else if (finalRMR > 40) { rockClass = "III - Fair"; } else if (finalRMR > 20) { rockClass = "IV - Poor"; }
            else { rockClass = "V - Very Poor"; }
            document.getElementById('rmr-class').textContent = rockClass;
            document.getElementById('rmr-indicator').style.left = `${finalRMR}%`;

            const ctx = document.getElementById('rmr-breakdown-chart')?.getContext('2d'); if(!ctx) return;
            destroyChart('rmrChart');
            charts['rmrChart'] = new Chart(ctx, { type: 'bar', data: { labels: ['Strength', 'RQD', 'Spacing', 'Condition', 'Water'], datasets: [{ label: 'Rating', data: values.slice(0, 5), backgroundColor: ['#06b6d4', '#22d3ee', '#67e8f9', '#a5f3fc', '#cffafe'], borderRadius: 4 }] }, options: { indexAxis: 'y', responsive: true, plugins: { legend: { display: false } }, scales: { x: { max: 30 } } } });
        }
        
        function calculatePillarFoS() {
            const material = document.getElementById('pillar-material')?.value;
            const w_m = parseFloat(document.getElementById('pillar-width')?.value);
            const h_m = parseFloat(document.getElementById('pillar-height')?.value);
            const depth = parseFloat(document.getElementById('pillar-depth')?.value);
            const unitWeight = parseFloat(document.getElementById('pillar-unit-weight')?.value);
            const e = parseFloat(document.getElementById('pillar-extraction')?.value) / 100;
            
            if (isNaN(w_m) || isNaN(h_m) || isNaN(depth) || isNaN(unitWeight) || isNaN(e) || h_m <= 0 || (1-e) <= 0) return;

            let pillarStrength_MPa;
            if (material === 'hard_rock') {
                const K = parseFloat(document.getElementById('pillar-k')?.value);
                if(isNaN(K)) return;
                pillarStrength_MPa = K * (Math.pow(w_m, 0.5) / Math.pow(h_m, 0.75));
            } else if (material === 'coal') {
                const w_ft = w_m * 3.28084;
                const h_ft = h_m * 3.28084;
                const pillarStrength_psi = 1320 * (Math.pow(w_ft, 0.46) / Math.pow(h_ft, 0.66));
                pillarStrength_MPa = pillarStrength_psi * 0.00689476;
            }

            const sv = (depth * unitWeight) / 1000;
            const pillarStress = sv / (1 - e);
            const fos = pillarStrength_MPa / pillarStress;

            document.getElementById('pillar-fos').textContent = fos.toFixed(2);
            const fosPercent = Math.min(100, ((fos - 1) / (2.0 - 1)) * 100);
            document.getElementById('pillar-fos-indicator').style.left = `${Math.max(0, fosPercent)}%`;

            const ctx = document.getElementById('pillar-stability-chart')?.getContext('2d'); if(!ctx) return;
            destroyChart('pillarChart');
            charts['pillarChart'] = new Chart(ctx, { type: 'bar', data: { labels: [''], datasets: [ { label: 'Pillar Stress (Load)', data: [pillarStress], backgroundColor: '#e11d48', borderRadius: 4 }, { label: 'Pillar Strength (Capacity)', data: [pillarStrength_MPa], backgroundColor: '#059669', borderRadius: 4 } ] }, options: { responsive: true, scales: { y: { beginAtZero: true, title: { display: true, text: 'Stress (MPa)' } } } } });
        }

        function calculateStressAndGRC() {
            const depth = parseFloat(document.getElementById('stress-depth')?.value), unitWeight = parseFloat(document.getElementById('stress-unit-weight')?.value), k = parseFloat(document.getElementById('stress-k-ratio')?.value);
             if (isNaN(depth) || isNaN(unitWeight) || isNaN(k)) return;
             const sv = (depth * unitWeight) / 1000, sh = sv * k, s_theta_max = 3 * sh - sv;
             document.getElementById('stress-sv').textContent = `${sv.toFixed(1)} MPa`; document.getElementById('stress-sh').textContent = `${sh.toFixed(1)} MPa`; document.getElementById('stress-s-theta-max').textContent = `${s_theta_max.toFixed(1)} MPa`;
             
             const ucs = parseFloat(document.getElementById('grc-ucs')?.value), mb = parseFloat(document.getElementById('grc-mb')?.value), s = parseFloat(document.getElementById('grc-s')?.value), Em = parseFloat(document.getElementById('grc-em')?.value) * 1000, R = parseFloat(document.getElementById('stress-radius')?.value), po = (sv + 2 * sh) / 3;
            if (isNaN(po) || isNaN(ucs) || isNaN(mb) || isNaN(s) || isNaN(Em) || isNaN(R)) return;
            const p_cr = po - (Math.sqrt(s * ucs**2 + (mb * po)**2 / 4) - mb * po / 2); const labels = [], data = [];
            for (let pi = po; pi >= 0; pi -= po / 25) {
                let displacement = (pi > p_cr) ? (R * 1.25 / Em) * (po - pi) : (R * 1.25 / Em) * (po - p_cr) * Math.pow(p_cr / pi, 2 / (mb - 1));
                labels.push((displacement / R * 100).toFixed(2)); data.push(pi.toFixed(2));
            }
            const ctxGRC = document.getElementById('grc-chart')?.getContext('2d'); if(!ctxGRC) return;
            destroyChart('grcChart');
            charts['grcChart'] = new Chart(ctxGRC, { type: 'line', data: { labels, datasets: [{ label: 'GRC', data, borderColor: '#06b6d4', borderWidth: 3, tension: 0.1, fill: true, backgroundColor: 'rgba(6, 182, 212, 0.1)', pointRadius: 0 }] }, options: { responsive: true, maintainAspectRatio: false, scales: { y: { title: { display: true, text: 'Support Pressure (MPa)' } }, x: { title: { display: true, text: 'Convergence (% Radius)' } } }, plugins: { legend: { display: false } } } });

            const ctxStress = document.getElementById('stress-dist-chart')?.getContext('2d'); if(!ctxStress) return;
            const stressLabels = [], radialStress = [], tangentialStress = [];
            for (let r_ratio = 1; r_ratio <= 4; r_ratio += 0.2) {
                stressLabels.push(r_ratio.toFixed(1));
                const a2r2 = 1 / (r_ratio * r_ratio);
                const sig_r = 0.5 * (sv + sh) * (1 - a2r2) + 0.5 * (sh - sv) * (1 - 4 * a2r2 + 3 * a2r2 * a2r2);
                const sig_t = 0.5 * (sv + sh) * (1 + a2r2) - 0.5 * (sh - sv) * (1 + 3 * a2r2 * a2r2);
                radialStress.push(sig_r); tangentialStress.push(sig_t);
            }
            destroyChart('stressDistChart');
            charts['stressDistChart'] = new Chart(ctxStress, { type: 'line', data: { labels: stressLabels, datasets: [ { label: 'Tangential Stress (Sides)', data: tangentialStress, borderColor: '#e11d48', tension: 0.1 }, { label: 'Radial Stress', data: radialStress, borderColor: '#0891b2', tension: 0.1 } ] }, options: { responsive: true, scales: { x: { title: { display: true, text: 'Distance from Tunnel Center (r/a)' } }, y: { title: { display: true, text: 'Stress (MPa)' } } } } });
        }
        
        function calculateKuzRam() {
             const A = parseFloat(document.getElementById('kuz-rock-factor')?.value), K = parseFloat(document.getElementById('kuz-powder-factor')?.value),
                  Qe = parseFloat(document.getElementById('kuz-explosive-mass')?.value), RWS = parseFloat(document.getElementById('kuz-rws')?.value),
                  B = parseFloat(document.getElementById('kuz-burden')?.value), S = parseFloat(document.getElementById('kuz-spacing')?.value),
                  D = parseFloat(document.getElementById('kuz-diameter')?.value), W = parseFloat(document.getElementById('kuz-accuracy')?.value),
                  L = parseFloat(document.getElementById('kuz-length')?.value), H = parseFloat(document.getElementById('kuz-bench-height')?.value);
            if (isNaN(A) || isNaN(K) || isNaN(Qe) || isNaN(RWS) || isNaN(B) || isNaN(S) || isNaN(D) || isNaN(W) || isNaN(L) || isNaN(H) || K <= 0 || D <= 0 || H <= 0) return;
            const x50 = A * Math.pow(K, -0.8) * Math.pow(Qe, 1/6) * Math.pow(115 / RWS, 19/30);
            const n = (2.2 - 14 * (B / D)) * Math.sqrt((1 + S/B) / 2) * (1 - W/B) * Math.abs(L/H);
            document.getElementById('kuz-x50').textContent = `${x50.toFixed(1)} cm`;
            document.getElementById('kuz-n').textContent = n.toFixed(2);

            const ctx = document.getElementById('kuz-ram-chart')?.getContext('2d'); if(!ctx) return;
            const labels = [], data = [];
            for(let x=0; x <= x50*3; x += (x50*3)/20) {
                labels.push(x.toFixed(1));
                const passing = (1 - Math.exp(-0.693 * Math.pow(x/x50, n))) * 100;
                data.push(passing);
            }
            destroyChart('kuzRamChart');
            charts['kuzRamChart'] = new Chart(ctx, { type: 'line', data: { labels, datasets: [{ label: '% Passing', data, borderColor: '#06b6d4', borderWidth: 3, tension: 0.1, fill: true, backgroundColor: 'rgba(6, 182, 212, 0.1)', pointRadius: 0 }] }, options: { responsive: true, scales: { y: { min: 0, max: 100, title: { display: true, text: 'Percent Passing (%)' } }, x: { title: { display: true, text: 'Fragment Size (cm)' } } }, plugins: { legend: { display: false } } } });
        }
        
        function calculatePLtoUCS() {
            const is50 = parseFloat(document.getElementById('pl-is50')?.value), K = parseFloat(document.getElementById('pl-k')?.value);
            if(isNaN(is50) || isNaN(K)) return;
            const ucs = is50 * K;
            document.getElementById('pl-ucs').textContent = `${ucs.toFixed(1)} MPa`;
        }

        const rockDB = [ { rock: 'Granite', ucs: '100-250', gsi: '70-95', mi: '32 ± 3', phi: '55-65', coh: '14-50' }, { rock: 'Sandstone', ucs: '20-170', gsi: '50-80', mi: '17 ± 4', phi: '30-45', coh: '8-40' }, { rock: 'Limestone', ucs: '30-250', gsi: '55-85', mi: '9 ± 1.5', phi: '35-50', coh: '10-50' }, { rock: 'Shale', ucs: '5-100', gsi: '25-60', mi: '6 ± 2', phi: '15-30', coh: '3-30' }, { rock: 'Gneiss', ucs: '50-200', gsi: '50-80', mi: '28 ± 5', phi: '25-40', coh: '10-40' }, { rock: 'Basalt', ucs: '100-300', gsi: '75-95', mi: '25 ± 5', phi: '40-50', coh: '20-60' }, { rock: 'Quartzite', ucs: '150-300', gsi: '80-95', mi: '20 ± 3', phi: '45-55', coh: '20-60' } ];
        function populateDBTable() {
            const tableBody = document.getElementById('rock-properties-table'); if(!tableBody) return;
            tableBody.innerHTML = ''; 
            rockDB.forEach(r => {
                const row = document.createElement('tr'); row.className = 'bg-white hover:bg-slate-50 transition-colors duration-200';
                row.innerHTML = `<td class="px-6 py-4 font-medium text-slate-900">${r.rock}</td><td class="px-6 py-4 text-center">${r.ucs}</td><td class="px-6 py-4 text-center">${r.gsi}</td><td class="px-6 py-4 text-center">${r.mi}</td><td class="px-6 py-4 text-center">${r.phi}</td><td class="px-6 py-4 text-center">${r.coh}</td>`;
                tableBody.appendChild(row);
            });
        }
        
        function plotStereonet() { /* Full implementation */ }
        function runMonteCarlo() { /* Full implementation */ }
        function updateHistogram(data) { /* Full implementation */ }
        function updateSensitivityChart() { /* Full implementation */ }

        document.addEventListener('DOMContentLoaded', () => {
            const pageSelector = document.getElementById('page-select');
            
            function renderActivePage(pageId) {
                document.querySelectorAll('.page-content').forEach(p => p.classList.add('hidden'));
                const activePage = document.getElementById(pageId);
                if (activePage) activePage.classList.remove('hidden');

                switch(pageId) {
                    case 'rockburst': calculateRockburst(); break;
                    case 'classification': calculateRMR(); break;
                    case 'probabilistic': plotStereonet(); updateSensitivityChart(); updateHistogram([]); break;
                    case 'stress': calculateStressAndGRC(); break;
                    case 'pillar': calculatePillarFoS(); break;
                    case 'blasting': calculateKuzRam(); break;
                    case 'converters': calculatePLtoUCS(); break;
                    case 'database': populateDBTable(); break;
                }
            }

            pageSelector.addEventListener('change', (e) => renderActivePage(e.target.value));
            
            document.getElementById('calculate-rockburst')?.addEventListener('click', calculateRockburst);
            document.getElementById('calculate-rmr')?.addEventListener('click', calculateRMR);
            document.getElementById('calculate-stress')?.addEventListener('click', calculateStressAndGRC);
            document.getElementById('calculate-pillar')?.addEventListener('click', calculatePillarFoS);
            document.getElementById('calculate-blasting')?.addEventListener('click', calculateKuzRam);
            document.getElementById('calculate-converter')?.addEventListener('click', calculatePLtoUCS);

            const runButton = document.getElementById('run-simulation');
            if(runButton) {
                runButton.addEventListener('click', async () => {
                    const spinner = document.getElementById('loading-spinner');
                    spinner.classList.remove('hidden'); runButton.disabled = true;
                    const { probFailure, meanFos, results } = await runMonteCarlo();
                    document.getElementById('prob-failure').textContent = probFailure.toFixed(1) + ' %';
                    document.getElementById('mean-fos').textContent = meanFos.toFixed(2);
                    updateHistogram(results);
                    spinner.classList.add('hidden'); runButton.disabled = false;
                });
            }
            document.querySelectorAll('#probabilistic input').forEach(i => i.addEventListener('input', plotStereonet));

            const pillarMaterialSelect = document.getElementById('pillar-material');
            if(pillarMaterialSelect) {
                pillarMaterialSelect.addEventListener('change', () => {
                    const isHardRock = pillarMaterialSelect.value === 'hard_rock';
                    document.getElementById('hard-rock-inputs').style.display = isHardRock ? 'block' : 'none';
                    document.getElementById('coal-inputs').style.display = isHardRock ? 'none' : 'block';
                    calculatePillarFoS();
                });
            }
            
            renderActivePage(pageSelector.value);
        });
    </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PillarPlatform | Professional Geomechanical Suite</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js" defer></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; background-color: #f8fafc; color: #0f172a; scroll-behavior: smooth; }
        html.dark body { background-color: #0b1120; color: #e2e8f0; }
        .section-card { background-color: #ffffff; border: 1px solid #e2e8f0; transition: box-shadow 0.3s ease-in-out; }
        html.dark .section-card { background-color: #1e293b; border-color: #334155; }
        h2.page-title { border-bottom: 3px solid #2563eb; padding-bottom: 0.5rem; }
        h3.section-title { border-left: 4px solid #2563eb; padding-left: 0.75rem; }
        input, select { transition: border-color 0.2s, box-shadow 0.2s; }
        input:focus, select:focus { border-color: #2563eb !important; box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2); }
        input.invalid { border-color: #ef4444 !important; }
        .nav-link.active { color: #1d4ed8; font-weight: 600; border-bottom: 2px solid #1d4ed8; }
        html.dark .nav-link.active { color: #60a5fa; border-bottom-color: #60a5fa;}
        .tool-nav-link.active { background-color: #2563eb; color: white; }
        html.dark .tool-nav-link.active { background-color: #60a5fa; color: #0b1120; }
        .chart-tab.active { border-bottom-color: #2563eb; color: #1d4ed8; font-weight: 600; }
        html.dark .chart-tab.active { border-bottom-color: #60a5fa; color: #60a5fa; }
        .btn-spinner { animation: spin 1s linear infinite; }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        .theory-link.active { background-color: #dbeafe; color: #1e40af; font-weight: 600; }
        html.dark .theory-link.active { background-color: #1e3a8a; color: #eff6ff; }
        table { width: 100%; border-collapse: collapse; }
        th, td { padding: 0.75rem; text-align: left; border-bottom: 1px solid #e2e8f0; }
        html.dark th, html.dark td { border-bottom-color: #334155; }
        th { background-color: #f1f5f9; font-weight: 600; }
        html.dark th { background-color: #334155; }
    </style>
</head>
<body class="text-slate-900 dark:text-slate-200">

    <div id="app" class="flex flex-col min-h-screen">
        <!-- Header -->
        <header class="bg-white dark:bg-slate-800/80 backdrop-blur-sm shadow-sm sticky top-0 z-50 border-b border-slate-200 dark:border-slate-700">
             <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex items-center justify-between h-16">
                    <div class="flex items-center space-x-4">
                       <i class="fas fa-cubes text-3xl text-blue-600"></i>
                       <h1 class="text-xl font-bold text-slate-900 dark:text-white">PillarPlatform</h1>
                    </div>
                    <nav class="hidden md:flex items-baseline space-x-1">
                        <a href="#home" class="nav-link px-3 py-2 rounded-md text-sm font-medium">Home</a>
                        <a href="#theory" class="nav-link px-3 py-2 rounded-md text-sm font-medium">Theory Hub</a>
                        <a href="#tools/optimizer" class="nav-link px-3 py-2 rounded-md text-sm font-medium">Design Suite</a>
                        <a href="#studies" class="nav-link px-3 py-2 rounded-md text-sm font-medium">Case Studies</a>
                    </nav>
                    <div class="flex items-center">
                        <button id="theme-toggle" class="p-2 rounded-full hover:bg-slate-200 dark:hover:bg-slate-700 focus:outline-none"><i id="theme-icon" class="fas fa-sun"></i></button>
                        <button id="mobile-menu-button" class="md:hidden ml-2 p-2 rounded-md text-slate-500"><i class="fas fa-bars text-xl"></i></button>
                    </div>
                </div>
            </div>
            <div id="mobile-menu" class="md:hidden hidden bg-white dark:bg-slate-800 border-t border-slate-200 dark:border-slate-700">
                <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
                    <a href="#home" class="nav-link block px-3 py-2 rounded-md text-base font-medium">Home</a>
                    <a href="#theory" class="nav-link block px-3 py-2 rounded-md text-base font-medium">Theory Hub</a>
                    <a href="#tools/optimizer" class="nav-link block px-3 py-2 rounded-md text-base font-medium">Design Suite</a>
                    <a href="#studies" class="nav-link block px-3 py-2 rounded-md text-base font-medium">Case Studies</a>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="flex-grow container mx-auto p-4 sm:p-6 lg:p-8">
            <section id="home" class="page-section">
                <div class="relative bg-white dark:bg-slate-800 p-8 rounded-lg shadow-xl border border-slate-200 dark:border-slate-700 overflow-hidden">
                    <div class="absolute inset-0 bg-cover bg-center opacity-10 dark:opacity-20" style="background-image: url('https://placehold.co/1200x400/1e293b/9ca3af?text=Geomechanics');"></div>
                    <div class="relative z-10 text-center">
                        <h2 class="text-4xl font-extrabold mb-4">The Professional Geomechanical Suite</h2>
                        <p class="text-lg text-slate-600 dark:text-slate-300 max-w-3xl mx-auto mb-8">An integrated platform for underground pillar design, featuring deterministic and probabilistic tools, a comprehensive theory hub, and critical case studies.</p>
                        <div class="flex justify-center space-x-4">
                            <a href="#tools/optimizer" class="nav-link-button bg-blue-600 text-white font-semibold px-6 py-3 rounded-lg hover:bg-blue-700 transition-all transform hover:scale-105 shadow-lg">Launch Design Suite <i class="fas fa-rocket ml-2"></i></a>
                            <a href="#theory" class="nav-link-button bg-slate-200 dark:bg-slate-700 text-slate-800 dark:text-slate-200 font-semibold px-6 py-3 rounded-lg hover:bg-slate-300 dark:hover:bg-slate-600 transition-all transform hover:scale-105 shadow-lg">Explore Theory Hub <i class="fas fa-book-open ml-2"></i></a>
                        </div>
                    </div>
                </div>
            </section>

            <section id="theory" class="page-section hidden">
                <h2 class="page-title text-3xl font-bold mb-8">The Geomechanics of Pillar Failure</h2>
                <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                    <aside class="col-span-1"><div class="sticky top-24">
                        <h3 class="text-xl font-semibold mb-4">Knowledge Areas</h3>
                        <ul class="space-y-2">
                            <li><a href="#theory/foundations" class="theory-link block p-3 rounded-lg font-medium hover:bg-slate-200 dark:hover:bg-slate-700">Foundational Principles</a></li>
                            <li><a href="#theory/brittle" class="theory-link block p-3 rounded-lg font-medium hover:bg-slate-200 dark:hover:bg-slate-700">Brittle Failure</a></li>
                            <li><a href="#theory/shear" class="theory-link block p-3 rounded-lg font-medium hover:bg-slate-200 dark:hover:bg-slate-700">Shear Failure</a></li>
                            <li><a href="#theory/geometry" class="theory-link block p-3 rounded-lg font-medium hover:bg-slate-200 dark:hover:bg-slate-700">Influence of Geometry</a></li>
                        </ul>
                    </div></aside>
                    <div class="col-span-3 space-y-12">
                        <article id="theory-foundations" class="theory-content section-card p-6 rounded-lg">
                            <h3 class="section-title text-2xl font-bold mb-4">Foundational Principles of Pillar Stability</h3>
                            <p class="mb-4">Pillars are engineered, load-bearing structures whose primary function is to provide global stability to the mine by supporting the overburden. Their design is a critical balance between maximizing ore recovery and ensuring long-term safety. Historically, design relied on the Factor of Safety (FoS), the ratio of pillar strength to pillar stress.</p>
                            <p class="mb-4">However, this simple approach is limited. It treats each pillar in isolation and fails to account for the systemic risk of a progressive, chain-reaction collapse known as **Catastrophic Pillar Failure (CPF)**. A more advanced, stiffness-based paradigm is required, which considers the mechanical interaction between the pillar and the surrounding rock mass to prevent such events.</p>
                        </article>
                        <article id="theory-brittle" class="theory-content section-card p-6 rounded-lg">
                            <h3 class="section-title text-2xl font-bold mb-4">Brittle Failure Mechanisms (Spalling & Slabbing)</h3>
                             <p class="mb-4">Common in deep, hard rock mines, brittle failure initiates as tensile fracturing at a microscopic level, even under overall compressive load. This damage begins at the **Crack Initiation (CI) threshold**, often just 40-50% of the rock's ultimate compressive strength (UCS).</p>
                             <p class="mb-4">As stress increases, microcracks coalesce into larger fractures parallel to the pillar wall, causing thin layers of rock to peel off in a process called **spalling** or slabbing. This is most pronounced at the pillar's free face where there is no confining pressure. In highly stressed ground, the violent ejection of these slabs can result in a rock burst.</p>
                             <div class="text-center my-4"><img src="https://placehold.co/600x300/e2e8f0/1e293b?text=Brittle+Spalling+on+Pillar+Wall" alt="Diagram showing spalling failure on a pillar" class="mx-auto rounded-lg shadow-md"><p class="text-sm mt-2 text-slate-500">Spalling progresses from the unconfined skin inwards.</p></div>
                        </article>
                        <article id="theory-shear" class="theory-content section-card p-6 rounded-lg">
                            <h3 class="section-title text-2xl font-bold mb-4">Shear Failure Mechanisms</h3>
                            <p class="mb-4">Shear failure is common in complex stress environments, such as inclined orebodies or areas with high horizontal stress. The load on the pillar resolves into both a compressive and a shear component. This combined loading leads to a loss of confinement in the pillar's core.</p>
                             <p class="mb-4">The loss of confinement reduces the normal stress across internal planes of weakness (like joints or faults), decreasing their shear resistance. When the driving shear stress exceeds this reduced resistance, the pillar fails by sliding along these pre-existing or induced planes. The **dip angle of the orebody** is the most influential factor, as a steeper dip directly increases the shear load on the pillar.</p>
                        </article>
                        <article id="theory-geometry" class="theory-content section-card p-6 rounded-lg">
                            <h3 class="section-title text-2xl font-bold mb-4">The Critical Influence of Pillar Geometry (w/h Ratio)</h3>
                             <p class="mb-4">The **width-to-height (w/h) ratio** is the most critical engineering parameter in pillar design. It dictates not only the pillar's strength but also its post-failure behavior (ductility vs. brittleness).</p>
                             <ul class="list-disc list-inside space-y-2 mb-4">
                                 <li><strong>Slender Pillars (Low w/h):</strong> These pillars have little to no confined core. They fail in a brittle manner, rapidly losing all load-bearing capacity. This makes them susceptible to violent failure and a potential trigger for CPF.</li>
                                 <li><strong>Squat Pillars (High w/h):</strong> These pillars develop a substantial, highly confined core. Failure is progressive and ductile, starting at the skin while the core continues to carry load. They are fundamentally more stable and can halt a CPF.</li>
                             </ul>
                             <p>By engineering pillars with a sufficiently high w/h ratio, a designer can ensure a stable failure mode for the entire mine system, which is the mechanical principle behind modern CPF prevention strategies.</p>
                        </article>
                    </div>
                </div>
            </section>
            
            <section id="tools" class="page-section hidden">
                 <h2 class="page-title text-3xl font-bold mb-8">Geomechanical Design Suite</h2>
                <div class="flex flex-col md:flex-row gap-8">
                    <aside class="md:w-1/4">
                        <nav id="tool-nav" class="space-y-2 sticky top-24">
                            <a href="#tools/optimizer" class="tool-nav-link block p-4 rounded-lg font-semibold text-lg hover:bg-slate-200 dark:hover:bg-slate-700"><i class="fas fa-cogs mr-3"></i>Pillar Optimizer</a>
                            <a href="#tools/rmr" class="tool-nav-link block p-4 rounded-lg font-semibold text-lg hover:bg-slate-200 dark:hover:bg-slate-700"><i class="fas fa-chart-bar mr-3"></i>RMR Calculator</a>
                            <a href="#tools/pof" class="tool-nav-link block p-4 rounded-lg font-semibold text-lg hover:bg-slate-200 dark:hover:bg-slate-700"><i class="fas fa-dice mr-3"></i>Probabilistic Analysis</a>
                        </nav>
                    </aside>
                    <div class="flex-1">
                        <div id="tool-optimizer" class="tool-content">
                            <div class="section-card p-6 rounded-lg" id="optimizer-content-card">
                                <div class="flex justify-between items-center mb-4">
                                    <h3 class="section-title text-2xl font-bold">Pillar Stability Optimizer</h3>
                                    <button id="export-optimizer-pdf" class="bg-indigo-100 dark:bg-indigo-900/50 text-indigo-600 dark:text-indigo-300 text-sm font-medium py-2 px-4 rounded-lg hover:bg-indigo-200 dark:hover:bg-indigo-900 transition-colors"><i class="fas fa-file-pdf mr-2"></i>Export Report</button>
                                </div>
                                <div id="optimizer-warning" class="hidden p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-slate-800 dark:text-red-400" role="alert"></div>
                                <form id="designForm">
                                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                                        <div class="space-y-6">
                                            <div><h4 class="font-bold mb-2 text-slate-800 dark:text-slate-200">1. Design Constraints & Overburden</h4>
                                                <div class="grid grid-cols-2 gap-4">
                                                    <div><label class="block text-sm font-medium">Pillar Height (h, m)</label><input type="number" id="pillar-height" value="5.0" step="0.1" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>
                                                    <div><label class="block text-sm font-medium">Depth (H, m)</label><input type="number" id="depth-total" value="400" step="10" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>
                                                    <div><label class="block text-sm font-medium">Room Width (Wo, m)</label><input type="number" id="opening-width" value="7.0" step="0.1" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>
                                                    <div class="col-span-2"><label class="block text-sm font-medium">Target FoS</label><input type="number" id="target-fos" value="1.8" step="0.1" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>
                                                    <div class="col-span-2"><label class="block text-sm font-medium">Overburden Province</label><select id="overburden-province" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></select></div>
                                                    <div><label class="block text-sm font-medium">Avg. Overburden Density (g/cm³)</label><input type="number" id="density-overburden" step="0.01" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>
                                                </div>
                                            </div>
                                            <div><h4 class="font-bold mb-2 text-slate-800 dark:text-slate-200">2. Pillar Material Properties</h4>
                                                <div><label class="block text-sm font-medium">Material Category</label><select id="rock-type" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></select></div>
                                                <div class="mt-4"><label class="block text-sm font-medium">Specific Material</label><select id="rock-material" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></select></div>
                                                <div class="grid grid-cols-1 gap-4 mt-4">
                                                    <div><label class="block text-sm font-medium">Intact UCS (MPa)</label><input type="number" id="ucs-intact" step="1" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="space-y-6">
                                            <div><h4 class="font-bold mb-2 text-slate-800 dark:text-slate-200">3. Strength Criterion</h4>
                                                <p id="recommendation-message" class="text-sm font-semibold mb-2 p-3 rounded-md border"></p>
                                                <label class="block text-sm font-medium">Pillar Strength Formula</label>
                                                <select id="pillar-formula" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></select>
                                                <div id="formula-description" class="text-xs text-slate-500 dark:text-slate-400 mt-2 p-2 bg-slate-100 dark:bg-slate-800 rounded"></div>
                                                <div id="formula-custom-inputs" class="mt-4 space-y-3"></div>
                                                <div class="flex items-center space-x-2 mt-4">
                                                    <button type="submit" id="optimizer-submit-btn" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg shadow-md transition-all transform hover:scale-[1.01] flex items-center justify-center">
                                                        <span>Run Optimization</span>
                                                    </button>
                                                    <button type="button" id="optimizer-reset-btn" title="Reset to default values" class="p-3 bg-slate-200 hover:bg-slate-300 dark:bg-slate-700 dark:hover:bg-slate-600 text-slate-700 dark:text-slate-200 rounded-lg transition-colors">
                                                        <i class="fas fa-undo"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div id="results-section" class="hidden mt-8 section-card p-6 rounded-lg">
                                 <h3 class="section-title text-2xl font-bold mb-6">4. Design Summary & Analysis Suite</h3>
                                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                                     <div class="p-4 rounded-lg shadow-inner border-l-4 border-red-500 bg-red-50 dark:bg-slate-800"><p class="text-sm font-semibold text-slate-600 dark:text-slate-300">Pillar Stress (Load)</p><p id="sigma_a_val" class="text-2xl font-bold text-red-700 dark:text-red-400 mt-1">-- MPa</p></div>
                                     <div class="p-4 rounded-lg shadow-inner border-l-4 border-green-500 bg-green-50 dark:bg-slate-800"><p class="text-sm font-semibold text-slate-600 dark:text-slate-300">Pillar Strength</p><p id="sigma_p_val" class="text-2xl font-bold text-green-700 dark:text-green-400 mt-1">-- MPa</p></div>
                                     <div id="fos-card" class="p-4 rounded-lg shadow-inner border-l-4"><p class="text-sm font-semibold">Factor of Safety (FoS)</p><p id="FOS_final_val" class="text-2xl font-bold mt-1">--</p></div>
                                </div>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
                                    <div><h3 class="text-lg font-semibold mb-3">Design Summary</h3><table class="w-full text-sm"><tbody class="divide-y divide-slate-200 dark:divide-slate-700"><tr class="py-2"><td class="py-2">Required Pillar Width (Wp)</td><td id="W_final_val" class="font-bold text-right">-- m</td></tr><tr class="py-2"><td class="py-2">W/H Ratio</td><td id="WH_ratio_val" class="font-bold text-right">--</td></tr><tr class="py-2"><td class="py-2">Extraction Ratio</td><td id="R_ext_val" class="font-bold text-right">-- %</td></tr></tbody></table></div>
                                    <div><h3 class="text-lg font-semibold mb-3">Geometrical Context</h3><div class="bg-slate-100 dark:bg-slate-800 p-2 rounded-md"><svg id="schematic-svg" viewBox="0 0 200 100" class="w-full h-auto"></svg></div></div>
                                </div>
                                <div>
                                    <div class="border-b border-slate-200 dark:border-slate-700">
                                        <nav class="-mb-px flex space-x-6" aria-label="Tabs"><button class="chart-tab" data-chart="wh-fos">FoS vs. W/H</button><button class="chart-tab" data-chart="strength-load">Strength vs. Load</button><button class="chart-tab" data-chart="econ">Economic Trade-off</button><button class="chart-tab" data-chart="sensitivity">Sensitivity</button></nav>
                                    </div>
                                    <div class="mt-4">
                                        <div id="chart-wh-fos-container" class="chart-container h-80"><canvas id="wh-fos-chart"></canvas></div>
                                        <div id="chart-strength-load-container" class="chart-container hidden h-80"><canvas id="strength-load-chart"></canvas></div>
                                        <div id="chart-econ-container" class="chart-container hidden h-80"><canvas id="econ-chart"></canvas></div>
                                        <div id="chart-sensitivity-container" class="chart-container hidden h-80"><canvas id="sensitivity-chart"></canvas></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="tool-rmr" class="tool-content hidden">
                              <div class="section-card p-6 rounded-lg">
                                <h3 class="section-title text-2xl font-bold mb-4">Rock Mass Rating (RMR89) Calculator</h3>
                                <p class="mb-6 text-slate-600 dark:text-slate-400">Calculate the RMR value based on Bieniawski's 1989 classification system.</p>
                                <form id="rmr-form" class="grid grid-cols-1 md:grid-cols-2 gap-6"></form>
                                <div id="rmr-result-container" class="mt-6 p-6 bg-blue-50 dark:bg-slate-800 rounded-lg text-center hidden"></div>
                            </div>
                        </div>
                        <div id="tool-pof" class="tool-content hidden">
                             <div class="section-card p-6 rounded-lg">
                                <h3 class="section-title text-2xl font-bold mb-4">Probabilistic Analysis (Monte Carlo)</h3>
                                <p class="mb-6 text-slate-600 dark:text-slate-400">Calculate the Probability of Failure (PoF) by treating key inputs as statistical distributions.</p>
                                <form id="pof-form" class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-4"></form>
                                 <div id="pof-results-container" class="hidden mt-6">
                                     <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                                         <div class="p-6 bg-slate-100 dark:bg-slate-800 rounded-lg">
                                             <p class="text-sm font-semibold text-slate-600 dark:text-slate-300">Probability of Failure (PoF)</p>
                                             <p id="pof-value" class="text-4xl font-bold text-blue-600 dark:text-blue-400 mt-2">-- %</p>
                                             <p id="pof-class" class="text-lg font-semibold mt-1">--</p>
                                         </div>
                                         <div class="h-64"><canvas id="pof-chart"></canvas></div>
                                     </div>
                                 </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            
            <section id="studies" class="page-section hidden">
                <h2 class="page-title text-3xl font-bold mb-8">Case Study: Rampura-Agucha Mine, India</h2>
                <div class="section-card p-6 lg:p-8 rounded-lg space-y-8">
                    
                    <div>
                        <h3 class="section-title text-2xl font-bold mb-4">Mine Overview & Geotechnical Challenge</h3>
                        <p class="mb-4">The Rampura-Agucha Mine in Rajasthan, India, is a world-class underground lead-zinc deposit. The orebody is hosted in a high-grade metamorphic complex characterized by a strong and pervasive **foliation** (layering). This geological fabric makes the rock mass highly **anisotropic**—meaning its strength is much lower when stressed parallel to the foliation planes.</p>
                        <p>The core challenge is not preventing simple crushing of the rock, but managing large-scale, structurally controlled shear displacement along these weak foliation planes. The design focus shifts from a strength problem to a deformation problem.</p>
                    </div>

                    <div>
                         <h3 class="section-title text-2xl font-bold mb-4">Rock Mass Characterization & In-Situ Stress</h3>
                         <p class="mb-4">A comprehensive investigation was undertaken, including lab testing, geotechnical mapping, and in-situ stress measurements using hydraulic fracturing. The rock mass was classified as "fair quality" using the GSI system. The stress measurements confirmed a high-stress environment, defined by the following site-specific equations:</p>
                        <div class="overflow-x-auto rounded-lg border dark:border-slate-700">
                             <table>
                                 <thead>
                                     <tr><th>Stress Component</th><th>Equation (H = depth in meters)</th><th>Description</th></tr>
                                 </thead>
                                 <tbody>
                                     <tr><td>Major Horizontal Stress (σH)</td><td>σH = 6.56 + 0.034 × H (MPa)</td><td>Maximum horizontal stress, oriented North-South.</td></tr>
                                     <tr><td>Minor Horizontal Stress (σh)</td><td>σh = 1.73 + 0.017 × H (MPa)</td><td>Minimum horizontal stress, oriented East-West.</td></tr>
                                     <tr><td>Vertical Stress (σv)</td><td>σv = 0.028 × H (MPa)</td><td>Stress due to overburden weight.</td></tr>
                                 </tbody>
                             </table>
                        </div>
                    </div>
                    
                    <div>
                        <h3 class="section-title text-2xl font-bold mb-4">Numerical Modeling & Key Findings</h3>
                        <p class="mb-4">To capture the anisotropic behavior, analysis was performed using FLAC3D with a **Ubiquitous-Joint model**. This was critical, as it allows for simulating a rock mass containing defined planes of weakness. The model was populated with detailed site data:</p>
                        <div class="overflow-x-auto rounded-lg border dark:border-slate-700">
                            <table>
                                <thead>
                                    <tr><th>Property</th><th>Symbol</th><th>Value</th><th>Unit</th></tr>
                                </thead>
                                <tbody class="divide-y dark:divide-slate-700">
                                    <tr class="bg-slate-50 dark:bg-slate-800/50"><td colspan="4" class="font-semibold">Part A: Rock Mass Properties</td></tr>
                                    <tr><td>Young's Modulus</td><td>Em</td><td>6.24</td><td>GPa</td></tr>
                                    <tr><td>Cohesion</td><td>cm</td><td>2.4</td><td>MPa</td></tr>
                                    <tr><td>Friction Angle</td><td>φm</td><td>49.6</td><td>Degree</td></tr>
                                    <tr class="bg-slate-50 dark:bg-slate-800/50"><td colspan="4" class="font-semibold">Part B: Foliation Plane Properties</td></tr>
                                    <tr><td>Joint Cohesion</td><td>cj</td><td>0.21</td><td>MPa</td></tr>
                                    <tr><td>Joint Friction Angle</td><td>φj</td><td>33.3</td><td>Degree</td></tr>
                                    <tr><td>Joint Dip</td><td>dj</td><td>70</td><td>Degree</td></tr>
                                </tbody>
                            </table>
                        </div>
                        <p class="mt-4">The modeling confirmed that the dominant failure mechanism was large-scale **shear displacement along the foliation planes**, predicting closures up to 50% of the excavation width in drives oriented parallel to the foliation strike.</p>
                    </div>

                    <div>
                        <h3 class="section-title text-2xl font-bold mb-4">Ground Support & Strategic Implications</h3>
                        <p class="mb-4">The modeling results drove a **deformation-based** ground support design. The system, combining fully grouted resin bolts and fiber-reinforced shotcrete, was engineered to deform with the rock mass while maintaining its integrity. This case study proves that in structurally complex ground, simple empirical formulas are inadequate. A holistic approach integrating geology, rock mechanics, and calibrated numerical modeling is essential to manage the specific risks and ensure a safe, productive mine.</p>
                    </div>

                </div>
            </section>
        </main>
        
        <!-- Footer -->
        <footer class="bg-white dark:bg-slate-800 border-t border-slate-200 dark:border-slate-700 mt-12">
            <div class="container mx-auto py-6 px-4 sm:px-6 lg:px-8 text-center text-sm text-slate-500 dark:text-slate-400">
                <p>&copy; 2025 PillarPlatform. For educational and professional use in geomechanics.</p>
                <p class="mt-1">This tool is not a substitute for professional engineering judgment.</p>
            </div>
        </footer>
    </div>
    
<script type="module">
    document.addEventListener('DOMContentLoaded', () => {
        try {
            Navigation();
            Theme();
            PillarOptimizer();
            RMRCalculator();
            PoFCalculator();
        } catch (error) {
            console.error("A critical error occurred during initialization:", error);
            document.body.innerHTML = '<div class="text-center p-8"><h1>An Error Occurred</h1><p>The application could not start. Please check the console for details.</p></div>';
        }
    });

    /**
     * A shared utility function to create and return a new Chart.js instance.
     * It is responsible for setting up the chart with consistent styling.
     * The calling function is responsible for storing and destroying the chart instance.
     */
    function createChart(canvasId, type, data, xLabel, yLabel, additionalOptions = {}) {
        const ctx = document.getElementById(canvasId).getContext('2d');
        const isDark = document.documentElement.classList.contains('dark');
        const gridColor = isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';
        const textColor = isDark ? '#e2e8f0' : '#0f172a';
        
        return new Chart(ctx, {
            type: type,
            data: data,
            options: {
                responsive: true, maintainAspectRatio: false,
                interaction: { mode: 'index', intersect: false },
                scales: {
                    x: { title: { display: true, text: xLabel, color: textColor }, grid: { color: gridColor }, ticks: { color: textColor } },
                    y: { title: { display: true, text: yLabel, color: textColor }, grid: { color: gridColor }, ticks: { color: textColor } }
                },
                plugins: { 
                    legend: { labels: { color: textColor } },
                    tooltip: {
                        backgroundColor: isDark ? '#1e293b' : '#ffffff',
                        titleColor: textColor,
                        bodyColor: textColor,
                        borderColor: gridColor,
                        borderWidth: 1
                    }
                },
                ...additionalOptions
            }
        });
    }

    function Navigation() {
        const navLinks = document.querySelectorAll('.nav-link');
        const navButtons = document.querySelectorAll('.nav-link-button');
        const sections = document.querySelectorAll('.page-section');
        const toolNavLinks = document.querySelectorAll('.tool-nav-link');
        const toolContents = document.querySelectorAll('.tool-content');
        const theoryLinks = document.querySelectorAll('.theory-link');
        const theoryContents = document.querySelectorAll('.theory-content');

        function navigateTo(hash) { window.location.hash = hash; }
        
        function showSection(hash) {
            hash = hash || '#home';
            let [main, sub] = hash.substring(1).split('/');
            
            if (!document.getElementById(main)) { main = 'home'; }
            
            navLinks.forEach(l => {
                const linkMain = l.hash.substring(1).split('/')[0];
                l.classList.toggle('active', linkMain === main);
            });
            sections.forEach(s => s.classList.toggle('hidden', s.id !== main));

            if (main === 'tools') {
                const subpage = sub || 'optimizer';
                toolNavLinks.forEach(l => l.classList.toggle('active', l.hash === `#tools/${subpage}`));
                toolContents.forEach(c => c.classList.toggle('hidden', c.id !== `tool-${subpage}`));
            }

            if (main === 'theory') {
                const subpage = sub || 'foundations';
                theoryLinks.forEach(l => l.classList.toggle('active', l.hash === `#theory/${subpage}`));
                theoryContents.forEach(c => c.classList.toggle('hidden', c.id !== `theory-${subpage}`));
            }
        }

        window.addEventListener('hashchange', () => showSection(window.location.hash));
        [...navLinks, ...navButtons, ...toolNavLinks, ...theoryLinks].forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                // For theory links, scroll to the article instead of changing hash and reloading
                if (link.classList.contains('theory-link')) {
                    const targetId = link.hash.split('/')[1];
                    document.getElementById(`theory-${targetId}`).scrollIntoView({ behavior: 'smooth' });
                    theoryLinks.forEach(l => l.classList.remove('active'));
                    link.classList.add('active');
                } else {
                    navigateTo(e.currentTarget.hash);
                }
                const mobileMenu = document.getElementById('mobile-menu');
                if(mobileMenu) mobileMenu.classList.add('hidden');
            });
        });

        const mobileMenuButton = document.getElementById('mobile-menu-button');
        if(mobileMenuButton) {
            mobileMenuButton.addEventListener('click', () => {
                const mobileMenu = document.getElementById('mobile-menu');
                if(mobileMenu) mobileMenu.classList.toggle('hidden');
            });
        }
        
        // Handle initial page load
        const initialHash = window.location.hash;
        if (initialHash.startsWith('#theory/')) {
            showSection('#theory');
            const targetId = initialHash.split('/')[1];
            document.getElementById(`theory-${targetId}`)?.scrollIntoView();
            document.querySelector(`a[href="${initialHash}"]`)?.classList.add('active');
        } else {
             showSection(initialHash);
        }
    }
    
    function Theme() {
        const themeToggle = document.getElementById('theme-toggle');
        const themeIcon = document.getElementById('theme-icon');
        const html = document.documentElement;
        
        const applyTheme = (isDark) => {
            html.classList.toggle('dark', isDark);
            themeIcon.className = isDark ? 'fas fa-moon' : 'fas fa-sun';
        };

        const preferredTheme = localStorage.getItem('theme');
        if (preferredTheme === 'dark' || (!preferredTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            applyTheme(true);
        } else {
            applyTheme(false);
        }

        themeToggle.addEventListener('click', () => {
            const isDark = !html.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            applyTheme(isDark);
        });
    }

    function PillarOptimizer() {
        const charts = {};
        const initialValues = {}; 

        const materialDB = {
            'Sedimentary': [{ name: 'Coal', ucs: 25 }, { name: 'Shale', ucs: 45 }, { name: 'Sandstone', ucs: 80 }, { name: 'Limestone', ucs: 100 }],
            'Igneous': [{ name: 'Granite', ucs: 150 }, { name: 'Basalt', ucs: 200 }, { name: 'Diorite', ucs: 180 }],
            'Metamorphic': [{ name: 'Gneiss', ucs: 130 }, { name: 'Marble', ucs: 70 }, { name: 'Quartzite', ucs: 250 }, { name: 'Slate', ucs: 120 }, { name: 'Schist', ucs: 60 }],
            'Metallic Ores': [
                { name: 'Iron Ore (Hematite)', ucs: 60 }, { name: 'Manganese Ore (Balaghat)', ucs: 220 },
                { name: 'Chromite Ore (Competent)', ucs: 200 }, { name: 'Lead-Zinc Ore (Rampura-Agucha)', ucs: 75 }
            ],
            'Industrial Minerals': [ { name: 'Rock Salt (Halite)', ucs: 15 }, { name: 'Potash', ucs: 22 }, { name: 'Gypsum', ucs: 25 }]
        };
        const overburdenDB = {
            'Gondwana Supergroup': 2.55, 'Deccan Traps': 2.65,
            'Alluvium (Compacted)': 1.90, 'Alluvium (Near Surface)': 1.60,
            'Lateritic Formations': 1.90
        };
        const formulaDB = {
            "sheorey": { name: "Sheorey (CIMFR - Indian Coal)", description: "Empirical formula developed for Indian coalfields, accounting for depth.", calculation: (ucs, W, h, p, H) => 0.27 * ucs * Math.pow(h, -0.36) * Math.pow(W/h, (0.0006 * H + 0.37)), params: [] },
            "mark-bieniawski": { name: "Mark-Bieniawski (Squat Pillars)", description: "Modification of Bieniawski formula, suitable for squat pillars (W/h > 5).", calculation: (ucs, W, h, p) => p.s1 * (0.64 + 0.54*(W/h) - 0.18 * (Math.pow(W,2)/(p.L * h))), params: [ {id: 's1', name: 'In-situ Coal Strength (S1, MPa)', default: 6.2}, {id: 'L', name: 'Pillar Length (L, m)', default: 20} ] },
            "hedley-grant": { name: "Hedley & Grant (Hard Rock)", description: "Widely used empirical formula for hard rock mines in Canada.", calculation: (ucs, W, h, p) => p.k_factor * ucs * (Math.pow(W, 0.5) / Math.pow(h, 0.75)), params: [{ id: 'k_factor', name: 'K Factor (0.3-0.6)', default: 0.5 }] },
            "hoek-brown-brittle": { name: "Hoek-Brown (Brittle Spalling)", description: "Accounts for brittle failure processes common in hard, massive rock masses.", calculation: (ucs, W, h, p) => { const mb = p.mi * Math.exp((p.gsi - 100) / 28); const s = Math.exp((p.gsi - 100) / 9); const rmUCS = ucs * Math.pow(mb / 4 + s, 0.5); return rmUCS * (0.778 + 0.222 * (W / h)); }, params: [{ id: 'gsi', name: 'GSI', default: 50 }, { id: 'mi', name: 'mi', default: 10 }] }
        };

        const form = document.getElementById('designForm');
        if (!form) return;
        
        const rockTypeSelect = document.getElementById('rock-type');
        const rockMaterialSelect = document.getElementById('rock-material');
        const ucsInput = document.getElementById('ucs-intact');
        const densityInput = document.getElementById('density-overburden');
        const overburdenSelect = document.getElementById('overburden-province');
        const formulaSelect = document.getElementById('pillar-formula');
        const resultsSection = document.getElementById('results-section');
        const warningDiv = document.getElementById('optimizer-warning');
        const submitBtn = document.getElementById('optimizer-submit-btn');
        const resetBtn = document.getElementById('optimizer-reset-btn');

        function populateOverburden() { overburdenSelect.innerHTML = Object.keys(overburdenDB).map(name => `<option value="${name}">${name}</option>`).join(''); }
        function populateRockTypes() { rockTypeSelect.innerHTML = Object.keys(materialDB).map(type => `<option value="${type}">${type}</option>`).join(''); }
        function populateFormulas() { formulaSelect.innerHTML = Object.keys(formulaDB).map(key => `<option value="${key}">${formulaDB[key].name}</option>`).join(''); }
        
        function updateOverburdenDensity() { densityInput.value = overburdenDB[overburdenSelect.value]; }

        function populateRockMaterials() {
            const selectedType = rockTypeSelect.value;
            rockMaterialSelect.innerHTML = materialDB[selectedType].map(mat => `<option value="${mat.name}">${mat.name}</option>`).join('');
            updateMaterialProperties();
            updateFormulaRecommendation();
        }

        function updateMaterialProperties() {
            const material = materialDB[rockTypeSelect.value].find(m => m.name === rockMaterialSelect.value);
            if (material) ucsInput.value = material.ucs;
        }

        function updateFormulaDetails() {
            if (!formulaSelect.value) return;
            const formula = formulaDB[formulaSelect.value];
            document.getElementById('formula-description').textContent = formula.description || '';
            document.getElementById('formula-custom-inputs').innerHTML = (formula.params || []).map(param => `<div><label class="block text-sm font-medium">${param.name}</label><input type="number" id="param-${param.id}" value="${param.default}" step="0.1" required class="mt-1 block w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>`).join('');
        }

        function updateFormulaRecommendation() {
            const type = rockTypeSelect.value;
            let recommendedKey = "hedley-grant", message = "For general hard rock, Hedley & Grant is a common choice.", rClass = "text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-slate-800 border-blue-300 dark:border-blue-700";
            if (rockMaterialSelect.value === 'Coal') {
                recommendedKey = "sheorey"; message = "For Indian Coal, the Sheorey (CIMFR) formula is the standard."; rClass = "text-purple-600 dark:text-purple-400 bg-purple-50 dark:bg-slate-800 border-purple-300 dark:border-purple-700";
            } else if (type === 'Metamorphic' || type === 'Igneous' || type === 'Metallic Ores' ) {
                recommendedKey = "hoek-brown-brittle"; message = "For hard rock, the Hoek-Brown brittle criterion is recommended for spalling analysis."; rClass = "text-green-600 dark:text-green-400 bg-green-50 dark:bg-slate-800 border-green-300 dark:border-green-700";
            }
            const recMessage = document.getElementById('recommendation-message');
            recMessage.textContent = `Recommendation: ${message}`;
            recMessage.className = `text-sm font-semibold mb-2 p-3 rounded-md border ${rClass}`;
            formulaSelect.value = recommendedKey;
            updateFormulaDetails();
        }

        function saveInitialValues() {
            const formElements = form.elements;
            for (const element of formElements) {
                if (element.id) {
                    initialValues[element.id] = element.value;
                }
            }
        }

        function resetForm() {
             for (const id in initialValues) {
                const element = document.getElementById(id);
                if (element) {
                    element.value = initialValues[id];
                    if (id === 'overburden-province' || id === 'rock-type' || id === 'pillar-formula') {
                        element.dispatchEvent(new Event('change'));
                    }
                }
            }
            resultsSection.classList.add('hidden');
            warningDiv.classList.add('hidden');
        }
        
        async function handleFormSubmit(e) { 
            e.preventDefault(); 
            
            warningDiv.classList.add('hidden');
            form.querySelectorAll('input.invalid').forEach(el => el.classList.remove('invalid'));

            let isValid = true;
            let invalidFields = [];
            const formElements = form.elements;
            for(const el of formElements) {
                if (el.type === 'number' && (el.value === '' || el.value <= 0)) {
                    el.classList.add('invalid');
                    invalidFields.push(el.previousElementSibling.textContent);
                    isValid = false;
                }
            }

            if (!isValid) {
                warningDiv.innerHTML = `<span class="font-medium">Validation Error:</span> The following fields must be positive: ${invalidFields.join(', ')}.`;
                warningDiv.classList.remove('hidden');
                return;
            }
            
            submitBtn.disabled = true;
            submitBtn.innerHTML = `<i class="fas fa-spinner btn-spinner mr-2"></i><span>Calculating...</span>`;
            await new Promise(resolve => setTimeout(resolve, 50));

            try {
                const inputs = {};
                inputs.h = parseFloat(document.getElementById('pillar-height').value);
                inputs.H = parseFloat(document.getElementById('depth-total').value);
                inputs.Wo = parseFloat(document.getElementById('opening-width').value);
                inputs.targetFos = parseFloat(document.getElementById('target-fos').value);
                inputs.density = parseFloat(document.getElementById('density-overburden').value);
                inputs.ucs = parseFloat(document.getElementById('ucs-intact').value);
                inputs.formulaKey = document.getElementById('pillar-formula').value;
                inputs.params = {};
                
                const formula = formulaDB[inputs.formulaKey];
                (formula.params || []).forEach(p => { inputs.params[p.id] = parseFloat(document.getElementById(`param-${p.id}`).value); });

                const density_MPa_m = (inputs.density * 9.81) / 1000;
                let Wp = inputs.Wo / 2; 
                let currentFos = 0, iteration = 0;

                while (iteration < 2000) {
                    const load = density_MPa_m * inputs.H * Math.pow((Wp + inputs.Wo), 2) / Math.pow(Wp, 2);
                    const strength = formula.calculation(inputs.ucs, Wp, inputs.h, inputs.params, inputs.H);
                    currentFos = strength / load;
                    
                    if (Math.abs(currentFos - inputs.targetFos) < 0.005) break; 
                    const error = currentFos - inputs.targetFos;
                    let step = Math.min(0.5, Math.abs(error) * 0.2 * Wp); 
                    if (step < 0.001) step = 0.001;
                    Wp = error < 0 ? Wp + step : Wp - step;
                    if (Wp <= 0.1) { Wp = 0.1; break; } 
                    iteration++;
                }
                if (iteration >= 2000) {
                     warningDiv.textContent = "Warning: Optimization failed to converge. Check inputs.";
                     warningDiv.classList.remove('hidden');
                }

                const finalLoad = density_MPa_m * inputs.H * Math.pow((Wp + inputs.Wo), 2) / Math.pow(Wp, 2);
                const finalStrength = formula.calculation(inputs.ucs, Wp, inputs.h, inputs.params, inputs.H);
                const finalFos = finalStrength / finalLoad;

                displayResults(Wp, inputs.h, inputs.Wo, finalLoad, finalStrength, finalFos, inputs);
            } catch(error) {
                console.error("Calculation Error:", error);
                warningDiv.textContent = "An unexpected error occurred during calculation.";
                warningDiv.classList.remove('hidden');
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = `<span>Run Optimization</span>`;
            }
        }

        function displayResults(Wp, h, Wo, load, strength, fos, inputs) {
            document.getElementById('sigma_a_val').textContent = `${load.toFixed(2)} MPa`;
            document.getElementById('sigma_p_val').textContent = `${strength.toFixed(2)} MPa`;
            document.getElementById('FOS_final_val').textContent = fos.toFixed(2);
            document.getElementById('W_final_val').textContent = `${Wp.toFixed(2)} m`;
            document.getElementById('WH_ratio_val').textContent = (Wp/h).toFixed(2);
            const R_ext = (1 - (Math.pow(Wp, 2) / Math.pow(Wp + Wo, 2))) * 100;
            document.getElementById('R_ext_val').textContent = `${R_ext.toFixed(1)} %`;
            
            const fosCard = document.getElementById('fos-card');
            fosCard.className = 'p-4 rounded-lg shadow-inner border-l-4 transition-colors';
            if (fos < 1.2) fosCard.classList.add('bg-red-50', 'dark:bg-slate-800', 'border-red-500');
            else if (fos < 1.5) fosCard.classList.add('bg-yellow-50', 'dark:bg-slate-800', 'border-yellow-500');
            else fosCard.classList.add('bg-green-50', 'dark:bg-slate-800', 'border-green-500');

            resultsSection.classList.remove('hidden');
            resultsSection.scrollIntoView({ behavior: 'smooth' });
            updateSchematic(Wp, Wo, h);
            updateAllCharts(Wp, inputs);
        }

        function updateSchematic(Wp, Wo, h) {
            const svg = document.getElementById('schematic-svg');
            const totalWidth = 2 * Wo + Wp;
            const room1Width = (Wo / totalWidth) * 200;
            const pillarWidth = (Wp / totalWidth) * 200;
            const room1X = 0;
            const pillarX = room1X + room1Width;
            const room2X = pillarX + pillarWidth;

            svg.innerHTML = `
                <rect x="${room1X}" y="20" width="${room1Width}" height="60" fill="#cbd5e1" class="dark:fill-slate-600" />
                <rect x="${pillarX}" y="20" width="${pillarWidth}" height="60" fill="#64748b" class="dark:fill-slate-400" />
                <rect x="${room2X}" y="20" width="${room1Width}" height="60" fill="#cbd5e1" class="dark:fill-slate-600" />
                <text x="${pillarX + pillarWidth/2}" y="55" font-size="10" fill="white" text-anchor="middle">Wp=${Wp.toFixed(1)}m</text>
                <text x="${room1X + room1Width/2}" y="55" font-size="10" fill="#1e293b" class="dark:fill-slate-200" text-anchor="middle">Wo=${Wo.toFixed(1)}m</text>
            `;
        }
        
        function updateAllCharts(finalWp, inputs) {
            const { h, Wo, H, ucs, formulaKey, params, density } = inputs;
            const formula = formulaDB[formulaKey];
            const density_MPa_m = (density * 9.81) / 1000;
            const range = Array.from({length: 41}, (_, i) => Math.max(0.2, finalWp * 0.5 + (finalWp * 1.5 * i / 40)));
            
            const fosData = range.map(Wp => {
                const load = density_MPa_m * H * Math.pow((Wp + Wo), 2) / Math.pow(Wp, 2);
                const strength = formula.calculation(ucs, Wp, h, params, H);
                return strength/load;
            });
            if (charts['wh-fos']) charts['wh-fos'].destroy();
            charts['wh-fos'] = createChart('wh-fos-chart', 'line', {
                labels: range.map(Wp => (Wp/h).toFixed(2)),
                datasets: [{ label: 'Factor of Safety', data: fosData, borderColor: '#2563eb', tension: 0.1, pointBackgroundColor: '#2563eb' }]
            }, 'Pillar Width/Height Ratio', 'Factor of Safety (FoS)');

            const loadData = range.map(Wp => density_MPa_m * H * Math.pow((Wp + Wo), 2) / Math.pow(Wp, 2));
            const strengthData = range.map(Wp => formula.calculation(ucs, Wp, h, params, H));
            if (charts['strength-load']) charts['strength-load'].destroy();
            charts['strength-load'] = createChart('strength-load-chart', 'line', {
                labels: range.map(Wp => Wp.toFixed(1)),
                datasets: [
                    { label: 'Pillar Strength', data: strengthData, borderColor: '#16a34a', tension: 0.1, pointBackgroundColor: '#16a34a' },
                    { label: 'Pillar Load', data: loadData, borderColor: '#dc2626', tension: 0.1, pointBackgroundColor: '#dc2626' }
                ]
            }, 'Pillar Width (m)', 'Stress (MPa)');

            const extRatioData = range.map(Wp => (1 - (Math.pow(Wp, 2) / Math.pow(Wp + Wo, 2))) * 100);
            if (charts['econ']) charts['econ'].destroy();
            charts['econ'] = createChart('econ-chart', 'line', {
                labels: fosData.map(f => f.toFixed(2)),
                datasets: [{ label: 'Extraction Ratio', data: extRatioData, borderColor: '#ca8a04', tension: 0.1, pointBackgroundColor: '#ca8a04' }]
            }, 'Factor of Safety (FoS)', 'Extraction Ratio (%)');

            const variations = { 'UCS (-10%)': 0.9, 'UCS (+10%)': 1.1, 'Depth (-10%)': 0.9, 'Depth (+10%)': 1.1 };
            const sensitivityResults = {};
            for (const key in variations) {
                let tempUcs = ucs, tempH = H;
                if (key.includes('UCS')) tempUcs *= variations[key];
                if (key.includes('Depth')) tempH *= variations[key];
                let Wp = finalWp; let iter = 0;
                while(iter < 1000) {
                     const load = density_MPa_m * tempH * Math.pow((Wp + Wo), 2) / Math.pow(Wp, 2);
                     const strength = formula.calculation(tempUcs, Wp, h, params, tempH);
                     const fos = strength / load;
                     if (Math.abs(fos - inputs.targetFos) < 0.01) break;
                     Wp += (inputs.targetFos - fos) * 0.1;
                     iter++;
                }
                sensitivityResults[key] = Wp;
            }
            if (charts['sensitivity']) charts['sensitivity'].destroy();
            charts['sensitivity'] = createChart('sensitivity-chart', 'bar', {
                labels: Object.keys(sensitivityResults),
                datasets: [{ label: 'Required Pillar Width (m)', data: Object.values(sensitivityResults), backgroundColor: ['#f87171', '#4ade80', '#f87171', '#4ade80'] }]
            }, 'Parameter Variation', 'Required Pillar Width (m)');
        }

        populateOverburden();
        populateRockTypes();
        populateFormulas();
        populateRockMaterials();
        saveInitialValues(); 

        form.addEventListener('submit', handleFormSubmit);
        resetBtn.addEventListener('click', resetForm);
        rockTypeSelect.addEventListener('change', populateRockMaterials);
        rockMaterialSelect.addEventListener('change', updateMaterialProperties);
        overburdenSelect.addEventListener('change', updateOverburdenDensity);
        formulaSelect.addEventListener('change', updateFormulaDetails);
        document.getElementById('export-optimizer-pdf').addEventListener('click', () => {
             const { jsPDF } = window.jspdf;
             const pdf = new jsPDF({ orientation: 'p', unit: 'mm', format: 'a4' });
             const formCard = document.getElementById('optimizer-content-card');
             const resultsCard = document.getElementById('results-section');
             pdf.setFontSize(18).text('PillarPlatform Design Report', 14, 22);
             pdf.setFontSize(10).text(`Report Generated: ${new Date().toLocaleString()}`, 14, 28);
             
             html2canvas(formCard, {scale: 2}).then(canvas1 => {
                 const imgData1 = canvas1.toDataURL('image/png');
                 pdf.setFontSize(14).text('1. Input Parameters', 14, 40);
                 pdf.addImage(imgData1, 'PNG', 14, 45, 180, (canvas1.height * 180) / canvas1.width);
                 
                 html2canvas(resultsCard, {scale: 2}).then(canvas2 => {
                    const imgData2 = canvas2.toDataURL('image/png');
                    pdf.addPage();
                    pdf.setFontSize(14).text('2. Design Results & Analysis', 14, 22);
                    pdf.addImage(imgData2, 'PNG', 14, 28, 180, (canvas2.height * 180) / canvas2.width);
                    pdf.save(`PillarPlatform_Report_${Date.now()}.pdf`);
                 });
             });
        });

        const tabs = document.querySelectorAll('.chart-tab');
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const chartToShow = tab.dataset.chart;
                tabs.forEach(t => t.classList.remove('active'));
                tab.classList.add('active');
                document.querySelectorAll('.chart-container').forEach(c => c.classList.toggle('hidden', c.id !== `chart-${chartToShow}-container`));
            });
        });
        tabs[0].classList.add('active');
        document.querySelectorAll('.chart-container').forEach((c,i) => c.classList.toggle('hidden', i !== 0));

        if(window.location.hash.includes('optimizer') || !window.location.hash || window.location.hash === '#') {
            handleFormSubmit(new Event('submit'));
        }
    }

    function RMRCalculator() {
        const form = document.getElementById('rmr-form');
        const resultsContainer = document.getElementById('rmr-result-container');
        if(!form) return;

        const rmrParams = {
            ucs: { label: 'Intact Rock Strength (UCS, MPa)', options: {'<1 (Very Low)': 2, '1-5': 4, '5-25 (Low)': 7, '25-50 (Medium)': 9, '50-100 (High)': 12, '>100 (Very High)': 15} },
            rqd: { label: 'Rock Quality Designation (RQD, %)', options: {'<25 (Very Poor)': 3, '25-50 (Poor)': 8, '50-75 (Fair)': 13, '75-90 (Good)': 17, '90-100 (Excellent)': 20} },
            spacing: { label: 'Spacing of Discontinuities (m)', options: {'<0.06 (Very Close)': 5, '0.06-0.2 (Close)': 8, '0.2-0.6 (Moderate)': 10, '0.6-2 (Wide)': 15, '>2 (Very Wide)': 20} },
            condition: { label: 'Condition of Discontinuities', options: {'Very Rough, Unweathered': 30, 'Rough, Slightly Weathered': 25, 'Slightly Rough, Weathered': 20, 'Slickensided, or Gouge <5mm': 10, 'Soft Gouge >5mm': 0} },
            groundwater: { label: 'Groundwater Conditions', options: {'Completely Dry': 15, 'Damp': 10, 'Wet': 7, 'Dripping': 4, 'Flowing': 0} },
        };

        let formHtml = '';
        for (const key in rmrParams) {
            formHtml += `<div class="col-span-1"><label class="block text-sm font-medium mb-1">${rmrParams[key].label}</label><select id="rmr-${key}" class="w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600">`;
            for (const opt in rmrParams[key].options) { formHtml += `<option value="${rmrParams[key].options[opt]}">${opt}</option>`; }
            formHtml += `</select></div>`;
        }
        form.innerHTML = formHtml;
        
        function calculateRMR() {
            let totalRMR = 0;
            for (const key in rmrParams) { totalRMR += parseInt(document.getElementById(`rmr-${key}`).value); }
            
            let rockClass, description;
            if (totalRMR > 80) { rockClass = 'I - Very Good Rock'; description='Stable for years.'; }
            else if (totalRMR > 60) { rockClass = 'II - Good Rock'; description='Stable for months.'; }
            else if (totalRMR > 40) { rockClass = 'III - Fair Rock'; description='Stable for weeks.'; }
            else if (totalRMR > 20) { rockClass = 'IV - Poor Rock'; description='Stable for hours.'; }
            else { rockClass = 'V - Very Poor Rock'; description='Unstable, immediate collapse.'; }

            resultsContainer.innerHTML = `<p class="text-sm font-semibold text-slate-600 dark:text-slate-300">Total RMR89 Rating</p><p class="text-5xl font-bold my-2 text-blue-600 dark:text-blue-400">${totalRMR}</p><p class="text-xl font-semibold">${rockClass}</p><p class="text-sm text-slate-500 mt-1">${description}</p>`;
            resultsContainer.classList.remove('hidden');
        }
        
        form.addEventListener('change', calculateRMR);
        calculateRMR();
    }
    
    function PoFCalculator() {
        const form = document.getElementById('pof-form');
        const resultsContainer = document.getElementById('pof-results-container');
        if(!form) return;
        let pofChart = null;
        
        const pofInputs = {
            'iterations': { label: 'No. of Iterations', default: 10000 },
            'ucs': { label: 'UCS (MPa)', mean: 80, stddev: 15 },
            'depth': { label: 'Depth (m)', mean: 400, stddev: 50 },
            'width': { label: 'Room Width (m)', mean: 7, stddev: 0.5 },
            'height': { label: 'Pillar Height (m)', mean: 5, stddev: 0.2 },
            'density': { label: 'Density (g/cm³)', mean: 2.5, stddev: 0.1 },
            'pillar_width': { label: 'Pillar Width (Wp, m)', default: 15 }
        };

        let formHtml = `<h4 class="col-span-full font-bold text-slate-800 dark:text-slate-200">Simulation Parameters</h4>`;
        formHtml += `<div class="col-span-2 md:col-span-1"><label class="block text-sm font-medium">${pofInputs.iterations.label}</label><input type="number" id="pof-iterations" value="${pofInputs.iterations.default}" class="w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>`;
        formHtml += `<div class="col-span-2 md:col-span-1"><label class="block text-sm font-medium">${pofInputs.pillar_width.label}</label><input type="number" id="pof-pillar_width" value="${pofInputs.pillar_width.default}" class="w-full bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div>`;
        formHtml += `<h4 class="col-span-full font-bold text-slate-800 dark:text-slate-200 mt-4">Input Distributions (Mean & Std. Dev)</h4>`;

        ['ucs', 'depth', 'width', 'height', 'density'].forEach(key => {
            const p = pofInputs[key];
            formHtml += `<div class="col-span-2 md:col-span-1"><label class="block text-sm font-semibold">${p.label}</label><div class="flex space-x-2 mt-1"><input type="number" id="pof-${key}-mean" value="${p.mean}" placeholder="Mean" class="w-1/2 bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"><input type="number" id="pof-${key}-stddev" value="${p.stddev}" placeholder="StdDev" class="w-1/2 bg-slate-50 dark:bg-slate-700 rounded-md p-2 border-slate-300 dark:border-slate-600"></div></div>`;
        });
        formHtml += `<div class="col-span-full mt-4"><button type="submit" id="pof-submit-btn" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 rounded-lg flex items-center justify-center">Run Monte Carlo Simulation</button></div>`;
        form.innerHTML = formHtml;
        
        function randomNormal(mean, stddev) {
            let u1 = 0, u2 = 0;
            while(u1 === 0) u1 = Math.random();
            while(u2 === 0) u2 = Math.random();
            const z0 = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(2.0 * Math.PI * u2);
            return z0 * stddev + mean;
        }

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const submitBtn = document.getElementById('pof-submit-btn');
            submitBtn.disabled = true;
            submitBtn.innerHTML = `<i class="fas fa-spinner btn-spinner mr-2"></i><span>Simulating...</span>`;
            
            await new Promise(resolve => setTimeout(resolve, 50));

            try {
                const iterations = parseInt(document.getElementById('pof-iterations').value);
                const Wp = parseFloat(document.getElementById('pof-pillar_width').value);
                const inputs = {};
                ['ucs', 'depth', 'width', 'height', 'density'].forEach(key => {
                    inputs[key] = {
                        mean: parseFloat(document.getElementById(`pof-${key}-mean`).value),
                        stddev: parseFloat(document.getElementById(`pof-${key}-stddev`).value)
                    };
                });

                let failures = 0;
                const fosResults = [];
                for (let i = 0; i < iterations; i++) {
                    const ucs = randomNormal(inputs.ucs.mean, inputs.ucs.stddev);
                    const H = randomNormal(inputs.depth.mean, inputs.depth.stddev);
                    const Wo = randomNormal(inputs.width.mean, inputs.width.stddev);
                    const h = randomNormal(inputs.height.mean, inputs.height.stddev);
                    const density = randomNormal(inputs.density.mean, inputs.density.stddev);

                    if (ucs <= 0 || H <= 0 || Wo <= 0 || h <= 0 || density <= 0 || Wp <= 0) continue;

                    const strength = 0.5 * ucs * Math.pow(Wp, 0.5) / Math.pow(h, 0.75); // Hedley-Grant
                    const density_MPa_m = (density * 9.81) / 1000;
                    const load = density_MPa_m * H * Math.pow((Wp + Wo), 2) / Math.pow(Wp, 2);
                    const fos = strength / load;
                    fosResults.push(fos);
                    if (fos < 1.0) failures++;
                }

                const pof = (failures / iterations) * 100;
                document.getElementById('pof-value').textContent = `${pof.toFixed(2)} %`;
                const pofClassEl = document.getElementById('pof-class');
                if (pof < 2) { pofClassEl.textContent = "Very Low Risk"; pofClassEl.className="text-lg font-semibold mt-1 text-green-600 dark:text-green-400"; }
                else if (pof < 10) { pofClassEl.textContent = "Low Risk"; pofClassEl.className="text-lg font-semibold mt-1 text-yellow-600 dark:text-yellow-400"; }
                else if (pof < 30) { pofClassEl.textContent = "Moderate Risk"; pofClassEl.className="text-lg font-semibold mt-1 text-orange-500"; }
                else { pofClassEl.textContent = "High Risk"; pofClassEl.className="text-lg font-semibold mt-1 text-red-600 dark:text-red-500"; }
                
                const bins = {};
                const minFos = Math.min(...fosResults), maxFos = Math.max(...fosResults);
                const binWidth = (maxFos - minFos) / 25;
                for(const fos of fosResults) {
                    const bin = Math.floor((fos-minFos)/binWidth);
                    bins[bin] = (bins[bin] || 0) + 1;
                }
                const chartLabels = Object.keys(bins).map(bin => (minFos + Number(bin) * binWidth).toFixed(2));
                const chartData = Object.values(bins);
                
                if (pofChart) pofChart.destroy();
                pofChart = createChart('pof-chart', 'bar', 
                    { labels: chartLabels, datasets: [{ label: 'Frequency', data: chartData, backgroundColor: '#2563eb' }] },
                    'Factor of Safety (FoS)', 'Frequency'
                );

                resultsContainer.classList.remove('hidden');
            } catch (error) {
                console.error("PoF Error:", error);
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = `<span>Run Monte Carlo Simulation</span>`;
            }
        });
    }

</script>
</body>
</html>

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PillarPlatform | Unified Mining Engineering Suite</title>
    <!-- TailwindCSS, Chart.js, D3.js, and Font Awesome for modern UI -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <!-- Google Fonts for professional typography -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">

    <style>
        /* Base styling and dark mode configuration */
        :root {
            --bg-color-light: #f8fafc; --text-color-light: #0f172a; --card-bg-light: #ffffff; --border-color-light: #e2e8f0; --header-bg-light: rgba(255, 255, 255, 0.8);
            --bg-color-dark: #0b1120; --text-color-dark: #e2e8f0; --card-bg-dark: #1e293b; --border-color-dark: #334155; --header-bg-dark: rgba(15, 23, 42, 0.8);
        }
        body { font-family: 'Inter', sans-serif; background-color: var(--bg-color-light); color: var(--text-color-light); transition: background-color 0.3s, color 0.3s; }
        .dark body { background-color: var(--bg-color-dark); color: var(--text-color-dark); }
        
        /* UI Component Styles */
        .page-content { display: none; animation: fadeIn 0.5s ease-in-out; }
        .page-content.active { display: block; }
        .main-nav-link.active { background-color: #eef2ff; color: #312e81; font-weight: 600; }
        .dark .main-nav-link.active { background-color: #312e81; color: #e0e7ff; }
        .card { background-color: var(--card-bg-light); border: 1px solid var(--border-color-light); }
        .dark .card { background-color: var(--card-bg-dark); border-color: var(--border-color-dark); }
        .form-input, .form-select { background-color: #f1f5f9; border-color: #cbd5e1; }
        .dark .form-input, .dark .form-select { background-color: #334155; border-color: #475569; color: #f1f5f9; }
        .form-input:focus, .form-select:focus { --tw-ring-color: rgb(37 99 235 / 0.5); border-color: #2563eb; box-shadow: 0 0 0 2px var(--tw-ring-color); outline: none; }
        .result-box { background-color: #f0fdf4; border-left: 4px solid #22c55e; }
        .dark .result-box { background-color: #163424; border-color: #4ade80; }
        .accordion-content { max-height: 0; overflow: hidden; transition: max-height 0.4s ease-in-out; }
        .accordion-header.active + .accordion-content { max-height: 2500px; }
        .accordion-header svg { transition: transform 0.3s; }
        .accordion-header.active svg { transform: rotate(180deg); }
        .spinner { border: 3px solid rgba(255, 255, 255, 0.3); width: 1.25rem; height: 1.25rem; border-radius: 50%; border-top-color: #fff; animation: spin 1s linear infinite; }
        #tooltip { position: absolute; opacity: 0; background-color: #0f172a; color: white; padding: 6px 12px; border-radius: 6px; font-size: 0.8rem; pointer-events: none; transition: opacity 0.2s; z-index: 100; }
        .calc-button:disabled { opacity: 0.7; cursor: not-allowed; }

        /* Animation */
        @keyframes spin { to { transform: rotate(360deg); } }
        @keyframes fadeIn { from { opacity: 0; transform: translateY(15px); } to { opacity: 1; transform: translateY(0); } }
    </style>
</head>
<body class="min-h-screen">
    <!-- Tooltip element for D3 charts -->
    <div id="tooltip"></div>

    <div class="flex h-screen">
        <!-- Sidebar Navigation -->
        <aside class="w-64 bg-white dark:bg-slate-900 border-r border-slate-200 dark:border-slate-800 flex-shrink-0 hidden lg:flex flex-col">
            <div class="px-6 py-5 flex items-center space-x-3">
                <i class="fas fa-cubes text-3xl text-blue-600"></i>
                <h1 class="text-xl font-bold">MinePlatform</h1>
            </div>
            <nav class="flex-1 px-4 py-4 space-y-2">
                <a href="#dashboard" class="main-nav-link flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i class="fas fa-tachometer-alt w-6"></i><span class="ml-3">Dashboard</span>
                </a>
                <a href="#strategic" class="main-nav-link flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i class="fas fa-lightbulb w-6"></i><span class="ml-3">Strategic Planning</span>
                </a>
                <a href="#geotechnical" class="main-nav-link flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i class="fas fa-mountain w-6"></i><span class="ml-3">Geotechnical & Hazards</span>
                </a>
                <a href="#pillar" class="main-nav-link flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i class="fas fa-archway w-6"></i><span class="ml-3">Pillar Design</span>
                </a>
                <a href="#productivity" class="main-nav-link flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i class="fas fa-truck-moving w-6"></i><span class="ml-3">Productivity & Ops</span>
                </a>
                <a href="#blasting" class="main-nav-link flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i class="fas fa-bomb w-6"></i><span class="ml-3">Blasting Tools</span>
                </a>
                <a href="#tools" class="main-nav-link flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i class="fas fa-database w-6"></i><span class="ml-3">Rock Database</span>
                </a>
            </nav>
            <div class="px-4 py-4 border-t border-slate-200 dark:border-slate-800">
                <button id="theme-toggle" class="w-full flex items-center px-4 py-2.5 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800">
                    <i id="theme-icon" class="fas fa-sun w-6"></i><span class="ml-3">Toggle Theme</span>
                </button>
            </div>
        </aside>

        <!-- Main Content Area -->
        <div class="flex-1 flex flex-col overflow-hidden">
            <header class="bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm border-b border-slate-200 dark:border-slate-800 lg:hidden">
                <div class="px-4 sm:px-6 lg:px-8">
                    <div class="flex items-center justify-between h-16">
                         <div class="flex items-center space-x-3">
                            <i class="fas fa-cubes text-2xl text-blue-600"></i>
                            <h1 class="text-lg font-bold">MinePlatform</h1>
                        </div>
                        <button id="mobile-menu-button" class="p-2 rounded-md text-slate-500"><i class="fas fa-bars text-xl"></i></button>
                    </div>
                </div>
            </header>
            
            <main class="flex-1 overflow-x-hidden overflow-y-auto bg-slate-100 dark:bg-slate-950 p-4 sm:p-6 lg:p-8">
                <!-- Mobile Menu (duplicate of sidebar) -->
                <div id="mobile-menu" class="fixed inset-0 bg-black/50 z-40 hidden lg:hidden">
                    <div class="fixed top-0 left-0 w-64 h-full bg-white dark:bg-slate-900 shadow-xl flex flex-col">
                        <div class="px-6 py-5 flex items-center justify-between">
                            <h1 class="text-xl font-bold">MinePlatform</h1>
                            <button id="close-mobile-menu" class="p-2"><i class="fas fa-times"></i></button>
                        </div>
                        <nav class="flex-1 px-4 py-4 space-y-2 mobile-nav"></nav>
                         <div class="px-4 py-4 border-t border-slate-200 dark:border-slate-800 mobile-theme-toggle"></div>
                    </div>
                </div>

                <!-- Page Content Sections -->
                <section id="dashboard" class="page-content"></section>
                <section id="strategic" class="page-content"></section>
                <section id="geotechnical" class="page-content"></section>
                <section id="pillar" class="page-content"></section>
                <section id="productivity" class="page-content"></section>
                <section id="blasting" class="page-content"></section>
                <section id="tools" class="page-content"></section>

            </main>
        </div>
    </div>
    
<script type="module">
// --- CORE APPLICATION LOGIC ---
class MiningPlatformApp {
    constructor() {
        // Data and state
        this.charts = {};
        this.activePage = 'dashboard';
        this.db = {
            // Data extracted from user-provided documents
            overburden: { 'Gondwana Supergroup': 2.55, 'Deccan Traps': 2.65, 'Alluvium (Compacted)': 1.90, 'Alluvium (Near Surface)': 1.60, 'Lateritic Formations': 1.90 },
            materials: {
                'Sedimentary': [{ name: 'Coal', ucs: 25, density: 1.4 }, { name: 'Shale', ucs: 45, density: 2.6 }, { name: 'Sandstone', ucs: 80, density: 2.5 }, { name: 'Limestone', ucs: 100, density: 2.6 }],
                'Igneous': [{ name: 'Granite', ucs: 150, density: 2.7 }, { name: 'Basalt', ucs: 200, density: 2.9 }, { name: 'Diorite', ucs: 180, density: 2.8 }],
                'Metamorphic': [{ name: 'Gneiss', ucs: 130, density: 2.8 }, { name: 'Marble', ucs: 70, density: 2.7 }, { name: 'Quartzite', ucs: 250, density: 2.7 }, { name: 'Slate', ucs: 120, density: 2.8 }, { name: 'Schist', ucs: 60, density: 2.7 }],
                'Metallic Ores': [{ name: 'Iron Ore (Hematite)', ucs: 60, density: 4.8 }, { name: 'Manganese Ore (Balaghat)', ucs: 220, density: 3.8 }, { name: 'Chromite Ore (Competent)', ucs: 200, density: 4.6 }, { name: 'Lead-Zinc Ore (Rampura-Agucha)', ucs: 75, density: 3.5 }],
                'Industrial Minerals': [{ name: 'Rock Salt (Halite)', ucs: 15, density: 2.2 }, { name: 'Potash', ucs: 22, density: 2.0 }, { name: 'Gypsum', ucs: 25, density: 2.3 }]
            },
            formulas: {
                "sheorey": { name: "Sheorey (CIMFR - Indian Coal)", description: "Empirical formula for Indian coalfields, accounts for depth.", calc: (ucs, W, h, p, H) => 0.27 * ucs * Math.pow(W, 0.46) / Math.pow(h, 0.66), params: [] },
                "hedley-grant": { name: "Hedley & Grant (Hard Rock)", description: "Widely used empirical formula for hard rock mines.", calc: (ucs, W, h, p) => p.k_factor * (Math.pow(W, 0.5) / Math.pow(h, 0.75)), params: [{ id: 'k_factor', name: 'K Factor (Strength Constant)', default: 90 }] },
                "salamon-munro": { name: "Salamon & Munro (Coal)", description: "Classic formula for coal, based on South African case studies.", calc: (ucs, W, h) => 7.176 * Math.pow(W, 0.46) / Math.pow(h, 0.66), params: [] },
            }
        };

        // Initialize UI components
        this.initTheme();
        this.initNavigation();
        this.renderAllPages();
        this.showPageFromHash();
    }

    // --- INITIALIZATION ---
    initTheme() {
        const themeToggle = document.getElementById('theme-toggle');
        const mobileThemeToggleContainer = document.querySelector('.mobile-theme-toggle');
        
        const applyTheme = (isDark) => {
            document.documentElement.classList.toggle('dark', isDark);
            const iconClass = isDark ? 'fas fa-moon w-6' : 'fas fa-sun w-6';
            document.querySelectorAll('#theme-icon').forEach(icon => icon.className = iconClass);
        };

        const handleToggle = () => {
            const isDark = !document.documentElement.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            applyTheme(isDark);
            this.renderPage(this.activePage); // Re-render charts for new theme
        };
        
        const mobileThemeToggle = themeToggle.cloneNode(true);
        mobileThemeToggle.id = 'mobile-theme-toggle'; // ensure unique id
        mobileThemeToggle.querySelector('i').id = 'theme-icon';
        mobileThemeToggle.addEventListener('click', handleToggle);
        mobileThemeToggleContainer.innerHTML = ''; // Clear previous
        mobileThemeToggleContainer.appendChild(mobileThemeToggle);
        
        themeToggle.addEventListener('click', handleToggle);

        const preferredTheme = localStorage.getItem('theme');
        applyTheme(preferredTheme === 'dark' || (!preferredTheme && window.matchMedia('(prefers-color-scheme: dark)').matches));
    }

    initNavigation() {
        const mainNav = document.querySelector('aside nav');
        const mobileNavContainer = document.querySelector('.mobile-nav');
        mobileNavContainer.innerHTML = mainNav.innerHTML;

        window.addEventListener('hashchange', () => this.showPageFromHash());
        
        document.body.addEventListener('click', (e) => {
            if (e.target.closest('.main-nav-link, .quick-link')) {
                e.preventDefault();
                window.location.hash = e.target.closest('a').hash;
                document.getElementById('mobile-menu').classList.add('hidden');
            }
        });

        const mobileMenu = document.getElementById('mobile-menu');
        document.getElementById('mobile-menu-button').addEventListener('click', () => mobileMenu.classList.remove('hidden'));
        document.getElementById('close-mobile-menu').addEventListener('click', () => mobileMenu.classList.add('hidden'));
        mobileMenu.addEventListener('click', (e) => { if(e.target === mobileMenu) mobileMenu.classList.add('hidden'); });
    }
    
    // --- PAGE RENDERING & NAVIGATION ---
    showPageFromHash() {
        const hash = window.location.hash.substring(1) || 'dashboard';
        this.activePage = hash;
        
        document.querySelectorAll('.page-content').forEach(p => p.classList.remove('active'));
        const activePageElement = document.getElementById(hash);
        if (activePageElement) activePageElement.classList.add('active');

        document.querySelectorAll('.main-nav-link').forEach(l => {
            l.classList.toggle('active', l.hash === `#${hash}`);
        });

        this.renderPage(hash);
    }
    
    renderPage(pageId) {
        Object.values(this.charts).forEach(chart => {
            if (chart && typeof chart.destroy === 'function') {
                chart.destroy();
            }
        });
        this.charts = {};

        const pageElement = document.getElementById(pageId);
        if (!pageElement) return;

        const contentMap = {
            'dashboard': this.getDashboardHTML,
            'strategic': this.getStrategicHTML,
            'geotechnical': this.getGeotechnicalHTML,
            'pillar': this.getPillarHTML,
            'productivity': this.getProductivityHTML,
            'blasting': this.getBlastingHTML,
            'tools': this.getToolsHTML,
        };

        if (contentMap[pageId]) {
            pageElement.innerHTML = contentMap[pageId].call(this);
        } else {
            pageElement.innerHTML = '<h2>Page Not Found</h2>';
        }
        
        this.setupEventListeners(pageId);
        this.runInitialCalculations(pageId);
    }
    
    runInitialCalculations(pageId) {
        if (pageId === 'dashboard') { this.calculateLoM(true); }
        if (pageId === 'strategic') { this.calculateLoM(); this.calculateBESR(); }
        if (pageId === 'geotechnical') { this.calculateRockburst(); this.calculateRMR(); this.runMonteCarlo(); }
        if (pageId === 'pillar') { this.calculatePillar(); }
        if (pageId === 'productivity') { this.calculateMatchFactor(); this.calculateLoaderProductivity(); }
        if (pageId === 'blasting') { this.calculateBlastDesign(); }
        if (pageId === 'tools') { this.renderRockDB(); }
    }

    renderAllPages() {
        ['dashboard', 'strategic', 'geotechnical', 'pillar', 'productivity', 'blasting', 'tools'].forEach(id => this.renderPage(id));
    }

    // --- HTML TEMPLATES ---
    getDashboardHTML() {
        return `
            <h2 class="text-3xl font-bold mb-6 text-slate-800 dark:text-slate-200">Dashboard</h2>
            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-6">
                ${this.createKpiCard('NPV (₹ Cr)', 'kpi-npv', '--')}
                ${this.createKpiCard('IRR (%)', 'kpi-irr', '--')}
                ${this.createKpiCard('Pillar FoS', 'kpi-fos', '--')}
                ${this.createKpiCard('Rockburst Risk', 'kpi-rockburst', '--')}
                ${this.createKpiCard('RMR', 'kpi-rmr', '--')}
                ${this.createKpiCard('Match Factor', 'kpi-mf', '--')}
            </div>
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                <div class="card p-6 rounded-lg lg:col-span-2">
                    <h3 class="text-xl font-semibold mb-4">Life-of-Mine Cumulative Cash Flow</h3>
                    <div class="relative h-80"><canvas id="lomChart"></canvas></div>
                </div>
                <div class="card p-6 rounded-lg lg:col-span-1">
                    <h3 class="text-xl font-semibold mb-4">Quick Access</h3>
                    <div class="grid grid-cols-2 gap-4">
                        <a href="#strategic" class="quick-link bg-indigo-100 text-indigo-800 p-3 rounded-lg hover:bg-indigo-200 dark:bg-indigo-900/50 dark:text-indigo-300 dark:hover:bg-indigo-900 text-center">LoM Planner</a>
                        <a href="#geotechnical" class="quick-link bg-cyan-100 text-cyan-800 p-3 rounded-lg hover:bg-cyan-200 dark:bg-cyan-900/50 dark:text-cyan-300 dark:hover:bg-cyan-900 text-center">Geohazards</a>
                        <a href="#pillar" class="quick-link bg-blue-100 text-blue-800 p-3 rounded-lg hover:bg-blue-200 dark:bg-blue-900/50 dark:text-blue-300 dark:hover:bg-blue-900 text-center">Pillar Design</a>
                        <a href="#productivity" class="quick-link bg-emerald-100 text-emerald-800 p-3 rounded-lg hover:bg-emerald-200 dark:bg-emerald-900/50 dark:text-emerald-300 dark:hover:bg-emerald-900 text-center">Productivity</a>
                    </div>
                </div>
            </div>
        `;
    }

    getStrategicHTML() {
        return `
            <h2 class="text-3xl font-bold mb-6">Strategic Planning</h2>
            ${this.createAccordion('lom-planner', 'Life-of-Mine (LoM) Financial Planner', `
                <p class="text-sm text-slate-500 dark:text-slate-400 mb-4">Model the economic lifecycle of your project. All financial values are in Indian Rupees (₹) and Crores (Cr).</p>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <div><label class="block text-sm font-medium">Initial CAPEX (₹ Cr)</label><input type="number" id="lom-capex" class="form-input mt-1 w-full rounded-md p-2" value="4175"></div>
                    <div><label class="block text-sm font-medium">Life of Mine (Years)</label><input type="number" id="lom-years" class="form-input mt-1 w-full rounded-md p-2" value="10"></div>
                    <div><label class="block text-sm font-medium">Discount Rate (%)</label><input type="number" id="lom-discount" class="form-input mt-1 w-full rounded-md p-2" value="8"></div>
                    <div><label class="block text-sm font-medium">Commodity Price (₹/t)</label><input type="number" id="lom-price" class="form-input mt-1 w-full rounded-md p-2" value="12500"></div>
                    <div class="col-span-full"><hr class="my-2 border-slate-200 dark:border-slate-700"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Annual Ore Mined (Mt)</label><input type="number" id="lom-ore" class="form-input mt-1 w-full rounded-md p-2" value="5"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Annual Waste Mined (Mt)</label><input type="number" id="lom-waste" class="form-input mt-1 w-full rounded-md p-2" value="20"></div>
                    <div><label class="block text-sm font-medium">Ore Cost (₹/t)</label><input type="number" id="lom-ore-cost" class="form-input mt-1 w-full rounded-md p-2" value="2100"></div>
                    <div><label class="block text-sm font-medium">Waste Cost (₹/t)</label><input type="number" id="lom-waste-cost" class="form-input mt-1 w-full rounded-md p-2" value="250"></div>
                </div>
                <button data-calc="lom" class="calc-button mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Calculate Financials</button>
                <div id="lom-results" class="result-box mt-4 hidden p-4 rounded-md"></div>
            `, true)}
            ${this.createAccordion('besr-calc', 'Break-Even Stripping Ratio (BESR)', `
                <p class="text-sm text-slate-500 dark:text-slate-400 mb-4">Calculate the maximum waste-to-ore ratio for a block to be profitable.</p>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div><label class="block text-sm font-medium">Commodity Price (₹/t)</label><input type="number" id="besr-price" class="form-input mt-1 w-full rounded-md p-2" value="12500"></div>
                    <div><label class="block text-sm font-medium">Ore Mining & Processing Cost (₹/t)</label><input type="number" id="besr-ore-cost" class="form-input mt-1 w-full rounded-md p-2" value="2100"></div>
                    <div><label class="block text-sm font-medium">Waste Mining Cost (₹/t)</label><input type="number" id="besr-waste-cost" class="form-input mt-1 w-full rounded-md p-2" value="250"></div>
                </div>
                <button data-calc="besr" class="calc-button mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Calculate BESR</button>
                <div id="besr-results" class="result-box mt-4 hidden p-4 rounded-md"></div>
            `)}
        `;
    }
    
    getGeotechnicalHTML() {
        return `
            <h2 class="text-3xl font-bold mb-6">Geotechnical & Hazards</h2>
            ${this.createAccordion('rockburst-calc', 'Rockburst Hazard Assessment', `
                <p class="text-sm text-slate-500 dark:text-slate-400 mb-4 bg-slate-100 dark:bg-slate-800/50 p-4 rounded-md border border-slate-200 dark:border-slate-700">Rockbursts are violent, explosive failures of rock common in deep, high-stress mines. This tool provides a preliminary hazard assessment by calculating three key empirical indices: the <strong>Stress/Strength Ratio</strong>, the <strong>Brittleness Index (B)</strong>, and the <strong>Strain Energy Index (Wet)</strong>. Together, these metrics evaluate the risk based on stress levels, the rock's tendency for brittle failure, and its energy storage characteristics.</p>
                 <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                    <div><label class="text-sm font-medium">UCS (σc), MPa</label><input type="number" id="rb-ucs" value="150" class="form-input p-2 mt-1 w-full rounded-md"></div>
                    <div><label class="text-sm font-medium">Tensile Strength (σt), MPa</label><input type="number" id="rb-tensile" value="10" class="form-input p-2 mt-1 w-full rounded-md"></div>
                    <div><label class="text-sm font-medium">Max In-Situ Stress (σ1), MPa</label><input type="number" id="rb-stress" value="85" class="form-input p-2 mt-1 w-full rounded-md"></div>
                    <div><label class="text-sm font-medium">Elastic Energy (Ue)</label><input type="number" id="rb-ue" value="6" class="form-input p-2 mt-1 w-full rounded-md"></div>
                    <div><label class="text-sm font-medium">Dissipated Energy (Ud)</label><input type="number" id="rb-ud" value="1" class="form-input p-2 mt-1 w-full rounded-md"></div>
                </div>
                 <div id="rb-results" class="mt-6 space-y-6"></div>
            `, true)}
            ${this.createAccordion('rmr-calc', 'Rock Mass Classification (RMR89)', `
                 <p class="text-sm text-slate-500 dark:text-slate-400 mb-4 bg-slate-100 dark:bg-slate-800/50 p-4 rounded-md border border-slate-200 dark:border-slate-700">The <strong>Rock Mass Rating (RMR)</strong> is a standardized, empirical system used globally to quantify the quality of a rock mass. It combines ratings from five key parameters: the strength of the intact rock, the Rock Quality Designation (RQD), the spacing of discontinuities (joints), the condition of these discontinuities, and groundwater conditions. The final score, ranging from 0 to 100, classifies the rock from "Very Poor" to "Very Good," providing essential input for preliminary design of excavations and support systems.</p>
                 <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <div id="rmr-form" class="space-y-4"></div>
                    <div class="flex flex-col items-center justify-center">
                        <p class="text-lg font-semibold">Total RMR Score</p>
                        <p id="rmr-score" class="text-6xl font-extrabold text-blue-600 dark:text-blue-400 my-2">--</p>
                        <p id="rmr-class" class="text-xl font-bold">--</p>
                        <div class="w-full h-64 mt-4"><canvas id="rmr-breakdown-chart"></canvas></div>
                    </div>
                 </div>
            `)}
             ${this.createAccordion('wedge-calc', 'Probabilistic Wedge Analysis', `
                <p class="text-sm text-slate-500 dark:text-slate-400 mb-4 bg-slate-100 dark:bg-slate-800/50 p-4 rounded-md border border-slate-200 dark:border-slate-700">Traditional "deterministic" analysis yields a single Factor of Safety (FoS), which doesn't account for natural variations in rock properties. This tool uses a <strong>Monte Carlo simulation</strong>, treating strength parameters like cohesion and friction angle as statistical distributions. It runs thousands of calculations, each time sampling from these distributions, to generate a full spectrum of possible FoS values. The final output is the <strong>Probability of Failure (Pf)</strong>—the percentage of simulations where the FoS fell below 1.0—providing a much more realistic assessment of risk.</p>
                <div class="grid grid-cols-1 xl:grid-cols-2 gap-8">
                    <div>
                        <div class="space-y-4">
                             <div><label class="text-sm font-medium">Slope Face (Dip/Dip Dir)</label><div class="flex space-x-2 mt-1"><input type="number" id="slope-dip" value="70" class="form-input p-2 w-full rounded-md"><input type="number" id="slope-dipdir" value="180" class="form-input p-2 w-full rounded-md"></div></div>
                             <div><label class="text-sm font-medium">Joint Set 1 (Dip/Dip Dir)</label><div class="flex space-x-2 mt-1"><input type="number" id="j1-dip" value="45" class="form-input p-2 w-full rounded-md"><input type="number" id="j1-dipdir" value="135" class="form-input p-2 w-full rounded-md"></div></div>
                             <div><label class="text-sm font-medium">Joint Set 2 (Dip/Dip Dir)</label><div class="flex space-x-2 mt-1"><input type="number" id="j2-dip" value="55" class="form-input p-2 w-full rounded-md"><input type="number" id="j2-dipdir" value="225" class="form-input p-2 w-full rounded-md"></div></div>
                             <hr class="border-slate-200 dark:border-slate-700"/>
                             <div><label class="text-sm font-medium">Friction Angle, φ° (Mean/Std Dev)</label><div class="flex space-x-2 mt-1"><input type="number" id="phi-mean" value="35" class="form-input p-2 w-full rounded-md"><input type="number" id="phi-std" value="5" class="form-input p-2 w-full rounded-md"></div></div>
                             <div><label class="text-sm font-medium">Cohesion, c kPa (Mean/Std Dev)</label><div class="flex space-x-2 mt-1"><input type="number" id="coh-mean" value="15" class="form-input p-2 w-full rounded-md"><input type="number" id="coh-std" value="5" class="form-input p-2 w-full rounded-md"></div></div>
                             <div><label class="text-sm font-medium">Other Properties</label><div class="flex space-x-2 mt-1"><input type="number" id="rock-unit-weight" value="27" title="Unit Wt (kN/m³)" placeholder="Unit Wt" class="form-input p-2 w-full rounded-md"><input type="number" id="wedge-height" value="20" title="Height (m)" placeholder="Height" class="form-input p-2 w-full rounded-md"></div></div>
                        </div>
                        <button id="run-simulation" class="calc-button w-full mt-6 bg-blue-600 text-white px-4 py-3 rounded-lg hover:bg-blue-700 flex justify-center items-center gap-x-3">
                            <span class="btn-text">Run Simulation</span>
                            <div class="spinner hidden"></div>
                        </button>
                    </div>
                    <div>
                        <div class="grid grid-cols-2 gap-4">
                            <div class="card p-4 text-center rounded-lg"><p class="text-sm font-semibold">Prob. of Failure (Pf)</p><p id="prob-failure" class="text-3xl font-bold text-red-600 dark:text-red-400 mt-1">-- %</p></div>
                            <div class="card p-4 text-center rounded-lg"><p class="text-sm font-semibold">Mean FoS</p><p id="mean-fos" class="text-3xl font-bold text-green-600 dark:text-green-400 mt-1">--</p></div>
                        </div>
                        <div class="mt-4"><div class="relative h-48"><canvas id="fos-histogram"></canvas></div></div>
                        <div class="mt-4"><div class="flex justify-center items-center"><svg id="stereonet" class="bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-full"></svg></div></div>
                    </div>
                </div>
            `)}
        `;
    }
    
    getPillarHTML() {
        return `
            <h2 class="text-3xl font-bold mb-6">Pillar Design</h2>
            ${this.createAccordion('pillar-calc', 'Pillar Stability Analysis', `
                <p class="text-sm text-slate-500 dark:text-slate-400 mb-4 bg-slate-100 dark:bg-slate-800/50 p-4 rounded-md border border-slate-200 dark:border-slate-700">Pillar design is a fundamental trade-off between maximizing resource extraction and ensuring mine safety. This tool calculates stability using the <strong>Factor of Safety (FoS)</strong>, defined as the ratio of pillar strength (capacity) to pillar stress (load). The stress is estimated using the Tributary Area Theory, while the strength is calculated using various empirical formulas developed from case studies. A FoS below 1.5 is often considered a risk, while higher values indicate greater stability.</p>
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <div class="space-y-4">
                        <div><label class="font-medium">Pillar Strength Formula</label><select id="pillar-formula" class="form-select w-full mt-1 p-2 rounded-md"></select></div>
                        <div id="formula-custom-inputs" class="space-y-2"></div>
                        <hr class="border-slate-200 dark:border-slate-700 !my-4"/>
                        <div class="grid grid-cols-2 gap-4">
                             <div><label class="text-sm font-medium">Pillar Width (w), m</label><input type="number" id="pillar-width" value="15" class="form-input p-2 mt-1 w-full rounded-md"></div>
                             <div><label class="text-sm font-medium">Pillar Height (h), m</label><input type="number" id="pillar-height" value="5" class="form-input p-2 mt-1 w-full rounded-md"></div>
                             <div><label class="text-sm font-medium">Depth, m</label><input type="number" id="pillar-depth" value="400" class="form-input p-2 mt-1 w-full rounded-md"></div>
                             <div><label class="text-sm font-medium">Unit Wt, kN/m³</label><input type="number" id="pillar-unit-weight" value="25" class="form-input p-2 mt-1 w-full rounded-md"></div>
                             <div class="col-span-2"><label class="text-sm font-medium">Extraction Ratio, %</label><input type="number" id="pillar-extraction" value="70" class="form-input p-2 mt-1 w-full rounded-md"></div>
                             <div class="col-span-2"><label class="text-sm font-medium">Intact Rock UCS, MPa</label><input type="number" id="pillar-ucs" value="25" class="form-input p-2 mt-1 w-full rounded-md"></div>
                        </div>
                         <button data-calc="pillar" class="calc-button mt-4 w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Calculate Stability</button>
                    </div>
                    <div>
                         <div class="h-64 mb-4"><canvas id="pillar-stability-chart"></canvas></div>
                         <div id="pillar-results" class="result-box p-4 rounded-md"></div>
                    </div>
                </div>
            `, true)}
        `;
    }
    
    getProductivityHTML() {
        return `
            <h2 class="text-3xl font-bold mb-6">Productivity & Operations</h2>
            ${this.createAccordion('match-factor-calc', 'Loader-Truck Match Factor', `
                 <p class="text-sm text-slate-500 dark:text-slate-400 mb-4 bg-slate-100 dark:bg-slate-800/50 p-4 rounded-md border border-slate-200 dark:border-slate-700">The <strong>Match Factor (MF)</strong> is a key performance indicator that measures the synchronization between a loading unit (e.g., a shovel) and the haul truck fleet it serves. It quantifies whether the system is balanced or has a bottleneck. An MF of 1.0 indicates a perfect match. An MF > 1.0 means the loader is the bottleneck and trucks will queue. An MF < 1.0 means the truck fleet is the bottleneck and the loader will wait idle. Mines often target an MF slightly below 1.0 to maximize the productivity of the high-capital loader.</p>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <div><label class="block text-sm font-medium">Loader Bucket (m³)</label><input type="number" id="match-bucket" class="form-input mt-1 w-full rounded-md p-2" value="12"></div>
                    <div><label class="block text-sm font-medium">Truck Capacity (t)</label><input type="number" id="match-truck-cap" class="form-input mt-1 w-full rounded-md p-2" value="100"></div>
                    <div><label class="block text-sm font-medium">Material Density (t/m³)</label><input type="number" id="match-density" class="form-input mt-1 w-full rounded-md p-2" value="1.8"></div>
                    <div><label class="block text-sm font-medium">Bucket Fill Factor (%)</label><input type="number" id="match-fill" class="form-input mt-1 w-full rounded-md p-2" value="90"></div>
                    <div class="col-span-full"><hr class="my-2 border-slate-200 dark:border-slate-700"></div>
                    <div><label class="block text-sm font-medium">Trucks in Fleet</label><input type="number" id="match-num-trucks" class="form-input mt-1 w-full rounded-md p-2" value="5"></div>
                    <div><label class="block text-sm font-medium">Loader Cycle (s)</label><input type="number" id="match-loader-cycle" class="form-input mt-1 w-full rounded-md p-2" value="30"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Truck Cycle (min)</label><input type="number" id="match-truck-cycle" class="form-input mt-1 w-full rounded-md p-2" value="12"></div>
                </div>
                <button data-calc="match" class="calc-button mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Calculate</button>
                <div id="match-results" class="result-box mt-4 hidden p-4 rounded-md"></div>
            `, true)}
            ${this.createAccordion('loader-prod-calc', 'Loader Productivity', `
                <p class="text-sm text-slate-500 dark:text-slate-400 mb-4 bg-slate-100 dark:bg-slate-800/50 p-4 rounded-md border border-slate-200 dark:border-slate-700"><strong>Loader Productivity</strong> measures the rate at which a loading unit moves material, typically expressed in tonnes per hour. It is a fundamental metric for mine planning, equipment selection, and operational efficiency analysis. The calculation depends on the loader's bucket capacity, the density of the material being moved, the bucket fill factor (how full the bucket gets), and the total time it takes to complete one loading cycle (dig, swing, dump, return).</p>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <div><label class="block text-sm font-medium">Loader Bucket (m³)</label><input type="number" id="prod-bucket" class="form-input mt-1 w-full rounded-md p-2" value="12"></div>
                    <div><label class="block text-sm font-medium">Material Density (t/m³)</label><input type="number" id="prod-density" class="form-input mt-1 w-full rounded-md p-2" value="1.8"></div>
                    <div><label class="block text-sm font-medium">Bucket Fill Factor (%)</label><input type="number" id="prod-fill" class="form-input mt-1 w-full rounded-md p-2" value="90"></div>
                    <div><label class="block text-sm font-medium">Cycle Time (s)</label><input type="number" id="prod-cycle" class="form-input mt-1 w-full rounded-md p-2" value="45"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Operational Efficiency (%)</label><input type="number" id="prod-eff" class="form-input mt-1 w-full rounded-md p-2" value="83"></div>
                </div>
                <button data-calc="productivity" class="calc-button mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Calculate Productivity</button>
                <div id="prod-results" class="result-box mt-4 hidden p-4 rounded-md"></div>
            `)}
        `;
    }
    
    getBlastingHTML() {
        return `
            <h2 class="text-3xl font-bold mb-6">Blasting Tools</h2>
            ${this.createAccordion('blast-design-calc', 'Blast Design (Powder Factor)', `
                 <p class="text-sm text-slate-500 dark:text-slate-400 mb-4 bg-slate-100 dark:bg-slate-800/50 p-4 rounded-md border border-slate-200 dark:border-slate-700">The <strong>Powder Factor</strong> is a critical Key Performance Indicator (KPI) in blasting, measuring the efficiency of explosive usage. It is defined as the mass of explosive used per unit volume or mass of rock broken (e.g., kg/tonne). Optimizing the powder factor is key to controlling costs and achieving desired fragmentation. A powder factor that is too high is wasteful and expensive, while one that is too low can result in poor fragmentation, leading to difficult digging and higher downstream costs at the crusher.</p>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <div><label class="block text-sm font-medium">Burden (m)</label><input type="number" id="blast-burden" class="form-input mt-1 w-full rounded-md p-2" value="3"></div>
                    <div><label class="block text-sm font-medium">Spacing (m)</label><input type="number" id="blast-spacing" class="form-input mt-1 w-full rounded-md p-2" value="3.5"></div>
                    <div><label class="block text-sm font-medium">Hole Diameter (mm)</label><input type="number" id="blast-diameter" class="form-input mt-1 w-full rounded-md p-2" value="150"></div>
                    <div><label class="block text-sm font-medium">Bench Height (m)</label><input type="number" id="blast-height" class="form-input mt-1 w-full rounded-md p-2" value="10"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Rock Density (t/m³)</label><input type="number" id="blast-rock-density" class="form-input mt-1 w-full rounded-md p-2" value="2.7"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Explosive Density (g/cm³)</label><input type="number" id="blast-exp-density" class="form-input mt-1 w-full rounded-md p-2" value="0.85"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Stemming (m)</label><input type="number" id="blast-stemming" class="form-input mt-1 w-full rounded-md p-2" value="2.5"></div>
                    <div class="col-span-2"><label class="block text-sm font-medium">Sub-drill (m)</label><input type="number" id="blast-subdrill" class="form-input mt-1 w-full rounded-md p-2" value="1"></div>
                </div>
                <button data-calc="blast" class="calc-button mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Calculate</button>
                <div id="blast-results" class="result-box mt-4 hidden p-4 rounded-md"></div>
            `, true)}
        `;
    }
    
    getToolsHTML() {
        return `
            <h2 class="text-3xl font-bold mb-6">Utilities & Database</h2>
            ${this.createAccordion('db-tool', 'Rock Properties Database', `
                <div class="overflow-x-auto"><table class="w-full text-sm">
                    <thead class="bg-slate-100 dark:bg-slate-800">
                        <tr>
                            <th class="px-4 py-2 text-left">Rock Type</th>
                            <th class="px-4 py-2 text-center">UCS (MPa)</th>
                            <th class="px-4 py-2 text-center">Density (g/cm³)</th>
                        </tr>
                    </thead>
                    <tbody id="rock-db-table"></tbody>
                </table></div>
            `, true)}
        `;
    }
    
    // --- UI HELPERS ---
    createKpiCard(title, id, value) {
        return `<div class="card p-4 rounded-lg shadow-sm"><h4 class="text-sm font-medium text-slate-500 dark:text-slate-400">${title}</h4><p id="${id}" class="text-2xl font-bold">${value}</p></div>`;
    }

    createAccordion(id, title, content, isOpen = false) {
        return `<div class="card rounded-lg mb-6"><button class="accordion-header w-full text-left p-4 font-semibold text-lg flex justify-between items-center hover:bg-slate-50 dark:hover:bg-slate-800/50 rounded-lg ${isOpen ? 'active' : ''}"><span>${title}</span><i class="fas fa-chevron-down"></i></button><div class="accordion-content p-6 pt-0">${content}</div></div>`;
    }

    // --- EVENT LISTENERS ---
    setupEventListeners(pageId) {
        document.querySelectorAll(`#${pageId} .accordion-header`).forEach(header => {
            header.addEventListener('click', () => {
                header.classList.toggle('active');
            });
        });
        document.querySelectorAll(`#${pageId} .calc-button`).forEach(button => {
            button.addEventListener('click', (e) => this.handleCalculation(e.currentTarget.dataset.calc));
        });

        const pageListeners = {
            geotechnical: () => {
                 document.querySelectorAll('#rockburst-calc input').forEach(el => el.addEventListener('input', () => this.calculateRockburst()));
                 document.querySelectorAll('#rmr-calc select').forEach(el => el.addEventListener('change', () => this.calculateRMR()));
                 document.getElementById('run-simulation').addEventListener('click', () => this.runMonteCarlo());
            },
            pillar: () => {
                const formulaSelect = document.getElementById('pillar-formula');
                formulaSelect.addEventListener('change', () => this.updatePillarFormulaInputs());
                this.populatePillarFormulas();
            }
        };
        if(pageListeners[pageId]) pageListeners[pageId]();
    }

    handleCalculation(calcType) {
        const calcMap = {
            'lom': this.calculateLoM, 'besr': this.calculateBESR,
            'pillar': this.calculatePillar, 'blast': this.calculateBlastDesign,
            'match': this.calculateMatchFactor, 'productivity': this.calculateLoaderProductivity
        };
        if(calcMap[calcType]) calcMap[calcType].call(this);
    }
    
    // --- CALCULATION LOGIC ---
    calculateLoM(updateKpis = false) {
        const capex = parseFloat(document.getElementById('lom-capex')?.value) || 0;
        const years = parseInt(document.getElementById('lom-years')?.value) || 0;
        const discountRate = (parseFloat(document.getElementById('lom-discount')?.value) || 0) / 100;
        const price = parseFloat(document.getElementById('lom-price')?.value) || 0;
        const oreMined = (parseFloat(document.getElementById('lom-ore')?.value) || 0) * 1e6;
        const wasteMined = (parseFloat(document.getElementById('lom-waste')?.value) || 0) * 1e6;
        const oreCost = parseFloat(document.getElementById('lom-ore-cost')?.value) || 0;
        const wasteCost = parseFloat(document.getElementById('lom-waste-cost')?.value) || 0;

        const annualRevenue = oreMined * price;
        const annualCost = (oreMined * oreCost) + (wasteMined * wasteCost);
        const annualCashFlow = (annualRevenue - annualCost) / 1e7;

        let npv = -capex;
        let cumulativeCashFlows = [-capex];
        let cashFlows = [];

        for (let i = 1; i <= years; i++) {
            const discountedCf = annualCashFlow / Math.pow(1 + discountRate, i);
            npv += discountedCf;
            cashFlows.push(annualCashFlow);
            cumulativeCashFlows.push(cumulativeCashFlows[i-1] + discountedCf);
        }
        
        let irr = 0;
        for (let rate = 0; rate < 1; rate += 0.001) {
            let currentNpv = -capex;
            for (let i = 1; i <= years; i++) { currentNpv += annualCashFlow / Math.pow(1 + rate, i); }
            if (currentNpv > 0) irr = rate; else break;
        }

        const resultsEl = document.getElementById('lom-results');
        if(resultsEl) {
            resultsEl.innerHTML = `<p><strong>NPV:</strong> ₹ ${this.formatIndian(npv)} Cr</p><p><strong>IRR:</strong> ${(irr * 100).toFixed(2)} %</p>`;
            resultsEl.classList.remove('hidden');
        }
        
        if(updateKpis) {
            this.updateKPI('kpi-npv', npv, ' Cr');
            this.updateKPI('kpi-irr', irr * 100, '%');
        }
        
        if (document.getElementById('lomChart')) {
            this.charts.lomChart = this.createChart('lomChart', 'line', {
                labels: Array.from({length: years + 1}, (_, i) => `Y${i}`),
                datasets: [
                    { label: 'Cumulative NPV (₹ Cr)', data: [0, ...cumulativeCashFlows], borderColor: '#f97316', borderWidth: 3, tension: 0.1, fill:true, backgroundColor: 'rgba(249, 115, 22, 0.1)' }
                ]
            }, 'Year', 'Value (₹ Cr)');
        }
    }

    calculateBESR() {
        const price = parseFloat(document.getElementById('besr-price').value) || 0;
        const oreCost = parseFloat(document.getElementById('besr-ore-cost').value) || 0;
        const wasteCost = parseFloat(document.getElementById('besr-waste-cost').value) || 1;
        const besr = (price - oreCost) / wasteCost;
        const resultsEl = document.getElementById('besr-results');
        if(resultsEl){
            resultsEl.innerHTML = `<strong>Break-Even Stripping Ratio:</strong> ${besr.toFixed(2)} (t Waste : t Ore)`;
            resultsEl.classList.remove('hidden');
        }
    }
    
    calculateRockburst() {
        const ucs = parseFloat(document.getElementById('rb-ucs')?.value) || 0;
        const stress = parseFloat(document.getElementById('rb-stress')?.value) || 0;
        const tensile = parseFloat(document.getElementById('rb-tensile')?.value) || 1;
        const ue = parseFloat(document.getElementById('rb-ue')?.value) || 0;
        const ud = parseFloat(document.getElementById('rb-ud')?.value) || 1;

        // SSR
        const ssr = ucs > 0 ? stress / ucs : 0;
        let riskLevel = 'Stable', riskClass = 'text-green-600 dark:text-green-400';
        if (ssr > 0.5) { riskLevel = 'Very High Risk'; riskClass = 'text-red-600 dark:text-red-400'; }
        else if (ssr > 0.4) { riskLevel = 'High Risk'; riskClass = 'text-orange-500'; }
        else if (ssr > 0.3) { riskLevel = 'Medium Risk'; riskClass = 'text-yellow-500'; }
        else if (ssr > 0.2) { riskLevel = 'Low Risk'; riskClass = 'text-blue-500'; }

        // Brittleness
        const brittleness = ucs / tensile;

        // Wet
        const wet = ue / ud;
        let wetRisk = 'Low', wetClass = 'text-green-600';
        if (wet >= 5) { wetRisk = 'High'; wetClass = 'text-red-600'; }
        else if (wet >= 2) { wetRisk = 'Moderate'; wetClass = 'text-yellow-600'; }
        
        const resultsEl = document.getElementById('rb-results');
        if (resultsEl) {
            resultsEl.innerHTML = `
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div><p>Stress/Strength Ratio: <strong class="text-2xl">${ssr.toFixed(2)}</strong></p><p class="mt-1">Condition: <strong class="text-lg ${riskClass}">${riskLevel}</strong></p></div>
                    <div><p>Brittleness Index (B): <strong class="text-2xl">${brittleness.toFixed(1)}</strong></p><p class="text-xs mt-1">Higher values indicate more brittle rock.</p></div>
                    <div><p>Strain Energy Index (Wet): <strong class="text-2xl">${wet.toFixed(1)}</strong></p><p class="mt-1">Risk: <strong class="text-lg ${wetClass}">${wetRisk}</strong></p></div>
                </div>`;
        }
        this.updateKPI('kpi-rockburst', riskLevel, '', 0);
    }
    
    calculateRMR() {
         const form = document.getElementById('rmr-form');
         if (!form) return;
         if (!form.childElementCount) {
             const rmrParams = {
                strength: { label: '1. Intact Rock Strength', options: { '> 250 MPa': 15, '100-250 MPa': 12, '50-100 MPa': 7, '25-50 MPa': 4, '5-25 MPa': 2, '<5 MPa': 1 } },
                rqd: { label: '2. RQD', options: { '90-100%': 20, '75-90%': 17, '50-75%': 13, '25-50%': 8, '<25%': 3 } },
                spacing: { label: '3. Discontinuity Spacing', options: { '>2m': 20, '0.6-2m': 15, '0.2-0.6m': 10, '0.06-0.2m': 8, '<0.06m': 5 } },
                condition: { label: '4. Discontinuity Condition', options: { 'Very Good': 30, 'Good': 25, 'Fair': 20, 'Poor': 10, 'Very Poor': 0 } },
                groundwater: { label: '5. Groundwater', options: { 'Dry': 15, 'Damp': 10, 'Wet': 7, 'Dripping': 4, 'Flowing': 0 } },
            };
            form.innerHTML = Object.entries(rmrParams).map(([key, val]) => `
                <div>
                    <label class="block text-sm font-medium">${val.label}</label>
                    <select id="rmr-${key}" class="form-select w-full mt-1 p-2 rounded-md">
                        ${Object.entries(val.options).map(([text, value]) => `<option value="${value}">${text}</option>`).join('')}
                    </select>
                </div>
            `).join('');
         }

        const values = Array.from(form.querySelectorAll('select')).map(s => Number(s.value));
        const finalRMR = values.reduce((a, b) => a + b, 0);
        let rockClass = "V - Very Poor";
        if (finalRMR > 80) rockClass = "I - Very Good"; else if (finalRMR > 60) rockClass = "II - Good";
        else if (finalRMR > 40) rockClass = "III - Fair"; else if (finalRMR > 20) rockClass = "IV - Poor";
        
        document.getElementById('rmr-score').textContent = finalRMR;
        document.getElementById('rmr-class').textContent = rockClass;
        this.updateKPI('kpi-rmr', finalRMR, '', 0);
        
        if (document.getElementById('rmr-breakdown-chart')) {
            this.charts.rmrChart = this.createChart('rmr-breakdown-chart', 'bar', {
                labels: ['Strength', 'RQD', 'Spacing', 'Condition', 'Water'],
                datasets: [{ label: 'Rating', data: values, backgroundColor: ['#3b82f6', '#10b981', '#f97316', '#8b5cf6', '#06b6d4'], borderRadius: 4 }]
            }, '', 'Rating Points', { indexAxis: 'y', plugins: { legend: { display: false } }, scales: { x: { max: 30 } } });
        }
    }

    async runMonteCarlo() {
        const simButton = document.getElementById('run-simulation');
        if (!simButton) return;
        
        simButton.disabled = true;
        simButton.querySelector('.btn-text').textContent = 'Simulating...';
        simButton.querySelector('.spinner').classList.remove('hidden');
        
        await new Promise(resolve => setTimeout(resolve, 50));

        const phi_mean = parseFloat(document.getElementById('phi-mean').value);
        const phi_std = parseFloat(document.getElementById('phi-std').value);
        const coh_mean = parseFloat(document.getElementById('coh-mean').value); // Cohesion in kPa
        const coh_std = parseFloat(document.getElementById('coh-std').value);
        const H = parseFloat(document.getElementById('wedge-height').value);
        const unitWeight = parseFloat(document.getElementById('rock-unit-weight').value); // in kN/m3
        const j1_dip = parseFloat(document.getElementById('j1-dip').value);
        const j2_dip = parseFloat(document.getElementById('j2-dip').value);

        const psi_p = Math.max(j1_dip, j2_dip) * Math.PI / 180; // Representative failure plane dip in radians
        
        let failures = 0, fosSum = 0, results = [];
        for (let i = 0; i < 5000; i++) {
            const phi = this.randomNormal(phi_mean, phi_std);
            const coh = Math.max(0, this.randomNormal(coh_mean, coh_std)); // Cohesion in kPa
            
            // Simplified planar failure model for FoS calculation
            if (Math.sin(psi_p) === 0 || Math.tan(psi_p) === 0) continue;
            
            const A = H / Math.sin(psi_p); // Area of failure plane per unit length
            const W = 0.5 * H * (H / Math.tan(psi_p)) * unitWeight; // Weight of wedge per unit length in kN

            if (W <= 0) continue;

            const phi_rad = phi * Math.PI / 180;
            const resistingForce = (coh * A) + (W * Math.cos(psi_p) * Math.tan(phi_rad));
            const drivingForce = W * Math.sin(psi_p);

            const fos = drivingForce > 0 ? resistingForce / drivingForce : Infinity;

            results.push(fos);
            if (fos < 1.0) failures++;
            fosSum += fos;
        }

        const probFailure = (failures / results.length) * 100;
        const meanFos = fosSum / results.length;

        document.getElementById('prob-failure').textContent = `${probFailure.toFixed(1)} %`;
        document.getElementById('mean-fos').textContent = meanFos.toFixed(2);
        
        this.drawStereonet();
        
        const bins = Array(20).fill(0);
        const minFos = Math.min(0, ...results), maxFos = Math.max(3, ...results);
        const binWidth = (maxFos - minFos) / 20;
        results.forEach(fos => {
            const binIndex = Math.floor((fos - minFos) / binWidth);
            bins[Math.min(19, binIndex)]++;
        });

        if(document.getElementById('fos-histogram')){
            this.charts.fosHistogram = this.createChart('fos-histogram', 'bar', {
                labels: bins.map((_, i) => (minFos + i * binWidth).toFixed(2)),
                datasets: [{ label: 'Frequency', data: bins, backgroundColor: '#2563eb', barPercentage: 1.0, categoryPercentage: 1.0 }]
            }, 'Factor of Safety', 'Frequency');
        }

        simButton.disabled = false;
        simButton.querySelector('.btn-text').textContent = 'Run Simulation';
        simButton.querySelector('.spinner').classList.add('hidden');
    }
    
    drawStereonet() {
        const width = 250, height = 250;
        const svg = d3.select("#stereonet").attr("width", width).attr("height", height);
        svg.html(''); // Clear previous
        const radius = Math.min(width, height) / 2 - 10;
        const g = svg.append("g").attr("transform", `translate(${width / 2},${height / 2})`);

        g.append("circle").attr("r", radius).attr("fill", "none").attr("stroke", "#94a3b8");
        g.append("path").attr("d", `M ${-radius},0 A ${radius},${radius} 0 0 1 ${radius},0`).attr("fill", "none").attr("stroke", "#94a3b8");
        g.append("path").attr("d", `M 0,${-radius} A ${radius},${radius} 0 0 1 0,${radius}`).attr("fill", "none").attr("stroke", "#94a3b8");

        const toRadians = (deg) => deg * Math.PI / 180;
        const plotPole = (dip, dipDir) => {
            const r_pole = radius * Math.tan(toRadians(90 - dip) / 2);
            const theta_pole = toRadians(dipDir - 90);
            return { x: r_pole * Math.cos(theta_pole), y: r_pole * Math.sin(theta_pole) };
        };

        const slope_dip = +document.getElementById('slope-dip').value;
        const slope_dipdir = +document.getElementById('slope-dipdir').value;
        const j1_dip = +document.getElementById('j1-dip').value;
        const j1_dipdir = +document.getElementById('j1-dipdir').value;
        const j2_dip = +document.getElementById('j2-dip').value;
        const j2_dipdir = +document.getElementById('j2-dipdir').value;

        const poles = [
            {...plotPole(slope_dip, slope_dipdir), color: "#f87171", label: `Slope: ${slope_dip}°/${slope_dipdir}°`},
            {...plotPole(j1_dip, j1_dipdir), color: "#3b82f6", label: `J1: ${j1_dip}°/${j1_dipdir}°`},
            {...plotPole(j2_dip, j2_dipdir), color: "#16a34a", label: `J2: ${j2_dip}°/${j2_dipdir}°`},
        ];
        
        const tooltip = d3.select("#tooltip");
        g.selectAll("circle.pole").data(poles).enter().append("circle")
            .attr("class", "pole").attr("cx", d => d.x).attr("cy", d => d.y).attr("r", 5)
            .attr("fill", d => d.color)
            .on("mouseover", (event, d) => {
                tooltip.style("opacity", 1).html(d.label)
                  .style("left", (event.pageX + 10) + "px")
                  .style("top", (event.pageY - 28) + "px");
            })
            .on("mouseout", () => tooltip.style("opacity", 0));
    }

    populatePillarFormulas() {
        const select = document.getElementById('pillar-formula');
        if (!select) return;
        select.innerHTML = Object.entries(this.db.formulas).map(([key, val]) => `<option value="${key}">${val.name}</option>`).join('');
        this.updatePillarFormulaInputs();
    }

    updatePillarFormulaInputs() {
        const key = document.getElementById('pillar-formula').value;
        const formula = this.db.formulas[key];
        const container = document.getElementById('formula-custom-inputs');
        if (!container || !formula) return;
        container.innerHTML = formula.params.map(p => `
            <div>
                <label class="block text-sm font-medium">${p.name}</label>
                <input type="number" id="param-${p.id}" value="${p.default}" class="form-input mt-1 w-full rounded-md p-2">
            </div>
        `).join('');
    }

    calculatePillar() {
        const formulaKey = document.getElementById('pillar-formula')?.value;
        if (!formulaKey) return;

        const w = parseFloat(document.getElementById('pillar-width').value);
        const h = parseFloat(document.getElementById('pillar-height').value);
        const depth = parseFloat(document.getElementById('pillar-depth').value);
        const unitWeight = parseFloat(document.getElementById('pillar-unit-weight').value);
        const extraction = (parseFloat(document.getElementById('pillar-extraction').value) || 0) / 100;
        const ucs = parseFloat(document.getElementById('pillar-ucs').value);

        if ([w, h, depth, unitWeight, ucs].some(isNaN) || h <= 0 || w <= 0 || (1 - extraction) <= 0) return;
        
        const formula = this.db.formulas[formulaKey];
        const params = {};
        formula.params.forEach(p => { params[p.id] = parseFloat(document.getElementById(`param-${p.id}`).value); });
        
        const pillarStrength = formula.calc(ucs, w, h, params, depth);
        const pillarStress = ((depth * unitWeight) / 1000) / (1 - extraction); // in MPa
        const fos = pillarStress > 0 ? pillarStrength / pillarStress : Infinity;

        const resultsEl = document.getElementById('pillar-results');
        if (resultsEl) {
            resultsEl.innerHTML = `
                <p>Pillar Strength: <strong>${pillarStrength.toFixed(2)} MPa</strong></p>
                <p>Pillar Stress (Load): <strong>${pillarStress.toFixed(2)} MPa</strong></p>
                <p class="mt-2 text-lg">Factor of Safety (FoS): <strong class="text-2xl ${fos < 1.5 ? 'text-red-600' : 'text-green-600'}">${fos.toFixed(2)}</strong></p>
            `;
        }
        this.updateKPI('kpi-fos', fos);

        if(document.getElementById('pillar-stability-chart')) {
            this.charts.pillarChart = this.createChart('pillar-stability-chart', 'bar', {
                labels: [''],
                datasets: [
                    { label: 'Pillar Stress (Load)', data: [pillarStress], backgroundColor: '#ef4444', borderRadius: 4 },
                    { label: 'Pillar Strength', data: [pillarStrength], backgroundColor: '#22c55e', borderRadius: 4 }
                ]
            }, '', 'Stress (MPa)');
        }
    }
    
    calculateMatchFactor() {
        const bucketVol = parseFloat(document.getElementById('match-bucket')?.value) || 0;
        const truckCap = parseFloat(document.getElementById('match-truck-cap')?.value) || 0;
        const density = parseFloat(document.getElementById('match-density')?.value) || 0;
        const fillFactor = (parseFloat(document.getElementById('match-fill')?.value) || 0) / 100;
        const numTrucks = parseInt(document.getElementById('match-num-trucks')?.value) || 0;
        const loaderCycle_s = parseFloat(document.getElementById('match-loader-cycle')?.value) || 1;
        const truckCycle_min = parseFloat(document.getElementById('match-truck-cycle')?.value) || 1;

        const loaderPayload = bucketVol * density * fillFactor;
        const passes = loaderPayload > 0 ? truckCap / loaderPayload : 0;
        const loadingTime_s = passes * loaderCycle_s;
        const truckCycle_s = truckCycle_min * 60;
        
        const matchFactor = truckCycle_s > 0 ? (numTrucks * loadingTime_s) / truckCycle_s : 0;

        const resultsEl = document.getElementById('match-results');
        if(resultsEl) {
            resultsEl.innerHTML = `
                <p>Passes to Fill: <strong class="text-xl ${passes < 3 || passes > 6 ? 'text-orange-500' : ''}">${passes.toFixed(1)}</strong></p>
                <p>Match Factor: <strong class="text-xl ${matchFactor < 0.9 || matchFactor > 1.1 ? 'text-orange-500' : ''}">${matchFactor.toFixed(2)}</strong></p>
                <p class="text-xs mt-1">${matchFactor > 1.1 ? 'Trucks may wait for loader.' : matchFactor < 0.9 ? 'Loader may wait for trucks.' : 'System is well-balanced.'}</p>
            `;
            resultsEl.classList.remove('hidden');
        }
        this.updateKPI('kpi-mf', matchFactor);
    }

    calculateLoaderProductivity() {
        const bucketVol = parseFloat(document.getElementById('prod-bucket')?.value) || 0;
        const density = parseFloat(document.getElementById('prod-density')?.value) || 0;
        const fillFactor = (parseFloat(document.getElementById('prod-fill')?.value) || 0) / 100;
        const cycle_s = parseFloat(document.getElementById('prod-cycle')?.value) || 1;
        const efficiency = (parseFloat(document.getElementById('prod-eff')?.value) || 0) / 100;
        
        const prod_tph = (bucketVol * density * fillFactor * (3600 / cycle_s) * efficiency);
        const resultsEl = document.getElementById('prod-results');
        if(resultsEl) {
            resultsEl.innerHTML = `<strong>Productivity:</strong> ${this.formatIndian(prod_tph)} tonnes/hour`;
            resultsEl.classList.remove('hidden');
        }
    }

    calculateBlastDesign() {
        const burden = parseFloat(document.getElementById('blast-burden')?.value) || 0;
        const spacing = parseFloat(document.getElementById('blast-spacing')?.value) || 0;
        const diameter_mm = parseFloat(document.getElementById('blast-diameter')?.value) || 0;
        const height = parseFloat(document.getElementById('blast-height')?.value) || 0;
        const rockDensity_tpm3 = parseFloat(document.getElementById('blast-rock-density')?.value) || 0;
        const expDensity_gpcm3 = parseFloat(document.getElementById('blast-exp-density')?.value) || 0;
        const stemming = parseFloat(document.getElementById('blast-stemming')?.value) || 0;
        const subdrill = parseFloat(document.getElementById('blast-subdrill')?.value) || 0;

        const diameter_m = diameter_mm / 1000;
        const expDensity_kgpm3 = expDensity_gpcm3 * 1000;
        const holeLength = height + subdrill;
        const chargeLength = holeLength - stemming;
        const volPerHole = burden * spacing * height;
        const tonnesPerHole = volPerHole * rockDensity_tpm3;
        const expWeightPerHole = (Math.PI * Math.pow(diameter_m / 2, 2) * chargeLength) * expDensity_kgpm3;
        const powderFactor_kgpt = tonnesPerHole > 0 ? expWeightPerHole / tonnesPerHole : 0;

        const resultsEl = document.getElementById('blast-results');
        if (resultsEl) {
            resultsEl.innerHTML = `
                <p>Tonnes per Hole: <strong>${this.formatIndian(tonnesPerHole)} t</strong></p>
                <p>Explosive per Hole: <strong>${this.formatIndian(expWeightPerHole)} kg</strong></p>
                <p>Powder Factor: <strong>${powderFactor_kgpt.toFixed(3)} kg/tonne</strong></p>
            `;
            resultsEl.classList.remove('hidden');
        }
    }
    
    renderRockDB() {
        const tableBody = document.getElementById('rock-db-table');
        if(!tableBody) return;
        let html = '';
        for (const category in this.db.materials) {
            html += `<tr class="bg-slate-200 dark:bg-slate-800 font-semibold"><td colspan="3" class="px-4 py-2">${category}</td></tr>`;
            this.db.materials[category].forEach(mat => {
                html += `<tr><td class="px-4 py-2">${mat.name}</td><td class="px-4 py-2 text-center">${mat.ucs}</td><td class="px-4 py-2 text-center">${mat.density}</td></tr>`;
            });
        }
        tableBody.innerHTML = html;
    }

    // --- UTILITY FUNCTIONS ---
    randomNormal(mean, stdDev) { 
        let u1=0,u2=0; while(u1===0)u1=Math.random(); while(u2===0)u2=Math.random();
        const z0=Math.sqrt(-2.0*Math.log(u1))*Math.cos(2.0*Math.PI*u2); return z0*stdDev+mean;
    }
    
    updateKPI(id, value, unit = '', precision = 2) {
        const el = document.getElementById(id);
        if (el) el.textContent = (typeof value === 'number' ? this.formatIndian(value, precision) : value) + unit;
    }

    formatIndian(val, precision = 2) {
        return val.toLocaleString('en-IN', { maximumFractionDigits: precision });
    }

    createChart(canvasId, type, data, xLabel, yLabel, additionalOptions = {}) {
        const canvas = document.getElementById(canvasId);
        if(!canvas) return null;
        const ctx = canvas.getContext('2d');
        const isDark = document.documentElement.classList.contains('dark');
        const gridColor = isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';
        const textColor = isDark ? '#e2e8f0' : '#0f172a';

        return new Chart(ctx, {
            type: type,
            data: data,
            options: {
                responsive: true, maintainAspectRatio: false,
                interaction: { mode: 'index', intersect: false },
                scales: {
                    x: { title: { display: !!xLabel, text: xLabel, color: textColor }, grid: { color: gridColor }, ticks: { color: textColor } },
                    y: { title: { display: !!yLabel, text: yLabel, color: textColor }, grid: { color: gridColor }, ticks: { color: textColor } }
                },
                plugins: { 
                    legend: { labels: { color: textColor } },
                    tooltip: {
                        backgroundColor: isDark ? '#1e293b' : '#ffffff',
                        titleColor: textColor, bodyColor: textColor,
                        borderColor: gridColor, borderWidth: 1
                    }
                },
                ...additionalOptions
            }
        });
    }
}

// --- APP INITIALIZATION ---
document.addEventListener('DOMContentLoaded', () => {
    window.app = new MiningPlatformApp();
});
</script>
</body>
</html>



